;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 3/13/2017 1:01:17 PM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2001  	537001980
0x0004	0x19750000  	6517
0x0008	0x19A10000  	6561
0x000C	0x19A10000  	6561
0x0010	0x19A10000  	6561
0x0014	0x19A10000  	6561
0x0018	0x19A10000  	6561
0x001C	0x19A10000  	6561
0x0020	0x19A10000  	6561
0x0024	0x19A10000  	6561
0x0028	0x19A10000  	6561
0x002C	0x19A10000  	6561
0x0030	0x19A10000  	6561
0x0034	0x19A10000  	6561
0x0038	0x19A10000  	6561
0x003C	0x19A10000  	6561
0x0040	0x19A10000  	6561
0x0044	0x19A10000  	6561
0x0048	0x19A10000  	6561
0x004C	0x19A10000  	6561
0x0050	0x19A10000  	6561
0x0054	0x19A10000  	6561
0x0058	0x19A10000  	6561
0x005C	0x19A10000  	6561
0x0060	0x19A10000  	6561
0x0064	0x19A10000  	6561
0x0068	0x19A10000  	6561
0x006C	0x19A10000  	6561
0x0070	0x19A10000  	6561
0x0074	0x19A10000  	6561
0x0078	0x19A10000  	6561
0x007C	0x19A10000  	6561
0x0080	0x19A10000  	6561
0x0084	0x19A10000  	6561
0x0088	0x19A10000  	6561
0x008C	0x19A10000  	6561
0x0090	0x19A10000  	6561
0x0094	0x19A10000  	6561
0x0098	0x19A10000  	6561
0x009C	0x19A10000  	6561
0x00A0	0x19A10000  	6561
0x00A4	0x19A10000  	6561
0x00A8	0x19A10000  	6561
0x00AC	0x19A10000  	6561
0x00B0	0x19A10000  	6561
0x00B4	0x19A10000  	6561
0x00B8	0x19A10000  	6561
0x00BC	0x19A10000  	6561
0x00C0	0x19A10000  	6561
0x00C4	0x19A90000  	6569
0x00C8	0x15190000  	5401
0x00CC	0x19A10000  	6561
0x00D0	0x19A10000  	6561
0x00D4	0x19A10000  	6561
0x00D8	0x19A10000  	6561
0x00DC	0x19A10000  	6561
0x00E0	0x1BB10000  	7089
0x00E4	0x19A10000  	6561
0x00E8	0x19A10000  	6561
0x00EC	0x19A10000  	6561
0x00F0	0x19A10000  	6561
0x00F4	0x19A10000  	6561
0x00F8	0x19A10000  	6561
0x00FC	0x19A10000  	6561
0x0100	0x19A10000  	6561
0x0104	0x19A10000  	6561
0x0108	0x19A10000  	6561
0x010C	0x19A10000  	6561
0x0110	0x19A10000  	6561
0x0114	0x19A10000  	6561
0x0118	0x19A10000  	6561
0x011C	0x19A10000  	6561
0x0120	0x19A10000  	6561
0x0124	0x19A10000  	6561
0x0128	0x19A10000  	6561
0x012C	0x19A10000  	6561
0x0130	0x19A10000  	6561
0x0134	0x19A10000  	6561
0x0138	0x19A10000  	6561
0x013C	0x19A10000  	6561
0x0140	0x19A10000  	6561
0x0144	0x19A10000  	6561
0x0148	0x19A10000  	6561
0x014C	0x19A10000  	6561
0x0150	0x19A10000  	6561
0x0154	0x19A10000  	6561
0x0158	0x19A10000  	6561
0x015C	0x19A10000  	6561
0x0160	0x19A10000  	6561
0x0164	0x19A10000  	6561
0x0168	0x19A10000  	6561
0x016C	0x19A10000  	6561
0x0170	0x19A10000  	6561
0x0174	0x19A10000  	6561
0x0178	0x19A10000  	6561
0x017C	0x19A10000  	6561
0x0180	0x19A10000  	6561
0x0184	0x19A10000  	6561
; end of ____SysVT
_main:
;MyProject.c, 90 :: 		void main() {
0x1974	0xF7FFFE4E  BL	5652
0x1978	0xF000F940  BL	7164
0x197C	0xF000F9C6  BL	7436
0x1980	0xF7FFFE36  BL	5616
0x1984	0xF000F982  BL	7308
;MyProject.c, 94 :: 		init_io();
0x1988	0xF7FFF832  BL	_init_io+0
;MyProject.c, 95 :: 		init_lcd();
0x198C	0xF7FFF9AC  BL	_init_lcd+0
;MyProject.c, 96 :: 		i2c_init();
0x1990	0xF7FFF92E  BL	_i2c_init+0
;MyProject.c, 98 :: 		init_magnetometer();
0x1994	0xF7FFFC84  BL	_init_magnetometer+0
;MyProject.c, 100 :: 		while(1) {
L_main4:
;MyProject.c, 101 :: 		asm{ WFI; }
0x1998	0xBF30    WFI
;MyProject.c, 102 :: 		}
0x199A	0xE7FD    B	L_main4
;MyProject.c, 103 :: 		}
L_end_main:
L__main_end_loop:
0x199C	0xE7FE    B	L__main_end_loop
; end of _main
___CC2DW:
;__Lib_System_4XX.c, 43 :: 		
0x09DC	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 45 :: 		
L_loopDW:
;__Lib_System_4XX.c, 46 :: 		
0x09DE	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_4XX.c, 47 :: 		
0x09E2	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_4XX.c, 48 :: 		
0x09E6	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 49 :: 		
0x09EA	0xD1F8    BNE	L_loopDW
;__Lib_System_4XX.c, 51 :: 		
L_end___CC2DW:
0x09EC	0xB001    ADD	SP, SP, #4
0x09EE	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_4XX.c, 85 :: 		
0x09A0	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 87 :: 		
0x09A2	0xF04F0900  MOV	R9, #0
;__Lib_System_4XX.c, 88 :: 		
0x09A6	0xF04F0C00  MOV	R12, #0
;__Lib_System_4XX.c, 89 :: 		
0x09AA	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_4XX.c, 90 :: 		
0x09AE	0xDC04    BGT	L_loopFZs
;__Lib_System_4XX.c, 91 :: 		
0x09B0	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_4XX.c, 92 :: 		
0x09B4	0xDB01    BLT	L_loopFZs
;__Lib_System_4XX.c, 93 :: 		
0x09B6	0x46D4    MOV	R12, R10
;__Lib_System_4XX.c, 94 :: 		
0x09B8	0x46EA    MOV	R10, SP
;__Lib_System_4XX.c, 95 :: 		
L_loopFZs:
;__Lib_System_4XX.c, 96 :: 		
0x09BA	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_4XX.c, 97 :: 		
0x09BE	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 98 :: 		
0x09C2	0xD1FA    BNE	L_loopFZs
;__Lib_System_4XX.c, 99 :: 		
0x09C4	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_4XX.c, 100 :: 		
0x09C8	0xDD05    BLE	L_norep
;__Lib_System_4XX.c, 101 :: 		
0x09CA	0x46E2    MOV	R10, R12
;__Lib_System_4XX.c, 102 :: 		
0x09CC	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_4XX.c, 103 :: 		
0x09D0	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_4XX.c, 104 :: 		
0x09D4	0xE7F1    B	L_loopFZs
;__Lib_System_4XX.c, 105 :: 		
L_norep:
;__Lib_System_4XX.c, 107 :: 		
L_end___FillZeros:
0x09D6	0xB001    ADD	SP, SP, #4
0x09D8	0x4770    BX	LR
; end of ___FillZeros
_init_io:
;MyProject.c, 4 :: 		void init_io() {
;MyProject.c, 6 :: 		RCC_AHB1ENRbits.GPIOCEN = 1; //  |= ((1UL << 2) );
0x09F0	0x2101    MOVS	R1, #1
0x09F2	0xB249    SXTB	R1, R1
0x09F4	0x4878    LDR	R0, [PC, #480]
0x09F6	0x6001    STR	R1, [R0, #0]
;MyProject.c, 7 :: 		RCC_AHB1LPENRbits.GPIOCLPEN = 1;
0x09F8	0x4878    LDR	R0, [PC, #480]
0x09FA	0x6001    STR	R1, [R0, #0]
;MyProject.c, 9 :: 		GPIOC_MODER &= ~((3UL << 2*13));
0x09FC	0x4878    LDR	R0, [PC, #480]
0x09FE	0x6801    LDR	R1, [R0, #0]
0x0A00	0xF06F6040  MVN	R0, #201326592
0x0A04	0x4001    ANDS	R1, R0
0x0A06	0x4876    LDR	R0, [PC, #472]
0x0A08	0x6001    STR	R1, [R0, #0]
;MyProject.c, 10 :: 		GPIOC_MODER &= ~((3UL << 2*4));
0x0A0A	0x4875    LDR	R0, [PC, #468]
0x0A0C	0x6801    LDR	R1, [R0, #0]
0x0A0E	0xF46F7040  MVN	R0, #768
0x0A12	0x4001    ANDS	R1, R0
0x0A14	0x4872    LDR	R0, [PC, #456]
0x0A16	0x6001    STR	R1, [R0, #0]
;MyProject.c, 11 :: 		GPIOC_MODER &= ~((3UL << 2*3));
0x0A18	0x4871    LDR	R0, [PC, #452]
0x0A1A	0x6800    LDR	R0, [R0, #0]
0x0A1C	0xF000013F  AND	R1, R0, #63
0x0A20	0x486F    LDR	R0, [PC, #444]
0x0A22	0x6001    STR	R1, [R0, #0]
;MyProject.c, 12 :: 		GPIOC_MODER &= ~((3UL << 2*2));
0x0A24	0x486E    LDR	R0, [PC, #440]
0x0A26	0x6801    LDR	R1, [R0, #0]
0x0A28	0xF06F0030  MVN	R0, #48
0x0A2C	0x4001    ANDS	R1, R0
0x0A2E	0x486C    LDR	R0, [PC, #432]
0x0A30	0x6001    STR	R1, [R0, #0]
;MyProject.c, 13 :: 		GPIOC_MODER &= ~((3UL << 2*1));
0x0A32	0x486B    LDR	R0, [PC, #428]
0x0A34	0x6801    LDR	R1, [R0, #0]
0x0A36	0xF06F000C  MVN	R0, #12
0x0A3A	0x4001    ANDS	R1, R0
0x0A3C	0x4868    LDR	R0, [PC, #416]
0x0A3E	0x6001    STR	R1, [R0, #0]
;MyProject.c, 14 :: 		GPIOC_MODER &= ~((3UL << 2*0));
0x0A40	0x4867    LDR	R0, [PC, #412]
0x0A42	0x6801    LDR	R1, [R0, #0]
0x0A44	0xF06F0003  MVN	R0, #3
0x0A48	0x4001    ANDS	R1, R0
0x0A4A	0x4865    LDR	R0, [PC, #404]
0x0A4C	0x6001    STR	R1, [R0, #0]
;MyProject.c, 17 :: 		GPIOC_MODER |= ((1UL << 2*13));
0x0A4E	0x4864    LDR	R0, [PC, #400]
0x0A50	0x6800    LDR	R0, [R0, #0]
0x0A52	0xF0406180  ORR	R1, R0, #67108864
0x0A56	0x4862    LDR	R0, [PC, #392]
0x0A58	0x6001    STR	R1, [R0, #0]
;MyProject.c, 18 :: 		GPIOC_MODER |= ((1UL << 2*4));
0x0A5A	0x4861    LDR	R0, [PC, #388]
0x0A5C	0x6800    LDR	R0, [R0, #0]
0x0A5E	0xF4407180  ORR	R1, R0, #256
0x0A62	0x485F    LDR	R0, [PC, #380]
0x0A64	0x6001    STR	R1, [R0, #0]
;MyProject.c, 19 :: 		GPIOC_MODER |= ((1UL << 2*3));
0x0A66	0x485E    LDR	R0, [PC, #376]
0x0A68	0x6800    LDR	R0, [R0, #0]
0x0A6A	0xF0400140  ORR	R1, R0, #64
0x0A6E	0x485C    LDR	R0, [PC, #368]
0x0A70	0x6001    STR	R1, [R0, #0]
;MyProject.c, 20 :: 		GPIOC_MODER |= ((1UL << 2*2));
0x0A72	0x485B    LDR	R0, [PC, #364]
0x0A74	0x6800    LDR	R0, [R0, #0]
0x0A76	0xF0400110  ORR	R1, R0, #16
0x0A7A	0x4859    LDR	R0, [PC, #356]
0x0A7C	0x6001    STR	R1, [R0, #0]
;MyProject.c, 21 :: 		GPIOC_MODER |= ((1UL << 2*1));
0x0A7E	0x4858    LDR	R0, [PC, #352]
0x0A80	0x6800    LDR	R0, [R0, #0]
0x0A82	0xF0400104  ORR	R1, R0, #4
0x0A86	0x4856    LDR	R0, [PC, #344]
0x0A88	0x6001    STR	R1, [R0, #0]
;MyProject.c, 22 :: 		GPIOC_MODER |= ((1UL << 2*0));
0x0A8A	0x4855    LDR	R0, [PC, #340]
0x0A8C	0x6800    LDR	R0, [R0, #0]
0x0A8E	0xF0400101  ORR	R1, R0, #1
0x0A92	0x4853    LDR	R0, [PC, #332]
0x0A94	0x6001    STR	R1, [R0, #0]
;MyProject.c, 34 :: 		GPIOC_OTYPER &= ~((3UL << 13));
0x0A96	0x4853    LDR	R0, [PC, #332]
0x0A98	0x6801    LDR	R1, [R0, #0]
0x0A9A	0xF46F40C0  MVN	R0, #24576
0x0A9E	0x4001    ANDS	R1, R0
0x0AA0	0x4850    LDR	R0, [PC, #320]
0x0AA2	0x6001    STR	R1, [R0, #0]
;MyProject.c, 35 :: 		GPIOC_OTYPER &= ~((3UL << 4));
0x0AA4	0x484F    LDR	R0, [PC, #316]
0x0AA6	0x6801    LDR	R1, [R0, #0]
0x0AA8	0xF06F0030  MVN	R0, #48
0x0AAC	0x4001    ANDS	R1, R0
0x0AAE	0x484D    LDR	R0, [PC, #308]
0x0AB0	0x6001    STR	R1, [R0, #0]
;MyProject.c, 36 :: 		GPIOC_OTYPER &= ~((3UL << 3));
0x0AB2	0x484C    LDR	R0, [PC, #304]
0x0AB4	0x6801    LDR	R1, [R0, #0]
0x0AB6	0xF06F0018  MVN	R0, #24
0x0ABA	0x4001    ANDS	R1, R0
0x0ABC	0x4849    LDR	R0, [PC, #292]
0x0ABE	0x6001    STR	R1, [R0, #0]
;MyProject.c, 37 :: 		GPIOC_OTYPER &= ~((3UL << 2));
0x0AC0	0x4848    LDR	R0, [PC, #288]
0x0AC2	0x6801    LDR	R1, [R0, #0]
0x0AC4	0xF06F000C  MVN	R0, #12
0x0AC8	0x4001    ANDS	R1, R0
0x0ACA	0x4846    LDR	R0, [PC, #280]
0x0ACC	0x6001    STR	R1, [R0, #0]
;MyProject.c, 38 :: 		GPIOC_OTYPER &= ~((3UL << 1));
0x0ACE	0x4845    LDR	R0, [PC, #276]
0x0AD0	0x6801    LDR	R1, [R0, #0]
0x0AD2	0xF06F0006  MVN	R0, #6
0x0AD6	0x4001    ANDS	R1, R0
0x0AD8	0x4842    LDR	R0, [PC, #264]
0x0ADA	0x6001    STR	R1, [R0, #0]
;MyProject.c, 39 :: 		GPIOC_OTYPER &= ~((3UL << 0));
0x0ADC	0x4841    LDR	R0, [PC, #260]
0x0ADE	0x6801    LDR	R1, [R0, #0]
0x0AE0	0xF06F0003  MVN	R0, #3
0x0AE4	0x4001    ANDS	R1, R0
0x0AE6	0x483F    LDR	R0, [PC, #252]
0x0AE8	0x6001    STR	R1, [R0, #0]
;MyProject.c, 42 :: 		GPIOC_OSPEEDR &= ~((3UL << 2*13));
0x0AEA	0x483F    LDR	R0, [PC, #252]
0x0AEC	0x6801    LDR	R1, [R0, #0]
0x0AEE	0xF06F6040  MVN	R0, #201326592
0x0AF2	0x4001    ANDS	R1, R0
0x0AF4	0x483C    LDR	R0, [PC, #240]
0x0AF6	0x6001    STR	R1, [R0, #0]
;MyProject.c, 43 :: 		GPIOC_OSPEEDR &= ~((3UL << 2*4));
0x0AF8	0x483B    LDR	R0, [PC, #236]
0x0AFA	0x6801    LDR	R1, [R0, #0]
0x0AFC	0xF46F7040  MVN	R0, #768
0x0B00	0x4001    ANDS	R1, R0
0x0B02	0x4839    LDR	R0, [PC, #228]
0x0B04	0x6001    STR	R1, [R0, #0]
;MyProject.c, 44 :: 		GPIOC_OSPEEDR &= ~((3UL << 2*3));
0x0B06	0x4838    LDR	R0, [PC, #224]
0x0B08	0x6800    LDR	R0, [R0, #0]
0x0B0A	0xF000013F  AND	R1, R0, #63
0x0B0E	0x4836    LDR	R0, [PC, #216]
0x0B10	0x6001    STR	R1, [R0, #0]
;MyProject.c, 45 :: 		GPIOC_OSPEEDR &= ~((3UL << 2*2));
0x0B12	0x4835    LDR	R0, [PC, #212]
0x0B14	0x6801    LDR	R1, [R0, #0]
0x0B16	0xF06F0030  MVN	R0, #48
0x0B1A	0x4001    ANDS	R1, R0
0x0B1C	0x4832    LDR	R0, [PC, #200]
0x0B1E	0x6001    STR	R1, [R0, #0]
;MyProject.c, 46 :: 		GPIOC_OSPEEDR &= ~((3UL << 2*1));
0x0B20	0x4831    LDR	R0, [PC, #196]
0x0B22	0x6801    LDR	R1, [R0, #0]
0x0B24	0xF06F000C  MVN	R0, #12
0x0B28	0x4001    ANDS	R1, R0
0x0B2A	0x482F    LDR	R0, [PC, #188]
0x0B2C	0x6001    STR	R1, [R0, #0]
;MyProject.c, 47 :: 		GPIOC_OSPEEDR &= ~((3UL << 2*0));
0x0B2E	0x482E    LDR	R0, [PC, #184]
0x0B30	0x6801    LDR	R1, [R0, #0]
0x0B32	0xF06F0003  MVN	R0, #3
0x0B36	0x4001    ANDS	R1, R0
0x0B38	0x482B    LDR	R0, [PC, #172]
0x0B3A	0x6001    STR	R1, [R0, #0]
;MyProject.c, 50 :: 		GPIOC_OSPEEDR |= ((3UL << 2*13));
0x0B3C	0x482A    LDR	R0, [PC, #168]
0x0B3E	0x6800    LDR	R0, [R0, #0]
0x0B40	0xF0406140  ORR	R1, R0, #201326592
0x0B44	0x4828    LDR	R0, [PC, #160]
0x0B46	0x6001    STR	R1, [R0, #0]
;MyProject.c, 51 :: 		GPIOC_OSPEEDR |= ((3UL << 2*4));
0x0B48	0x4827    LDR	R0, [PC, #156]
0x0B4A	0x6800    LDR	R0, [R0, #0]
0x0B4C	0xF4407140  ORR	R1, R0, #768
0x0B50	0x4825    LDR	R0, [PC, #148]
0x0B52	0x6001    STR	R1, [R0, #0]
;MyProject.c, 52 :: 		GPIOC_OSPEEDR |= ((3UL << 2*3));
0x0B54	0x4824    LDR	R0, [PC, #144]
0x0B56	0x6800    LDR	R0, [R0, #0]
0x0B58	0xF04001C0  ORR	R1, R0, #192
0x0B5C	0x4822    LDR	R0, [PC, #136]
0x0B5E	0x6001    STR	R1, [R0, #0]
;MyProject.c, 53 :: 		GPIOC_OSPEEDR |= ((3UL << 2*2));
0x0B60	0x4821    LDR	R0, [PC, #132]
0x0B62	0x6800    LDR	R0, [R0, #0]
0x0B64	0xF0400130  ORR	R1, R0, #48
0x0B68	0x481F    LDR	R0, [PC, #124]
0x0B6A	0x6001    STR	R1, [R0, #0]
;MyProject.c, 54 :: 		GPIOC_OSPEEDR |= ((3UL << 2*1));
0x0B6C	0x481E    LDR	R0, [PC, #120]
0x0B6E	0x6800    LDR	R0, [R0, #0]
0x0B70	0xF040010C  ORR	R1, R0, #12
0x0B74	0x481C    LDR	R0, [PC, #112]
0x0B76	0x6001    STR	R1, [R0, #0]
;MyProject.c, 55 :: 		GPIOC_OSPEEDR |= ((3UL << 2*0));
0x0B78	0x481B    LDR	R0, [PC, #108]
0x0B7A	0x6800    LDR	R0, [R0, #0]
0x0B7C	0xF0400103  ORR	R1, R0, #3
0x0B80	0x4819    LDR	R0, [PC, #100]
0x0B82	0x6001    STR	R1, [R0, #0]
;MyProject.c, 58 :: 		GPIOC_PUPDR   &= ~((3UL << 2*13));
0x0B84	0x4819    LDR	R0, [PC, #100]
0x0B86	0x6801    LDR	R1, [R0, #0]
0x0B88	0xF06F6040  MVN	R0, #201326592
0x0B8C	0x4001    ANDS	R1, R0
0x0B8E	0x4817    LDR	R0, [PC, #92]
0x0B90	0x6001    STR	R1, [R0, #0]
;MyProject.c, 59 :: 		GPIOC_PUPDR   &= ~((3UL << 2*4));
0x0B92	0x4816    LDR	R0, [PC, #88]
0x0B94	0x6801    LDR	R1, [R0, #0]
0x0B96	0xF46F7040  MVN	R0, #768
0x0B9A	0x4001    ANDS	R1, R0
0x0B9C	0x4813    LDR	R0, [PC, #76]
0x0B9E	0x6001    STR	R1, [R0, #0]
;MyProject.c, 60 :: 		GPIOC_PUPDR   &= ~((3UL << 2*3));
0x0BA0	0x4812    LDR	R0, [PC, #72]
0x0BA2	0x6800    LDR	R0, [R0, #0]
0x0BA4	0xF000013F  AND	R1, R0, #63
0x0BA8	0x4810    LDR	R0, [PC, #64]
0x0BAA	0x6001    STR	R1, [R0, #0]
;MyProject.c, 61 :: 		GPIOC_PUPDR   &= ~((3UL << 2*2));
0x0BAC	0x480F    LDR	R0, [PC, #60]
0x0BAE	0x6801    LDR	R1, [R0, #0]
0x0BB0	0xF06F0030  MVN	R0, #48
0x0BB4	0x4001    ANDS	R1, R0
0x0BB6	0x480D    LDR	R0, [PC, #52]
0x0BB8	0x6001    STR	R1, [R0, #0]
;MyProject.c, 62 :: 		GPIOC_PUPDR   &= ~((3UL << 2*1));
0x0BBA	0x480C    LDR	R0, [PC, #48]
0x0BBC	0x6801    LDR	R1, [R0, #0]
0x0BBE	0xF06F000C  MVN	R0, #12
0x0BC2	0x4001    ANDS	R1, R0
0x0BC4	0x4809    LDR	R0, [PC, #36]
0x0BC6	0x6001    STR	R1, [R0, #0]
;MyProject.c, 63 :: 		GPIOC_PUPDR   &= ~((3UL << 2*0));
0x0BC8	0x4808    LDR	R0, [PC, #32]
0x0BCA	0x6801    LDR	R1, [R0, #0]
0x0BCC	0xF06F0003  MVN	R0, #3
0x0BD0	0x4001    ANDS	R1, R0
0x0BD2	0x4806    LDR	R0, [PC, #24]
0x0BD4	0x6001    STR	R1, [R0, #0]
;MyProject.c, 64 :: 		}
L_end_init_io:
0x0BD6	0x4770    BX	LR
0x0BD8	0x06084247  	RCC_AHB1ENRbits+0
0x0BDC	0x0A084247  	RCC_AHB1LPENRbits+0
0x0BE0	0x08004002  	GPIOC_MODER+0
0x0BE4	0x08044002  	GPIOC_OTYPER+0
0x0BE8	0x08084002  	GPIOC_OSPEEDR+0
0x0BEC	0x080C4002  	GPIOC_PUPDR+0
; end of _init_io
_init_lcd:
;lcd.c, 35 :: 		void init_lcd() {
;lcd.c, 36 :: 		START_COMMAND;
0x0CE8	0x2100    MOVS	R1, #0
0x0CEA	0x48AC    LDR	R0, [PC, #688]
0x0CEC	0x6001    STR	R1, [R0, #0]
;lcd.c, 37 :: 		Delay_ms(20);
0x0CEE	0xF2441753  MOVW	R7, #16723
0x0CF2	0xF2C00703  MOVT	R7, #3
0x0CF6	0xBF00    NOP
0x0CF8	0xBF00    NOP
L_init_lcd0:
0x0CFA	0x1E7F    SUBS	R7, R7, #1
0x0CFC	0xD1FD    BNE	L_init_lcd0
0x0CFE	0xBF00    NOP
0x0D00	0xBF00    NOP
0x0D02	0xBF00    NOP
0x0D04	0xBF00    NOP
;lcd.c, 38 :: 		send_word(0x33);
0x0D06	0x48A5    LDR	R0, [PC, #660]
0x0D08	0x6800    LDR	R0, [R0, #0]
0x0D0A	0xF4405100  ORR	R1, R0, #8192
0x0D0E	0x48A3    LDR	R0, [PC, #652]
0x0D10	0x6001    STR	R1, [R0, #0]
0x0D12	0x48A2    LDR	R0, [PC, #648]
0x0D14	0x6801    LDR	R1, [R0, #0]
0x0D16	0xF06F000F  MVN	R0, #15
0x0D1A	0xEA010000  AND	R0, R1, R0, LSL #0
0x0D1E	0xF0400103  ORR	R1, R0, #3
0x0D22	0x489E    LDR	R0, [PC, #632]
0x0D24	0x6001    STR	R1, [R0, #0]
0x0D26	0x489D    LDR	R0, [PC, #628]
0x0D28	0x6801    LDR	R1, [R0, #0]
0x0D2A	0xF46F5000  MVN	R0, #8192
0x0D2E	0x4001    ANDS	R1, R0
0x0D30	0x489A    LDR	R0, [PC, #616]
0x0D32	0x6001    STR	R1, [R0, #0]
0x0D34	0xF2400709  MOVW	R7, #9
0x0D38	0xF2C00700  MOVT	R7, #0
0x0D3C	0xBF00    NOP
0x0D3E	0xBF00    NOP
L_init_lcd2:
0x0D40	0x1E7F    SUBS	R7, R7, #1
0x0D42	0xD1FD    BNE	L_init_lcd2
0x0D44	0xBF00    NOP
0x0D46	0xBF00    NOP
0x0D48	0x4894    LDR	R0, [PC, #592]
0x0D4A	0x6800    LDR	R0, [R0, #0]
0x0D4C	0xF4405100  ORR	R1, R0, #8192
0x0D50	0x4892    LDR	R0, [PC, #584]
0x0D52	0x6001    STR	R1, [R0, #0]
0x0D54	0x4891    LDR	R0, [PC, #580]
0x0D56	0x6801    LDR	R1, [R0, #0]
0x0D58	0xF06F000F  MVN	R0, #15
0x0D5C	0xEA010000  AND	R0, R1, R0, LSL #0
0x0D60	0xF0400103  ORR	R1, R0, #3
0x0D64	0x488D    LDR	R0, [PC, #564]
0x0D66	0x6001    STR	R1, [R0, #0]
0x0D68	0x488C    LDR	R0, [PC, #560]
0x0D6A	0x6801    LDR	R1, [R0, #0]
0x0D6C	0xF46F5000  MVN	R0, #8192
0x0D70	0x4001    ANDS	R1, R0
0x0D72	0x488A    LDR	R0, [PC, #552]
0x0D74	0x6001    STR	R1, [R0, #0]
0x0D76	0xF2400709  MOVW	R7, #9
0x0D7A	0xF2C00700  MOVT	R7, #0
0x0D7E	0xBF00    NOP
0x0D80	0xBF00    NOP
L_init_lcd4:
0x0D82	0x1E7F    SUBS	R7, R7, #1
0x0D84	0xD1FD    BNE	L_init_lcd4
0x0D86	0xBF00    NOP
0x0D88	0xBF00    NOP
;lcd.c, 39 :: 		Delay_ms(20);
0x0D8A	0xF2441753  MOVW	R7, #16723
0x0D8E	0xF2C00703  MOVT	R7, #3
L_init_lcd6:
0x0D92	0x1E7F    SUBS	R7, R7, #1
0x0D94	0xD1FD    BNE	L_init_lcd6
0x0D96	0xBF00    NOP
0x0D98	0xBF00    NOP
0x0D9A	0xBF00    NOP
0x0D9C	0xBF00    NOP
0x0D9E	0xBF00    NOP
0x0DA0	0xBF00    NOP
;lcd.c, 40 :: 		send_word(0x32);
0x0DA2	0x487E    LDR	R0, [PC, #504]
0x0DA4	0x6800    LDR	R0, [R0, #0]
0x0DA6	0xF4405100  ORR	R1, R0, #8192
0x0DAA	0x487C    LDR	R0, [PC, #496]
0x0DAC	0x6001    STR	R1, [R0, #0]
0x0DAE	0x487B    LDR	R0, [PC, #492]
0x0DB0	0x6801    LDR	R1, [R0, #0]
0x0DB2	0xF06F000F  MVN	R0, #15
0x0DB6	0xEA010000  AND	R0, R1, R0, LSL #0
0x0DBA	0xF0400103  ORR	R1, R0, #3
0x0DBE	0x4877    LDR	R0, [PC, #476]
0x0DC0	0x6001    STR	R1, [R0, #0]
0x0DC2	0x4876    LDR	R0, [PC, #472]
0x0DC4	0x6801    LDR	R1, [R0, #0]
0x0DC6	0xF46F5000  MVN	R0, #8192
0x0DCA	0x4001    ANDS	R1, R0
0x0DCC	0x4873    LDR	R0, [PC, #460]
0x0DCE	0x6001    STR	R1, [R0, #0]
0x0DD0	0xF2400709  MOVW	R7, #9
0x0DD4	0xF2C00700  MOVT	R7, #0
L_init_lcd8:
0x0DD8	0x1E7F    SUBS	R7, R7, #1
0x0DDA	0xD1FD    BNE	L_init_lcd8
0x0DDC	0xBF00    NOP
0x0DDE	0xBF00    NOP
0x0DE0	0xBF00    NOP
0x0DE2	0xBF00    NOP
0x0DE4	0x486D    LDR	R0, [PC, #436]
0x0DE6	0x6800    LDR	R0, [R0, #0]
0x0DE8	0xF4405100  ORR	R1, R0, #8192
0x0DEC	0x486B    LDR	R0, [PC, #428]
0x0DEE	0x6001    STR	R1, [R0, #0]
0x0DF0	0x486A    LDR	R0, [PC, #424]
0x0DF2	0x6801    LDR	R1, [R0, #0]
0x0DF4	0xF06F000F  MVN	R0, #15
0x0DF8	0xEA010000  AND	R0, R1, R0, LSL #0
0x0DFC	0xF0400102  ORR	R1, R0, #2
0x0E00	0x4866    LDR	R0, [PC, #408]
0x0E02	0x6001    STR	R1, [R0, #0]
0x0E04	0x4865    LDR	R0, [PC, #404]
0x0E06	0x6801    LDR	R1, [R0, #0]
0x0E08	0xF46F5000  MVN	R0, #8192
0x0E0C	0x4001    ANDS	R1, R0
0x0E0E	0x4863    LDR	R0, [PC, #396]
0x0E10	0x6001    STR	R1, [R0, #0]
0x0E12	0xF2400709  MOVW	R7, #9
0x0E16	0xF2C00700  MOVT	R7, #0
L_init_lcd10:
0x0E1A	0x1E7F    SUBS	R7, R7, #1
0x0E1C	0xD1FD    BNE	L_init_lcd10
0x0E1E	0xBF00    NOP
0x0E20	0xBF00    NOP
0x0E22	0xBF00    NOP
0x0E24	0xBF00    NOP
;lcd.c, 41 :: 		Delay_us(20);
0x0E26	0xF24007D3  MOVW	R7, #211
0x0E2A	0xF2C00700  MOVT	R7, #0
0x0E2E	0xBF00    NOP
0x0E30	0xBF00    NOP
L_init_lcd12:
0x0E32	0x1E7F    SUBS	R7, R7, #1
0x0E34	0xD1FD    BNE	L_init_lcd12
0x0E36	0xBF00    NOP
0x0E38	0xBF00    NOP
0x0E3A	0xBF00    NOP
0x0E3C	0xBF00    NOP
;lcd.c, 42 :: 		send_word(LCD_DISP_INIT);
0x0E3E	0x4857    LDR	R0, [PC, #348]
0x0E40	0x6800    LDR	R0, [R0, #0]
0x0E42	0xF4405100  ORR	R1, R0, #8192
0x0E46	0x4855    LDR	R0, [PC, #340]
0x0E48	0x6001    STR	R1, [R0, #0]
0x0E4A	0x4854    LDR	R0, [PC, #336]
0x0E4C	0x6801    LDR	R1, [R0, #0]
0x0E4E	0xF06F000F  MVN	R0, #15
0x0E52	0xEA010000  AND	R0, R1, R0, LSL #0
0x0E56	0xF0400102  ORR	R1, R0, #2
0x0E5A	0x4850    LDR	R0, [PC, #320]
0x0E5C	0x6001    STR	R1, [R0, #0]
0x0E5E	0x484F    LDR	R0, [PC, #316]
0x0E60	0x6801    LDR	R1, [R0, #0]
0x0E62	0xF46F5000  MVN	R0, #8192
0x0E66	0x4001    ANDS	R1, R0
0x0E68	0x484C    LDR	R0, [PC, #304]
0x0E6A	0x6001    STR	R1, [R0, #0]
0x0E6C	0xF2400709  MOVW	R7, #9
0x0E70	0xF2C00700  MOVT	R7, #0
0x0E74	0xBF00    NOP
0x0E76	0xBF00    NOP
L_init_lcd14:
0x0E78	0x1E7F    SUBS	R7, R7, #1
0x0E7A	0xD1FD    BNE	L_init_lcd14
0x0E7C	0xBF00    NOP
0x0E7E	0xBF00    NOP
0x0E80	0x4846    LDR	R0, [PC, #280]
0x0E82	0x6800    LDR	R0, [R0, #0]
0x0E84	0xF4405100  ORR	R1, R0, #8192
0x0E88	0x4844    LDR	R0, [PC, #272]
0x0E8A	0x6001    STR	R1, [R0, #0]
0x0E8C	0x4843    LDR	R0, [PC, #268]
0x0E8E	0x6801    LDR	R1, [R0, #0]
0x0E90	0xF06F000F  MVN	R0, #15
0x0E94	0xEA010000  AND	R0, R1, R0, LSL #0
0x0E98	0xF0400108  ORR	R1, R0, #8
0x0E9C	0x483F    LDR	R0, [PC, #252]
0x0E9E	0x6001    STR	R1, [R0, #0]
0x0EA0	0x483E    LDR	R0, [PC, #248]
0x0EA2	0x6801    LDR	R1, [R0, #0]
0x0EA4	0xF46F5000  MVN	R0, #8192
0x0EA8	0x4001    ANDS	R1, R0
0x0EAA	0x483C    LDR	R0, [PC, #240]
0x0EAC	0x6001    STR	R1, [R0, #0]
0x0EAE	0xF2400709  MOVW	R7, #9
0x0EB2	0xF2C00700  MOVT	R7, #0
0x0EB6	0xBF00    NOP
0x0EB8	0xBF00    NOP
L_init_lcd16:
0x0EBA	0x1E7F    SUBS	R7, R7, #1
0x0EBC	0xD1FD    BNE	L_init_lcd16
0x0EBE	0xBF00    NOP
0x0EC0	0xBF00    NOP
;lcd.c, 43 :: 		Delay_us(20);
0x0EC2	0xF24007D3  MOVW	R7, #211
0x0EC6	0xF2C00700  MOVT	R7, #0
L_init_lcd18:
0x0ECA	0x1E7F    SUBS	R7, R7, #1
0x0ECC	0xD1FD    BNE	L_init_lcd18
0x0ECE	0xBF00    NOP
0x0ED0	0xBF00    NOP
0x0ED2	0xBF00    NOP
0x0ED4	0xBF00    NOP
0x0ED6	0xBF00    NOP
0x0ED8	0xBF00    NOP
;lcd.c, 44 :: 		send_word(LCD_DISP_OFF);
0x0EDA	0x4830    LDR	R0, [PC, #192]
0x0EDC	0x6800    LDR	R0, [R0, #0]
0x0EDE	0xF4405100  ORR	R1, R0, #8192
0x0EE2	0x482E    LDR	R0, [PC, #184]
0x0EE4	0x6001    STR	R1, [R0, #0]
0x0EE6	0x482D    LDR	R0, [PC, #180]
0x0EE8	0x6801    LDR	R1, [R0, #0]
0x0EEA	0xF06F000F  MVN	R0, #15
0x0EEE	0x4001    ANDS	R1, R0
0x0EF0	0x482A    LDR	R0, [PC, #168]
0x0EF2	0x6001    STR	R1, [R0, #0]
0x0EF4	0x4829    LDR	R0, [PC, #164]
0x0EF6	0x6801    LDR	R1, [R0, #0]
0x0EF8	0xF46F5000  MVN	R0, #8192
0x0EFC	0x4001    ANDS	R1, R0
0x0EFE	0x4827    LDR	R0, [PC, #156]
0x0F00	0x6001    STR	R1, [R0, #0]
0x0F02	0xF2400709  MOVW	R7, #9
0x0F06	0xF2C00700  MOVT	R7, #0
L_init_lcd20:
0x0F0A	0x1E7F    SUBS	R7, R7, #1
0x0F0C	0xD1FD    BNE	L_init_lcd20
0x0F0E	0xBF00    NOP
0x0F10	0xBF00    NOP
0x0F12	0xBF00    NOP
0x0F14	0xBF00    NOP
0x0F16	0x4821    LDR	R0, [PC, #132]
0x0F18	0x6800    LDR	R0, [R0, #0]
0x0F1A	0xF4405100  ORR	R1, R0, #8192
0x0F1E	0x481F    LDR	R0, [PC, #124]
0x0F20	0x6001    STR	R1, [R0, #0]
0x0F22	0x481E    LDR	R0, [PC, #120]
0x0F24	0x6801    LDR	R1, [R0, #0]
0x0F26	0xF06F000F  MVN	R0, #15
0x0F2A	0xEA010000  AND	R0, R1, R0, LSL #0
0x0F2E	0xF0400108  ORR	R1, R0, #8
0x0F32	0x481A    LDR	R0, [PC, #104]
0x0F34	0x6001    STR	R1, [R0, #0]
0x0F36	0x4819    LDR	R0, [PC, #100]
0x0F38	0x6801    LDR	R1, [R0, #0]
0x0F3A	0xF46F5000  MVN	R0, #8192
0x0F3E	0x4001    ANDS	R1, R0
0x0F40	0x4816    LDR	R0, [PC, #88]
0x0F42	0x6001    STR	R1, [R0, #0]
0x0F44	0xF2400709  MOVW	R7, #9
0x0F48	0xF2C00700  MOVT	R7, #0
0x0F4C	0xBF00    NOP
0x0F4E	0xBF00    NOP
L_init_lcd22:
0x0F50	0x1E7F    SUBS	R7, R7, #1
0x0F52	0xD1FD    BNE	L_init_lcd22
0x0F54	0xBF00    NOP
0x0F56	0xBF00    NOP
;lcd.c, 45 :: 		Delay_us(20);
0x0F58	0xF24007D3  MOVW	R7, #211
0x0F5C	0xF2C00700  MOVT	R7, #0
L_init_lcd24:
0x0F60	0x1E7F    SUBS	R7, R7, #1
0x0F62	0xD1FD    BNE	L_init_lcd24
0x0F64	0xBF00    NOP
0x0F66	0xBF00    NOP
0x0F68	0xBF00    NOP
0x0F6A	0xBF00    NOP
0x0F6C	0xBF00    NOP
0x0F6E	0xBF00    NOP
;lcd.c, 46 :: 		send_word(LCD_CLEAR_DISPLAY);
0x0F70	0x480A    LDR	R0, [PC, #40]
0x0F72	0x6800    LDR	R0, [R0, #0]
0x0F74	0xF4405100  ORR	R1, R0, #8192
0x0F78	0x4808    LDR	R0, [PC, #32]
0x0F7A	0x6001    STR	R1, [R0, #0]
0x0F7C	0x4807    LDR	R0, [PC, #28]
0x0F7E	0x6801    LDR	R1, [R0, #0]
0x0F80	0xF06F000F  MVN	R0, #15
0x0F84	0x4001    ANDS	R1, R0
0x0F86	0x4805    LDR	R0, [PC, #20]
0x0F88	0x6001    STR	R1, [R0, #0]
0x0F8A	0x4804    LDR	R0, [PC, #16]
0x0F8C	0x6801    LDR	R1, [R0, #0]
0x0F8E	0xF46F5000  MVN	R0, #8192
0x0F92	0x4001    ANDS	R1, R0
0x0F94	0x4801    LDR	R0, [PC, #4]
0x0F96	0x6001    STR	R1, [R0, #0]
0x0F98	0xF000B802  B	#4
0x0F9C	0x08144002  	GPIOC_ODR+0
0x0FA0	0xF2400709  MOVW	R7, #9
0x0FA4	0xF2C00700  MOVT	R7, #0
L_init_lcd26:
0x0FA8	0x1E7F    SUBS	R7, R7, #1
0x0FAA	0xD1FD    BNE	L_init_lcd26
0x0FAC	0xBF00    NOP
0x0FAE	0xBF00    NOP
0x0FB0	0xBF00    NOP
0x0FB2	0xBF00    NOP
0x0FB4	0x4886    LDR	R0, [PC, #536]
0x0FB6	0x6800    LDR	R0, [R0, #0]
0x0FB8	0xF4405100  ORR	R1, R0, #8192
0x0FBC	0x4884    LDR	R0, [PC, #528]
0x0FBE	0x6001    STR	R1, [R0, #0]
0x0FC0	0x4883    LDR	R0, [PC, #524]
0x0FC2	0x6801    LDR	R1, [R0, #0]
0x0FC4	0xF06F000F  MVN	R0, #15
0x0FC8	0xEA010000  AND	R0, R1, R0, LSL #0
0x0FCC	0xF0400101  ORR	R1, R0, #1
0x0FD0	0x487F    LDR	R0, [PC, #508]
0x0FD2	0x6001    STR	R1, [R0, #0]
0x0FD4	0x487E    LDR	R0, [PC, #504]
0x0FD6	0x6801    LDR	R1, [R0, #0]
0x0FD8	0xF46F5000  MVN	R0, #8192
0x0FDC	0x4001    ANDS	R1, R0
0x0FDE	0x487C    LDR	R0, [PC, #496]
0x0FE0	0x6001    STR	R1, [R0, #0]
0x0FE2	0xF2400709  MOVW	R7, #9
0x0FE6	0xF2C00700  MOVT	R7, #0
L_init_lcd28:
0x0FEA	0x1E7F    SUBS	R7, R7, #1
0x0FEC	0xD1FD    BNE	L_init_lcd28
0x0FEE	0xBF00    NOP
0x0FF0	0xBF00    NOP
0x0FF2	0xBF00    NOP
0x0FF4	0xBF00    NOP
;lcd.c, 47 :: 		Delay_us(900);
0x0FF6	0xF242577E  MOVW	R7, #9598
0x0FFA	0xF2C00700  MOVT	R7, #0
0x0FFE	0xBF00    NOP
0x1000	0xBF00    NOP
L_init_lcd30:
0x1002	0x1E7F    SUBS	R7, R7, #1
0x1004	0xD1FD    BNE	L_init_lcd30
0x1006	0xBF00    NOP
0x1008	0xBF00    NOP
0x100A	0xBF00    NOP
;lcd.c, 48 :: 		send_word(LCD_INC_MODE);
0x100C	0x4870    LDR	R0, [PC, #448]
0x100E	0x6800    LDR	R0, [R0, #0]
0x1010	0xF4405100  ORR	R1, R0, #8192
0x1014	0x486E    LDR	R0, [PC, #440]
0x1016	0x6001    STR	R1, [R0, #0]
0x1018	0x486D    LDR	R0, [PC, #436]
0x101A	0x6801    LDR	R1, [R0, #0]
0x101C	0xF06F000F  MVN	R0, #15
0x1020	0x4001    ANDS	R1, R0
0x1022	0x486B    LDR	R0, [PC, #428]
0x1024	0x6001    STR	R1, [R0, #0]
0x1026	0x486A    LDR	R0, [PC, #424]
0x1028	0x6801    LDR	R1, [R0, #0]
0x102A	0xF46F5000  MVN	R0, #8192
0x102E	0x4001    ANDS	R1, R0
0x1030	0x4867    LDR	R0, [PC, #412]
0x1032	0x6001    STR	R1, [R0, #0]
0x1034	0xF2400709  MOVW	R7, #9
0x1038	0xF2C00700  MOVT	R7, #0
0x103C	0xBF00    NOP
0x103E	0xBF00    NOP
L_init_lcd32:
0x1040	0x1E7F    SUBS	R7, R7, #1
0x1042	0xD1FD    BNE	L_init_lcd32
0x1044	0xBF00    NOP
0x1046	0xBF00    NOP
0x1048	0x4861    LDR	R0, [PC, #388]
0x104A	0x6800    LDR	R0, [R0, #0]
0x104C	0xF4405100  ORR	R1, R0, #8192
0x1050	0x485F    LDR	R0, [PC, #380]
0x1052	0x6001    STR	R1, [R0, #0]
0x1054	0x485E    LDR	R0, [PC, #376]
0x1056	0x6801    LDR	R1, [R0, #0]
0x1058	0xF06F000F  MVN	R0, #15
0x105C	0xEA010000  AND	R0, R1, R0, LSL #0
0x1060	0xF0400106  ORR	R1, R0, #6
0x1064	0x485A    LDR	R0, [PC, #360]
0x1066	0x6001    STR	R1, [R0, #0]
0x1068	0x4859    LDR	R0, [PC, #356]
0x106A	0x6801    LDR	R1, [R0, #0]
0x106C	0xF46F5000  MVN	R0, #8192
0x1070	0x4001    ANDS	R1, R0
0x1072	0x4857    LDR	R0, [PC, #348]
0x1074	0x6001    STR	R1, [R0, #0]
0x1076	0xF2400709  MOVW	R7, #9
0x107A	0xF2C00700  MOVT	R7, #0
0x107E	0xBF00    NOP
0x1080	0xBF00    NOP
L_init_lcd34:
0x1082	0x1E7F    SUBS	R7, R7, #1
0x1084	0xD1FD    BNE	L_init_lcd34
0x1086	0xBF00    NOP
0x1088	0xBF00    NOP
;lcd.c, 49 :: 		Delay_us(20);
0x108A	0xF24007D3  MOVW	R7, #211
0x108E	0xF2C00700  MOVT	R7, #0
L_init_lcd36:
0x1092	0x1E7F    SUBS	R7, R7, #1
0x1094	0xD1FD    BNE	L_init_lcd36
0x1096	0xBF00    NOP
0x1098	0xBF00    NOP
0x109A	0xBF00    NOP
0x109C	0xBF00    NOP
0x109E	0xBF00    NOP
0x10A0	0xBF00    NOP
;lcd.c, 50 :: 		send_word(LCD_DISP_ON);
0x10A2	0x484B    LDR	R0, [PC, #300]
0x10A4	0x6800    LDR	R0, [R0, #0]
0x10A6	0xF4405100  ORR	R1, R0, #8192
0x10AA	0x4849    LDR	R0, [PC, #292]
0x10AC	0x6001    STR	R1, [R0, #0]
0x10AE	0x4848    LDR	R0, [PC, #288]
0x10B0	0x6801    LDR	R1, [R0, #0]
0x10B2	0xF06F000F  MVN	R0, #15
0x10B6	0x4001    ANDS	R1, R0
0x10B8	0x4845    LDR	R0, [PC, #276]
0x10BA	0x6001    STR	R1, [R0, #0]
0x10BC	0x4844    LDR	R0, [PC, #272]
0x10BE	0x6801    LDR	R1, [R0, #0]
0x10C0	0xF46F5000  MVN	R0, #8192
0x10C4	0x4001    ANDS	R1, R0
0x10C6	0x4842    LDR	R0, [PC, #264]
0x10C8	0x6001    STR	R1, [R0, #0]
0x10CA	0xF2400709  MOVW	R7, #9
0x10CE	0xF2C00700  MOVT	R7, #0
L_init_lcd38:
0x10D2	0x1E7F    SUBS	R7, R7, #1
0x10D4	0xD1FD    BNE	L_init_lcd38
0x10D6	0xBF00    NOP
0x10D8	0xBF00    NOP
0x10DA	0xBF00    NOP
0x10DC	0xBF00    NOP
0x10DE	0x483C    LDR	R0, [PC, #240]
0x10E0	0x6800    LDR	R0, [R0, #0]
0x10E2	0xF4405100  ORR	R1, R0, #8192
0x10E6	0x483A    LDR	R0, [PC, #232]
0x10E8	0x6001    STR	R1, [R0, #0]
0x10EA	0x4839    LDR	R0, [PC, #228]
0x10EC	0x6801    LDR	R1, [R0, #0]
0x10EE	0xF06F000F  MVN	R0, #15
0x10F2	0xEA010000  AND	R0, R1, R0, LSL #0
0x10F6	0xF040010C  ORR	R1, R0, #12
0x10FA	0x4835    LDR	R0, [PC, #212]
0x10FC	0x6001    STR	R1, [R0, #0]
0x10FE	0x4834    LDR	R0, [PC, #208]
0x1100	0x6801    LDR	R1, [R0, #0]
0x1102	0xF46F5000  MVN	R0, #8192
0x1106	0x4001    ANDS	R1, R0
0x1108	0x4831    LDR	R0, [PC, #196]
0x110A	0x6001    STR	R1, [R0, #0]
0x110C	0xF2400709  MOVW	R7, #9
0x1110	0xF2C00700  MOVT	R7, #0
0x1114	0xBF00    NOP
0x1116	0xBF00    NOP
L_init_lcd40:
0x1118	0x1E7F    SUBS	R7, R7, #1
0x111A	0xD1FD    BNE	L_init_lcd40
0x111C	0xBF00    NOP
0x111E	0xBF00    NOP
;lcd.c, 51 :: 		Delay_us(20);
0x1120	0xF24007D3  MOVW	R7, #211
0x1124	0xF2C00700  MOVT	R7, #0
L_init_lcd42:
0x1128	0x1E7F    SUBS	R7, R7, #1
0x112A	0xD1FD    BNE	L_init_lcd42
0x112C	0xBF00    NOP
0x112E	0xBF00    NOP
0x1130	0xBF00    NOP
0x1132	0xBF00    NOP
0x1134	0xBF00    NOP
0x1136	0xBF00    NOP
;lcd.c, 52 :: 		send_word(LCD_RETRN_HOME);
0x1138	0x4825    LDR	R0, [PC, #148]
0x113A	0x6800    LDR	R0, [R0, #0]
0x113C	0xF4405100  ORR	R1, R0, #8192
0x1140	0x4823    LDR	R0, [PC, #140]
0x1142	0x6001    STR	R1, [R0, #0]
0x1144	0x4822    LDR	R0, [PC, #136]
0x1146	0x6801    LDR	R1, [R0, #0]
0x1148	0xF06F000F  MVN	R0, #15
0x114C	0x4001    ANDS	R1, R0
0x114E	0x4820    LDR	R0, [PC, #128]
0x1150	0x6001    STR	R1, [R0, #0]
0x1152	0x481F    LDR	R0, [PC, #124]
0x1154	0x6801    LDR	R1, [R0, #0]
0x1156	0xF46F5000  MVN	R0, #8192
0x115A	0x4001    ANDS	R1, R0
0x115C	0x481C    LDR	R0, [PC, #112]
0x115E	0x6001    STR	R1, [R0, #0]
0x1160	0xF2400709  MOVW	R7, #9
0x1164	0xF2C00700  MOVT	R7, #0
L_init_lcd44:
0x1168	0x1E7F    SUBS	R7, R7, #1
0x116A	0xD1FD    BNE	L_init_lcd44
0x116C	0xBF00    NOP
0x116E	0xBF00    NOP
0x1170	0xBF00    NOP
0x1172	0xBF00    NOP
0x1174	0x4816    LDR	R0, [PC, #88]
0x1176	0x6800    LDR	R0, [R0, #0]
0x1178	0xF4405100  ORR	R1, R0, #8192
0x117C	0x4814    LDR	R0, [PC, #80]
0x117E	0x6001    STR	R1, [R0, #0]
0x1180	0x4813    LDR	R0, [PC, #76]
0x1182	0x6801    LDR	R1, [R0, #0]
0x1184	0xF06F000F  MVN	R0, #15
0x1188	0xEA010000  AND	R0, R1, R0, LSL #0
0x118C	0xF0400102  ORR	R1, R0, #2
0x1190	0x480F    LDR	R0, [PC, #60]
0x1192	0x6001    STR	R1, [R0, #0]
0x1194	0x480E    LDR	R0, [PC, #56]
0x1196	0x6801    LDR	R1, [R0, #0]
0x1198	0xF46F5000  MVN	R0, #8192
0x119C	0x4001    ANDS	R1, R0
0x119E	0x480C    LDR	R0, [PC, #48]
0x11A0	0x6001    STR	R1, [R0, #0]
0x11A2	0xF2400709  MOVW	R7, #9
0x11A6	0xF2C00700  MOVT	R7, #0
L_init_lcd46:
0x11AA	0x1E7F    SUBS	R7, R7, #1
0x11AC	0xD1FD    BNE	L_init_lcd46
0x11AE	0xBF00    NOP
0x11B0	0xBF00    NOP
0x11B2	0xBF00    NOP
0x11B4	0xBF00    NOP
;lcd.c, 53 :: 		Delay_us(20);
0x11B6	0xF24007D3  MOVW	R7, #211
0x11BA	0xF2C00700  MOVT	R7, #0
0x11BE	0xBF00    NOP
0x11C0	0xBF00    NOP
L_init_lcd48:
0x11C2	0x1E7F    SUBS	R7, R7, #1
0x11C4	0xD1FD    BNE	L_init_lcd48
0x11C6	0xBF00    NOP
0x11C8	0xBF00    NOP
0x11CA	0xBF00    NOP
0x11CC	0xBF00    NOP
;lcd.c, 54 :: 		}
L_end_init_lcd:
0x11CE	0x4770    BX	LR
0x11D0	0x08144002  	GPIOC_ODR+0
; end of _init_lcd
_i2c_init:
;i2c.c, 155 :: 		void i2c_init() {
0x0BF0	0xB081    SUB	SP, SP, #4
0x0BF2	0xF8CDE000  STR	LR, [SP, #0]
;i2c.c, 157 :: 		enabl = 1;
0x0BF6	0x2101    MOVS	R1, #1
0x0BF8	0xB209    SXTH	R1, R1
0x0BFA	0x482B    LDR	R0, [PC, #172]
0x0BFC	0x8001    STRH	R1, [R0, #0]
;i2c.c, 158 :: 		should_start = 0;
0x0BFE	0x2100    MOVS	R1, #0
0x0C00	0xB209    SXTH	R1, R1
0x0C02	0x482A    LDR	R0, [PC, #168]
0x0C04	0x8001    STRH	R1, [R0, #0]
;i2c.c, 159 :: 		address = 0;
0x0C06	0x2100    MOVS	R1, #0
0x0C08	0x4829    LDR	R0, [PC, #164]
0x0C0A	0x7001    STRB	R1, [R0, #0]
;i2c.c, 160 :: 		RCC_APB1ENRbits.I2C2EN = 1; //enable peripherial clock
0x0C0C	0x2101    MOVS	R1, #1
0x0C0E	0xB249    SXTB	R1, R1
0x0C10	0x4828    LDR	R0, [PC, #160]
0x0C12	0x6001    STR	R1, [R0, #0]
;i2c.c, 161 :: 		i2c_config(); //config pins for i2c
0x0C14	0xF7FFFD86  BL	_i2c_config+0
;i2c.c, 163 :: 		NVIC_IntEnable(IVT_INT_I2C2_EV); //set interrupts
0x0C18	0xF2400031  MOVW	R0, #49
0x0C1C	0xF7FFFDD2  BL	_NVIC_IntEnable+0
;i2c.c, 164 :: 		NVIC_IntEnable(IVT_INT_I2C2_ER); //set interrupts
0x0C20	0xF2400032  MOVW	R0, #50
0x0C24	0xF7FFFDCE  BL	_NVIC_IntEnable+0
;i2c.c, 165 :: 		EnableInterrupts(); //enable interrupts
0x0C28	0xF000FBBA  BL	_EnableInterrupts+0
;i2c.c, 167 :: 		I2C2_CR1bits.PE = 0; //disable per to configure it
0x0C2C	0x2400    MOVS	R4, #0
0x0C2E	0xB264    SXTB	R4, R4
0x0C30	0x4821    LDR	R0, [PC, #132]
0x0C32	0x6004    STR	R4, [R0, #0]
;i2c.c, 168 :: 		I2C2_CR2bits.FREQ = 40;
0x0C34	0x2228    MOVS	R2, #40
0x0C36	0x4921    LDR	R1, [PC, #132]
0x0C38	0x7808    LDRB	R0, [R1, #0]
0x0C3A	0xF3620005  BFI	R0, R2, #0, #6
0x0C3E	0x7008    STRB	R0, [R1, #0]
;i2c.c, 171 :: 		I2C2_CCRbits.F_S = 1;
0x0C40	0x2301    MOVS	R3, #1
0x0C42	0xB25B    SXTB	R3, R3
0x0C44	0x481E    LDR	R0, [PC, #120]
0x0C46	0x6003    STR	R3, [R0, #0]
;i2c.c, 173 :: 		I2C2_CCRbits.CCR = 34;
0x0C48	0x2222    MOVS	R2, #34
0x0C4A	0x491E    LDR	R1, [PC, #120]
0x0C4C	0x8808    LDRH	R0, [R1, #0]
0x0C4E	0xF362000B  BFI	R0, R2, #0, #12
0x0C52	0x8008    STRH	R0, [R1, #0]
;i2c.c, 174 :: 		I2C2_TRISEbits.TRISE = I2C2_CR2bits.FREQ*1000 / maxRTime + 1;
0x0C54	0x4819    LDR	R0, [PC, #100]
0x0C56	0x7800    LDRB	R0, [R0, #0]
0x0C58	0xF3C00005  UBFX	R0, R0, #0, #6
0x0C5C	0xB2C1    UXTB	R1, R0
0x0C5E	0xF24030E8  MOVW	R0, #1000
0x0C62	0xB200    SXTH	R0, R0
0x0C64	0x4341    MULS	R1, R0, R1
0x0C66	0xB209    SXTH	R1, R1
0x0C68	0xF24030E8  MOVW	R0, #1000
0x0C6C	0xB200    SXTH	R0, R0
0x0C6E	0xFB91F0F0  SDIV	R0, R1, R0
0x0C72	0xB200    SXTH	R0, R0
0x0C74	0x1C40    ADDS	R0, R0, #1
0x0C76	0xB2C2    UXTB	R2, R0
0x0C78	0x4913    LDR	R1, [PC, #76]
0x0C7A	0x7808    LDRB	R0, [R1, #0]
0x0C7C	0xF3620005  BFI	R0, R2, #0, #6
0x0C80	0x7008    STRB	R0, [R1, #0]
;i2c.c, 175 :: 		I2C2_CR1bits.PE = 1;
0x0C82	0x480D    LDR	R0, [PC, #52]
0x0C84	0x6003    STR	R3, [R0, #0]
;i2c.c, 176 :: 		NOSTRETCH_I2C = 0;
0x0C86	0x4811    LDR	R0, [PC, #68]
0x0C88	0x6004    STR	R4, [R0, #0]
;i2c.c, 177 :: 		I2C2_CR2bits.ITERREN = 1;
0x0C8A	0x4811    LDR	R0, [PC, #68]
0x0C8C	0x6003    STR	R3, [R0, #0]
;i2c.c, 178 :: 		ITBUFEN_I2C = 1;
0x0C8E	0x4811    LDR	R0, [PC, #68]
0x0C90	0x6003    STR	R3, [R0, #0]
;i2c.c, 179 :: 		ITEVTEN_I2C = 1;
0x0C92	0x4811    LDR	R0, [PC, #68]
0x0C94	0x6003    STR	R3, [R0, #0]
;i2c.c, 180 :: 		I2C2_OAR1.B14 = 1;
0x0C96	0x4811    LDR	R0, [PC, #68]
0x0C98	0x6003    STR	R3, [R0, #0]
;i2c.c, 181 :: 		I2C2_OAR1bits.ADDMODE = 0;
0x0C9A	0x4811    LDR	R0, [PC, #68]
0x0C9C	0x6004    STR	R4, [R0, #0]
;i2c.c, 182 :: 		}
L_end_i2c_init:
0x0C9E	0xF8DDE000  LDR	LR, [SP, #0]
0x0CA2	0xB001    ADD	SP, SP, #4
0x0CA4	0x4770    BX	LR
0x0CA6	0xBF00    NOP
0x0CA8	0x00442000  	_enabl+0
0x0CAC	0x00402000  	_should_start+0
0x0CB0	0x00392000  	_address+0
0x0CB4	0x08584247  	RCC_APB1ENRbits+0
0x0CB8	0x0000420B  	I2C2_CR1bits+0
0x0CBC	0x58044000  	I2C2_CR2bits+0
0x0CC0	0x03BC420B  	I2C2_CCRbits+0
0x0CC4	0x581C4000  	I2C2_CCRbits+0
0x0CC8	0x58204000  	I2C2_TRISEbits+0
0x0CCC	0x001C420B  	I2C2_CR1bits+0
0x0CD0	0x00A0420B  	I2C2_CR2bits+0
0x0CD4	0x00A8420B  	I2C2_CR2bits+0
0x0CD8	0x00A4420B  	I2C2_CR2bits+0
0x0CDC	0x0138420B  	I2C2_OAR1+0
0x0CE0	0x013C420B  	I2C2_OAR1bits+0
; end of _i2c_init
_NVIC_IntEnable:
;__Lib_System_4XX.c, 171 :: 		
; ivt start address is: 0 (R0)
0x07C4	0xB081    SUB	SP, SP, #4
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System_4XX.c, 183 :: 		
0x07C6	0x2804    CMP	R0, #4
0x07C8	0xD106    BNE	L_NVIC_IntEnable6
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 188 :: 		
0x07CA	0x4919    LDR	R1, [PC, #100]
0x07CC	0x6809    LDR	R1, [R1, #0]
0x07CE	0xF4413280  ORR	R2, R1, #65536
0x07D2	0x4917    LDR	R1, [PC, #92]
0x07D4	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 189 :: 		
0x07D6	0xE028    B	L_NVIC_IntEnable7
L_NVIC_IntEnable6:
;__Lib_System_4XX.c, 190 :: 		
; ivt start address is: 0 (R0)
0x07D8	0x2805    CMP	R0, #5
0x07DA	0xD106    BNE	L_NVIC_IntEnable8
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 195 :: 		
0x07DC	0x4914    LDR	R1, [PC, #80]
0x07DE	0x6809    LDR	R1, [R1, #0]
0x07E0	0xF4413200  ORR	R2, R1, #131072
0x07E4	0x4912    LDR	R1, [PC, #72]
0x07E6	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 196 :: 		
0x07E8	0xE01F    B	L_NVIC_IntEnable9
L_NVIC_IntEnable8:
;__Lib_System_4XX.c, 197 :: 		
; ivt start address is: 0 (R0)
0x07EA	0x2806    CMP	R0, #6
0x07EC	0xD106    BNE	L_NVIC_IntEnable10
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 202 :: 		
0x07EE	0x4910    LDR	R1, [PC, #64]
0x07F0	0x6809    LDR	R1, [R1, #0]
0x07F2	0xF4412280  ORR	R2, R1, #262144
0x07F6	0x490E    LDR	R1, [PC, #56]
0x07F8	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 203 :: 		
0x07FA	0xE016    B	L_NVIC_IntEnable11
L_NVIC_IntEnable10:
;__Lib_System_4XX.c, 204 :: 		
; ivt start address is: 0 (R0)
0x07FC	0x280F    CMP	R0, #15
0x07FE	0xD106    BNE	L_NVIC_IntEnable12
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 209 :: 		
0x0800	0x490C    LDR	R1, [PC, #48]
0x0802	0x6809    LDR	R1, [R1, #0]
0x0804	0xF0410202  ORR	R2, R1, #2
0x0808	0x490A    LDR	R1, [PC, #40]
0x080A	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 210 :: 		
0x080C	0xE00D    B	L_NVIC_IntEnable13
L_NVIC_IntEnable12:
;__Lib_System_4XX.c, 211 :: 		
; ivt start address is: 0 (R0)
0x080E	0x2810    CMP	R0, #16
0x0810	0xD30B    BCC	L_NVIC_IntEnable14
;__Lib_System_4XX.c, 216 :: 		
0x0812	0xF2A00410  SUBW	R4, R0, #16
; ivt end address is: 0 (R0)
0x0816	0x0961    LSRS	R1, R4, #5
0x0818	0x008A    LSLS	R2, R1, #2
0x081A	0x4907    LDR	R1, [PC, #28]
0x081C	0x188B    ADDS	R3, R1, R2
;__Lib_System_4XX.c, 217 :: 		
0x081E	0xF004021F  AND	R2, R4, #31
0x0822	0xF04F0101  MOV	R1, #1
0x0826	0x4091    LSLS	R1, R2
0x0828	0x6019    STR	R1, [R3, #0]
;__Lib_System_4XX.c, 218 :: 		
L_NVIC_IntEnable14:
L_NVIC_IntEnable13:
L_NVIC_IntEnable11:
L_NVIC_IntEnable9:
L_NVIC_IntEnable7:
;__Lib_System_4XX.c, 219 :: 		
L_end_NVIC_IntEnable:
0x082A	0xB001    ADD	SP, SP, #4
0x082C	0x4770    BX	LR
0x082E	0xBF00    NOP
0x0830	0xED24E000  	SCB_SHCRS+0
0x0834	0xE010E000  	STK_CTRL+0
0x0838	0xE100E000  	NVIC_ISER0+0
; end of _NVIC_IntEnable
_EnableInterrupts:
;__Lib_System_4XX.c, 122 :: 		
0x13A0	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 125 :: 		
0x13A2	0xF3EF8C10  MRS	R12, #16
0x13A6	0x4660    MOV	R0, R12
; result start address is: 0 (R0)
;__Lib_System_4XX.c, 126 :: 		
0x13A8	0xB662    CPSIE	i
;__Lib_System_4XX.c, 128 :: 		
; result end address is: 0 (R0)
;__Lib_System_4XX.c, 129 :: 		
L_end_EnableInterrupts:
0x13AA	0xB001    ADD	SP, SP, #4
0x13AC	0x4770    BX	LR
; end of _EnableInterrupts
_i2c_config:
;i2c.c, 184 :: 		void i2c_config() {
;i2c.c, 188 :: 		RCC_AHB1ENRbits.GPIOBEN = 1;
0x0724	0x2301    MOVS	R3, #1
0x0726	0xB25B    SXTB	R3, R3
0x0728	0x481E    LDR	R0, [PC, #120]
0x072A	0x6003    STR	R3, [R0, #0]
;i2c.c, 191 :: 		RCC_APB1RSTRbits.I2C2RST = 1;
0x072C	0x481E    LDR	R0, [PC, #120]
0x072E	0x6003    STR	R3, [R0, #0]
;i2c.c, 193 :: 		RCC_APB1RSTRbits.I2C2RST = 0;
0x0730	0x2100    MOVS	R1, #0
0x0732	0xB249    SXTB	R1, R1
0x0734	0x481C    LDR	R0, [PC, #112]
0x0736	0x6001    STR	R1, [R0, #0]
;i2c.c, 197 :: 		GPIOB_OTYPERbits.OT10 = 1;
0x0738	0x481C    LDR	R0, [PC, #112]
0x073A	0x6003    STR	R3, [R0, #0]
;i2c.c, 198 :: 		GPIOB_MODERbits.MODER10 = 2; //alternate function
0x073C	0x2202    MOVS	R2, #2
0x073E	0x491C    LDR	R1, [PC, #112]
0x0740	0x6808    LDR	R0, [R1, #0]
0x0742	0xF3625015  BFI	R0, R2, #20, #2
0x0746	0x6008    STR	R0, [R1, #0]
;i2c.c, 199 :: 		GPIOB_PUPDRbits.PUPDR10 = 1;
0x0748	0x2201    MOVS	R2, #1
0x074A	0x491A    LDR	R1, [PC, #104]
0x074C	0x6808    LDR	R0, [R1, #0]
0x074E	0xF3625015  BFI	R0, R2, #20, #2
0x0752	0x6008    STR	R0, [R1, #0]
;i2c.c, 200 :: 		GPIOB_OSPEEDRbits.OSPEEDR10 = 1;
0x0754	0x2201    MOVS	R2, #1
0x0756	0x4918    LDR	R1, [PC, #96]
0x0758	0x6808    LDR	R0, [R1, #0]
0x075A	0xF3625015  BFI	R0, R2, #20, #2
0x075E	0x6008    STR	R0, [R1, #0]
;i2c.c, 201 :: 		GPIOB_AFRHbits.AFRH10 = 4; //i2c af
0x0760	0x2204    MOVS	R2, #4
0x0762	0x4916    LDR	R1, [PC, #88]
0x0764	0x8808    LDRH	R0, [R1, #0]
0x0766	0xF362200B  BFI	R0, R2, #8, #4
0x076A	0x8008    STRH	R0, [R1, #0]
;i2c.c, 203 :: 		GPIOB_OTYPERbits.OT11 = 1;
0x076C	0x4814    LDR	R0, [PC, #80]
0x076E	0x6003    STR	R3, [R0, #0]
;i2c.c, 204 :: 		GPIOB_MODERbits.MODER11 = 2; //alternate function
0x0770	0x2202    MOVS	R2, #2
0x0772	0x490F    LDR	R1, [PC, #60]
0x0774	0x6808    LDR	R0, [R1, #0]
0x0776	0xF3625097  BFI	R0, R2, #22, #2
0x077A	0x6008    STR	R0, [R1, #0]
;i2c.c, 205 :: 		GPIOB_PUPDRbits.PUPDR11 = 1;
0x077C	0x2201    MOVS	R2, #1
0x077E	0x490D    LDR	R1, [PC, #52]
0x0780	0x6808    LDR	R0, [R1, #0]
0x0782	0xF3625097  BFI	R0, R2, #22, #2
0x0786	0x6008    STR	R0, [R1, #0]
;i2c.c, 206 :: 		GPIOB_OSPEEDRbits.OSPEEDR11 = 1;
0x0788	0x2201    MOVS	R2, #1
0x078A	0x490B    LDR	R1, [PC, #44]
0x078C	0x6808    LDR	R0, [R1, #0]
0x078E	0xF3625097  BFI	R0, R2, #22, #2
0x0792	0x6008    STR	R0, [R1, #0]
;i2c.c, 207 :: 		GPIOB_AFRHbits.AFRH11 = 4; //i2c af
0x0794	0x2204    MOVS	R2, #4
0x0796	0x4909    LDR	R1, [PC, #36]
0x0798	0x8808    LDRH	R0, [R1, #0]
0x079A	0xF362300F  BFI	R0, R2, #12, #4
0x079E	0x8008    STRH	R0, [R1, #0]
;i2c.c, 208 :: 		}
L_end_i2c_config:
0x07A0	0x4770    BX	LR
0x07A2	0xBF00    NOP
0x07A4	0x06044247  	RCC_AHB1ENRbits+0
0x07A8	0x04584247  	RCC_APB1RSTRbits+0
0x07AC	0x80A84240  	GPIOB_OTYPERbits+0
0x07B0	0x04004002  	GPIOB_MODERbits+0
0x07B4	0x040C4002  	GPIOB_PUPDRbits+0
0x07B8	0x04084002  	GPIOB_OSPEEDRbits+0
0x07BC	0x04244002  	GPIOB_AFRHbits+0
0x07C0	0x80AC4240  	GPIOB_OTYPERbits+0
; end of _i2c_config
_init_magnetometer:
;magnetometer.c, 227 :: 		void init_magnetometer() {
0x12A0	0xB082    SUB	SP, SP, #8
0x12A2	0xF8CDE000  STR	LR, [SP, #0]
;magnetometer.c, 228 :: 		char creg1 = 0b10001001; // ACTIVE MODE, 2.5Hz, 32 Over Sample Ratio
0x12A6	0x2089    MOVS	R0, #137
0x12A8	0xF88D0004  STRB	R0, [SP, #4]
0x12AC	0x20A0    MOVS	R0, #160
0x12AE	0xF88D0005  STRB	R0, [SP, #5]
;magnetometer.c, 229 :: 		char creg2 = 0b10100000; // AUTO_RESET, RAW
;magnetometer.c, 234 :: 		write_reg(CTRL_REG1_ADDR, &creg1, 1);
0x12B2	0xA801    ADD	R0, SP, #4
0x12B4	0x2201    MOVS	R2, #1
0x12B6	0xB212    SXTH	R2, R2
0x12B8	0x4601    MOV	R1, R0
0x12BA	0x2010    MOVS	R0, #16
0x12BC	0xF7FFFA16  BL	_write_reg+0
;magnetometer.c, 235 :: 		Delay_us(500);
0x12C0	0xF24147D3  MOVW	R7, #5331
0x12C4	0xF2C00700  MOVT	R7, #0
L_init_magnetometer35:
0x12C8	0x1E7F    SUBS	R7, R7, #1
0x12CA	0xD1FD    BNE	L_init_magnetometer35
0x12CC	0xBF00    NOP
0x12CE	0xBF00    NOP
0x12D0	0xBF00    NOP
0x12D2	0xBF00    NOP
0x12D4	0xBF00    NOP
0x12D6	0xBF00    NOP
;magnetometer.c, 236 :: 		write_reg(CTRL_REG2_ADDR, &creg2, 1);
0x12D8	0xF10D0005  ADD	R0, SP, #5
0x12DC	0x2201    MOVS	R2, #1
0x12DE	0xB212    SXTH	R2, R2
0x12E0	0x4601    MOV	R1, R0
0x12E2	0x2011    MOVS	R0, #17
0x12E4	0xF7FFFA02  BL	_write_reg+0
;magnetometer.c, 237 :: 		Delay_us(500);
0x12E8	0xF24147D3  MOVW	R7, #5331
0x12EC	0xF2C00700  MOVT	R7, #0
L_init_magnetometer37:
0x12F0	0x1E7F    SUBS	R7, R7, #1
0x12F2	0xD1FD    BNE	L_init_magnetometer37
0x12F4	0xBF00    NOP
0x12F6	0xBF00    NOP
0x12F8	0xBF00    NOP
0x12FA	0xBF00    NOP
0x12FC	0xBF00    NOP
0x12FE	0xBF00    NOP
;magnetometer.c, 238 :: 		is_configured = 1;
0x1300	0x2101    MOVS	R1, #1
0x1302	0xB209    SXTH	R1, R1
0x1304	0x4803    LDR	R0, [PC, #12]
0x1306	0x8001    STRH	R1, [R0, #0]
;magnetometer.c, 239 :: 		configure_exti();
0x1308	0xF7FFF878  BL	_configure_exti+0
;magnetometer.c, 241 :: 		}
L_end_init_magnetometer:
0x130C	0xF8DDE000  LDR	LR, [SP, #0]
0x1310	0xB002    ADD	SP, SP, #8
0x1312	0x4770    BX	LR
0x1314	0x00022000  	_is_configured+0
; end of _init_magnetometer
_write_reg:
;magnetometer.c, 183 :: 		void write_reg(char reg, char* d, int cnt) {
0x06EC	0xB084    SUB	SP, SP, #16
0x06EE	0xF8CDE000  STR	LR, [SP, #0]
0x06F2	0xF88D0004  STRB	R0, [SP, #4]
0x06F6	0x9102    STR	R1, [SP, #8]
0x06F8	0xF8AD200C  STRH	R2, [SP, #12]
;magnetometer.c, 184 :: 		i2c_start_async();
0x06FC	0xF000F8AA  BL	_i2c_start_async+0
;magnetometer.c, 185 :: 		send_reg_addr_async(reg);
0x0700	0xF89D0004  LDRB	R0, [SP, #4]
0x0704	0xF000F89A  BL	_send_reg_addr_async+0
;magnetometer.c, 186 :: 		i2c_send_addr_async(0x0E, 0);
0x0708	0x2100    MOVS	R1, #0
0x070A	0xB209    SXTH	R1, R1
0x070C	0x200E    MOVS	R0, #14
0x070E	0xF7FFFFE3  BL	_i2c_send_addr_async+0
;magnetometer.c, 187 :: 		i2c_send_async(d, cnt);
0x0712	0xF9BD100C  LDRSH	R1, [SP, #12]
0x0716	0x9802    LDR	R0, [SP, #8]
0x0718	0xF7FFFE24  BL	_i2c_send_async+0
;magnetometer.c, 188 :: 		}
L_end_write_reg:
0x071C	0xF8DDE000  LDR	LR, [SP, #0]
0x0720	0xB004    ADD	SP, SP, #16
0x0722	0x4770    BX	LR
; end of _write_reg
_i2c_start_async:
;i2c.c, 118 :: 		void i2c_start_async() {
;i2c.c, 119 :: 		should_start = 1; //set start flag
0x0854	0x2101    MOVS	R1, #1
0x0856	0xB209    SXTH	R1, R1
0x0858	0x4801    LDR	R0, [PC, #4]
0x085A	0x8001    STRH	R1, [R0, #0]
;i2c.c, 120 :: 		}
L_end_i2c_start_async:
0x085C	0x4770    BX	LR
0x085E	0xBF00    NOP
0x0860	0x00402000  	_should_start+0
; end of _i2c_start_async
_send_reg_addr_async:
;magnetometer.c, 154 :: 		void send_reg_addr_async(char reg_a) {
; reg_a start address is: 0 (R0)
; reg_a end address is: 0 (R0)
; reg_a start address is: 0 (R0)
;magnetometer.c, 155 :: 		reg_send = 0;
0x083C	0x2200    MOVS	R2, #0
0x083E	0xB212    SXTH	R2, R2
0x0840	0x4902    LDR	R1, [PC, #8]
0x0842	0x800A    STRH	R2, [R1, #0]
;magnetometer.c, 156 :: 		reg_addr = reg_a;
0x0844	0x4902    LDR	R1, [PC, #8]
0x0846	0x7008    STRB	R0, [R1, #0]
; reg_a end address is: 0 (R0)
;magnetometer.c, 157 :: 		}
L_end_send_reg_addr_async:
0x0848	0x4770    BX	LR
0x084A	0xBF00    NOP
0x084C	0x00002000  	_reg_send+0
0x0850	0x00462000  	_reg_addr+0
; end of _send_reg_addr_async
_i2c_send_addr_async:
;i2c.c, 122 :: 		void i2c_send_addr_async(char addr, int r_w) {
; r_w start address is: 4 (R1)
; addr start address is: 0 (R0)
; r_w end address is: 4 (R1)
; addr end address is: 0 (R0)
; addr start address is: 0 (R0)
; r_w start address is: 4 (R1)
;i2c.c, 123 :: 		address = addr; //remember address
0x06D8	0x4A02    LDR	R2, [PC, #8]
0x06DA	0x7010    STRB	R0, [R2, #0]
; addr end address is: 0 (R0)
;i2c.c, 124 :: 		r_notw = r_w; //remember r_w flag
0x06DC	0x4A02    LDR	R2, [PC, #8]
0x06DE	0x8011    STRH	R1, [R2, #0]
; r_w end address is: 4 (R1)
;i2c.c, 125 :: 		}
L_end_i2c_send_addr_async:
0x06E0	0x4770    BX	LR
0x06E2	0xBF00    NOP
0x06E4	0x00392000  	_address+0
0x06E8	0x00422000  	_r_notw+0
; end of _i2c_send_addr_async
_i2c_send_async:
;i2c.c, 127 :: 		int i2c_send_async(char* d, int num) {
; num start address is: 4 (R1)
; d start address is: 0 (R0)
0x0364	0xB081    SUB	SP, SP, #4
0x0366	0xF8CDE000  STR	LR, [SP, #0]
; num end address is: 4 (R1)
; d end address is: 0 (R0)
; d start address is: 0 (R0)
; num start address is: 4 (R1)
;i2c.c, 128 :: 		transfer = d;
0x036A	0x4A0D    LDR	R2, [PC, #52]
0x036C	0x6010    STR	R0, [R2, #0]
; d end address is: 0 (R0)
;i2c.c, 129 :: 		transfer_count = num;
0x036E	0x4A0D    LDR	R2, [PC, #52]
0x0370	0x8011    STRH	R1, [R2, #0]
; num end address is: 4 (R1)
;i2c.c, 132 :: 		address != 0) { //if start_async and send_addr_async called before this, actually start
0x0372	0x4A0D    LDR	R2, [PC, #52]
0x0374	0xF9B22000  LDRSH	R2, [R2, #0]
0x0378	0x2A01    CMP	R2, #1
0x037A	0xD10B    BNE	L__i2c_send_async29
0x037C	0x4A0B    LDR	R2, [PC, #44]
0x037E	0x7812    LDRB	R2, [R2, #0]
0x0380	0xB142    CBZ	R2, L__i2c_send_async28
L__i2c_send_async27:
;i2c.c, 133 :: 		should_start = 0;
0x0382	0x2300    MOVS	R3, #0
0x0384	0xB21B    SXTH	R3, R3
0x0386	0x4A08    LDR	R2, [PC, #32]
0x0388	0x8013    STRH	R3, [R2, #0]
;i2c.c, 134 :: 		i2c_start_();
0x038A	0xF000FF59  BL	_i2c_start_+0
;i2c.c, 135 :: 		return 0;
0x038E	0x2000    MOVS	R0, #0
0x0390	0xB200    SXTH	R0, R0
0x0392	0xE001    B	L_end_i2c_send_async
;i2c.c, 132 :: 		address != 0) { //if start_async and send_addr_async called before this, actually start
L__i2c_send_async29:
L__i2c_send_async28:
;i2c.c, 137 :: 		return 1;
0x0394	0x2001    MOVS	R0, #1
0x0396	0xB200    SXTH	R0, R0
;i2c.c, 139 :: 		}
L_end_i2c_send_async:
0x0398	0xF8DDE000  LDR	LR, [SP, #0]
0x039C	0xB001    ADD	SP, SP, #4
0x039E	0x4770    BX	LR
0x03A0	0x003C2000  	_transfer+0
0x03A4	0x003A2000  	_transfer_count+0
0x03A8	0x00402000  	_should_start+0
0x03AC	0x00392000  	_address+0
; end of _i2c_send_async
_i2c_start_:
;i2c.c, 93 :: 		void i2c_start_() {
0x1240	0xB081    SUB	SP, SP, #4
0x1242	0xF8CDE000  STR	LR, [SP, #0]
;i2c.c, 94 :: 		NVIC_IntEnable(IVT_INT_I2C2_EV);
0x1246	0xF2400031  MOVW	R0, #49
0x124A	0xF7FFFABB  BL	_NVIC_IntEnable+0
;i2c.c, 95 :: 		START_TR = 1;
0x124E	0x2101    MOVS	R1, #1
0x1250	0xB249    SXTB	R1, R1
0x1252	0x4803    LDR	R0, [PC, #12]
0x1254	0x6001    STR	R1, [R0, #0]
;i2c.c, 96 :: 		}
L_end_i2c_start_:
0x1256	0xF8DDE000  LDR	LR, [SP, #0]
0x125A	0xB001    ADD	SP, SP, #4
0x125C	0x4770    BX	LR
0x125E	0xBF00    NOP
0x1260	0x0020420B  	I2C2_CR1bits+0
; end of _i2c_start_
_configure_exti:
;magnetometer.c, 206 :: 		void configure_exti() {
0x03FC	0xB083    SUB	SP, SP, #12
0x03FE	0xF8CDE000  STR	LR, [SP, #0]
;magnetometer.c, 208 :: 		RCC_APB2ENRbits.SYSCFGEN = 1; //enable syscfg periph
0x0402	0x2101    MOVS	R1, #1
0x0404	0xB249    SXTB	R1, R1
0x0406	0x481D    LDR	R0, [PC, #116]
0x0408	0x6001    STR	R1, [R0, #0]
;magnetometer.c, 209 :: 		RCC_AHB1ENRbits.GPIOEEN = 1; //enable PE clock
0x040A	0x481D    LDR	R0, [PC, #116]
0x040C	0x6001    STR	R1, [R0, #0]
;magnetometer.c, 210 :: 		GPIOE_MODERbits.MODER10 = 0; //set PE10 as input
0x040E	0x2200    MOVS	R2, #0
0x0410	0x491C    LDR	R1, [PC, #112]
0x0412	0x6808    LDR	R0, [R1, #0]
0x0414	0xF3625015  BFI	R0, R2, #20, #2
0x0418	0x6008    STR	R0, [R1, #0]
;magnetometer.c, 211 :: 		GPIOE_PUPDRbits.PUPDR10 = 0x1; //pullup
0x041A	0x2201    MOVS	R2, #1
0x041C	0x491A    LDR	R1, [PC, #104]
0x041E	0x6808    LDR	R0, [R1, #0]
0x0420	0xF3625015  BFI	R0, R2, #20, #2
0x0424	0x6008    STR	R0, [R1, #0]
;magnetometer.c, 212 :: 		GPIOE_OTYPERbits.OT10 = 0x0;
0x0426	0x2100    MOVS	R1, #0
0x0428	0xB249    SXTB	R1, R1
0x042A	0x4818    LDR	R0, [PC, #96]
0x042C	0x6001    STR	R1, [R0, #0]
;magnetometer.c, 213 :: 		GPIOE_OSPEEDRbits.OSPEEDR10 = 0x2;
0x042E	0x2202    MOVS	R2, #2
0x0430	0x4917    LDR	R1, [PC, #92]
0x0432	0x6808    LDR	R0, [R1, #0]
0x0434	0xF3625015  BFI	R0, R2, #20, #2
0x0438	0x6008    STR	R0, [R1, #0]
;magnetometer.c, 215 :: 		SYSCFG_EXTICR3bits.EXTI10 = 0x4; //set PE10 to be EXTI pin
0x043A	0x2204    MOVS	R2, #4
0x043C	0x4915    LDR	R1, [PC, #84]
0x043E	0x8808    LDRH	R0, [R1, #0]
0x0440	0xF362200B  BFI	R0, R2, #8, #4
0x0444	0x8008    STRH	R0, [R1, #0]
;magnetometer.c, 216 :: 		EXTI_FTSR = 0x00000000;
0x0446	0x2100    MOVS	R1, #0
0x0448	0x4813    LDR	R0, [PC, #76]
0x044A	0x6001    STR	R1, [R0, #0]
;magnetometer.c, 217 :: 		EXTI_RTSR = 0x00000400; //detect rising edge
0x044C	0xF2404100  MOVW	R1, #1024
0x0450	0x4812    LDR	R0, [PC, #72]
0x0452	0x6001    STR	R1, [R0, #0]
;magnetometer.c, 218 :: 		EXTI_IMR |= 0x00000400; //unmask bit
0x0454	0x4812    LDR	R0, [PC, #72]
0x0456	0x6800    LDR	R0, [R0, #0]
0x0458	0xF4406180  ORR	R1, R0, #1024
0x045C	0x4810    LDR	R0, [PC, #64]
0x045E	0x6001    STR	R1, [R0, #0]
;magnetometer.c, 219 :: 		NVIC_IntEnable(IVT_INT_EXTI15_10);
0x0460	0xF2400038  MOVW	R0, #56
0x0464	0xF000F9AE  BL	_NVIC_IntEnable+0
;magnetometer.c, 220 :: 		EnableInterrupts();
0x0468	0xF000FF9A  BL	_EnableInterrupts+0
;magnetometer.c, 222 :: 		read_xyz(xyz); //we need to read xyz to clear INT1 bit because if its set we won't be able to detect rising edge
0x046C	0xA801    ADD	R0, SP, #4
0x046E	0xF7FFFEBB  BL	_read_xyz+0
;magnetometer.c, 223 :: 		}
L_end_configure_exti:
0x0472	0xF8DDE000  LDR	LR, [SP, #0]
0x0476	0xB003    ADD	SP, SP, #12
0x0478	0x4770    BX	LR
0x047A	0xBF00    NOP
0x047C	0x08B84247  	RCC_APB2ENRbits+0
0x0480	0x06104247  	RCC_AHB1ENRbits+0
0x0484	0x10004002  	GPIOE_MODERbits+0
0x0488	0x100C4002  	GPIOE_PUPDRbits+0
0x048C	0x00A84242  	GPIOE_OTYPERbits+0
0x0490	0x10084002  	GPIOE_OSPEEDRbits+0
0x0494	0x38104001  	SYSCFG_EXTICR3bits+0
0x0498	0x3C0C4001  	EXTI_FTSR+0
0x049C	0x3C084001  	EXTI_RTSR+0
0x04A0	0x3C004001  	EXTI_IMR+0
; end of _configure_exti
_read_xyz:
;magnetometer.c, 191 :: 		int read_xyz(char *d) {
; d start address is: 0 (R0)
0x01E8	0xB083    SUB	SP, SP, #12
0x01EA	0xF8CDE000  STR	LR, [SP, #0]
; d end address is: 0 (R0)
; d start address is: 0 (R0)
;magnetometer.c, 192 :: 		int dreg = 1;
0x01EE	0xF2400101  MOVW	R1, #1
0x01F2	0xF8AD1008  STRH	R1, [SP, #8]
;magnetometer.c, 193 :: 		int bitt = 0;
;magnetometer.c, 195 :: 		read_reg(DR_STATUS_ADDR, &dreg, 1);
0x01F6	0xA902    ADD	R1, SP, #8
0x01F8	0x9001    STR	R0, [SP, #4]
0x01FA	0x2201    MOVS	R2, #1
0x01FC	0xB212    SXTH	R2, R2
0x01FE	0x2000    MOVS	R0, #0
0x0200	0xF001F830  BL	_read_reg+0
0x0204	0x9801    LDR	R0, [SP, #4]
;magnetometer.c, 196 :: 		Delay_ms(2);
0x0206	0xF2453753  MOVW	R7, #21331
0x020A	0xF2C00700  MOVT	R7, #0
0x020E	0xBF00    NOP
0x0210	0xBF00    NOP
L_read_xyz30:
0x0212	0x1E7F    SUBS	R7, R7, #1
0x0214	0xD1FD    BNE	L_read_xyz30
0x0216	0xBF00    NOP
0x0218	0xBF00    NOP
0x021A	0xBF00    NOP
0x021C	0xBF00    NOP
;magnetometer.c, 197 :: 		bitt = dreg >> 3 & 1;
0x021E	0xF9BD1008  LDRSH	R1, [SP, #8]
0x0222	0x10C9    ASRS	R1, R1, #3
0x0224	0xB209    SXTH	R1, R1
0x0226	0xF0010101  AND	R1, R1, #1
0x022A	0xB209    SXTH	R1, R1
; bitt start address is: 8 (R2)
0x022C	0xB20A    SXTH	R2, R1
;magnetometer.c, 198 :: 		if(bitt != 0) {
0x022E	0xB1A9    CBZ	R1, L_read_xyz32
;magnetometer.c, 199 :: 		read_reg(OUT_X_MSB_ADDR, d, 6);
0x0230	0xF8AD2004  STRH	R2, [SP, #4]
0x0234	0x2206    MOVS	R2, #6
0x0236	0xB212    SXTH	R2, R2
0x0238	0x4601    MOV	R1, R0
; d end address is: 0 (R0)
0x023A	0x2001    MOVS	R0, #1
0x023C	0xF001F812  BL	_read_reg+0
0x0240	0xF9BD2004  LDRSH	R2, [SP, #4]
;magnetometer.c, 200 :: 		Delay_ms(2);
0x0244	0xF2453753  MOVW	R7, #21331
0x0248	0xF2C00700  MOVT	R7, #0
0x024C	0xBF00    NOP
0x024E	0xBF00    NOP
L_read_xyz33:
0x0250	0x1E7F    SUBS	R7, R7, #1
0x0252	0xD1FD    BNE	L_read_xyz33
0x0254	0xBF00    NOP
0x0256	0xBF00    NOP
0x0258	0xBF00    NOP
0x025A	0xBF00    NOP
;magnetometer.c, 201 :: 		}
L_read_xyz32:
;magnetometer.c, 203 :: 		return bitt;
0x025C	0xB210    SXTH	R0, R2
; bitt end address is: 8 (R2)
;magnetometer.c, 204 :: 		}
L_end_read_xyz:
0x025E	0xF8DDE000  LDR	LR, [SP, #0]
0x0262	0xB003    ADD	SP, SP, #12
0x0264	0x4770    BX	LR
; end of _read_xyz
_read_reg:
;magnetometer.c, 176 :: 		void read_reg(char reg, char* d, int cnt) {
0x1264	0xB084    SUB	SP, SP, #16
0x1266	0xF8CDE000  STR	LR, [SP, #0]
0x126A	0xF88D0004  STRB	R0, [SP, #4]
0x126E	0x9102    STR	R1, [SP, #8]
0x1270	0xF8AD200C  STRH	R2, [SP, #12]
;magnetometer.c, 177 :: 		i2c_start_async();
0x1274	0xF7FFFAEE  BL	_i2c_start_async+0
;magnetometer.c, 178 :: 		send_reg_addr_async(reg);
0x1278	0xF89D0004  LDRB	R0, [SP, #4]
0x127C	0xF7FFFADE  BL	_send_reg_addr_async+0
;magnetometer.c, 179 :: 		i2c_send_addr_async(0x0E, 1);
0x1280	0x2101    MOVS	R1, #1
0x1282	0xB209    SXTH	R1, R1
0x1284	0x200E    MOVS	R0, #14
0x1286	0xF7FFFA27  BL	_i2c_send_addr_async+0
;magnetometer.c, 180 :: 		i2c_recv_async(d, cnt);
0x128A	0xF9BD100C  LDRSH	R1, [SP, #12]
0x128E	0x9802    LDR	R0, [SP, #8]
0x1290	0xF7FFF88E  BL	_i2c_recv_async+0
;magnetometer.c, 181 :: 		}
L_end_read_reg:
0x1294	0xF8DDE000  LDR	LR, [SP, #0]
0x1298	0xB004    ADD	SP, SP, #16
0x129A	0x4770    BX	LR
; end of _read_reg
_i2c_recv_async:
;i2c.c, 141 :: 		int i2c_recv_async(char* d, int num) {
; num start address is: 4 (R1)
; d start address is: 0 (R0)
0x03B0	0xB081    SUB	SP, SP, #4
0x03B2	0xF8CDE000  STR	LR, [SP, #0]
; num end address is: 4 (R1)
; d end address is: 0 (R0)
; d start address is: 0 (R0)
; num start address is: 4 (R1)
;i2c.c, 142 :: 		transfer = d;
0x03B6	0x4A0D    LDR	R2, [PC, #52]
0x03B8	0x6010    STR	R0, [R2, #0]
; d end address is: 0 (R0)
;i2c.c, 143 :: 		transfer_count = num;
0x03BA	0x4A0D    LDR	R2, [PC, #52]
0x03BC	0x8011    STRH	R1, [R2, #0]
; num end address is: 4 (R1)
;i2c.c, 146 :: 		address != 0) {  //if start_async and send_addr_async called before this, actually start
0x03BE	0x4A0D    LDR	R2, [PC, #52]
0x03C0	0xF9B22000  LDRSH	R2, [R2, #0]
0x03C4	0x2A01    CMP	R2, #1
0x03C6	0xD10B    BNE	L__i2c_recv_async32
0x03C8	0x4A0B    LDR	R2, [PC, #44]
0x03CA	0x7812    LDRB	R2, [R2, #0]
0x03CC	0xB142    CBZ	R2, L__i2c_recv_async31
L__i2c_recv_async30:
;i2c.c, 147 :: 		should_start = 0;
0x03CE	0x2300    MOVS	R3, #0
0x03D0	0xB21B    SXTH	R3, R3
0x03D2	0x4A08    LDR	R2, [PC, #32]
0x03D4	0x8013    STRH	R3, [R2, #0]
;i2c.c, 148 :: 		i2c_start_();
0x03D6	0xF000FF33  BL	_i2c_start_+0
;i2c.c, 149 :: 		return 0;
0x03DA	0x2000    MOVS	R0, #0
0x03DC	0xB200    SXTH	R0, R0
0x03DE	0xE001    B	L_end_i2c_recv_async
;i2c.c, 146 :: 		address != 0) {  //if start_async and send_addr_async called before this, actually start
L__i2c_recv_async32:
L__i2c_recv_async31:
;i2c.c, 151 :: 		return 1;
0x03E0	0x2001    MOVS	R0, #1
0x03E2	0xB200    SXTH	R0, R0
;i2c.c, 153 :: 		}
L_end_i2c_recv_async:
0x03E4	0xF8DDE000  LDR	LR, [SP, #0]
0x03E8	0xB001    ADD	SP, SP, #4
0x03EA	0x4770    BX	LR
0x03EC	0x003C2000  	_transfer+0
0x03F0	0x003A2000  	_transfer_count+0
0x03F4	0x00402000  	_should_start+0
0x03F8	0x00392000  	_address+0
; end of _i2c_recv_async
__Lib_System_4XX_InitialSetUpRCCRCC2:
;__Lib_System_4XX.c, 452 :: 		
0x1614	0xB082    SUB	SP, SP, #8
0x1616	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_4XX.c, 455 :: 		
; ulRCC_CR start address is: 8 (R2)
0x161A	0x4A92    LDR	R2, [PC, #584]
;__Lib_System_4XX.c, 456 :: 		
; ulRCC_PLLCFGR start address is: 12 (R3)
0x161C	0x4B92    LDR	R3, [PC, #584]
;__Lib_System_4XX.c, 457 :: 		
; ulRCC_CFGR start address is: 16 (R4)
0x161E	0x4C93    LDR	R4, [PC, #588]
;__Lib_System_4XX.c, 458 :: 		
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x1620	0x4893    LDR	R0, [PC, #588]
;__Lib_System_4XX.c, 459 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1622	0x4994    LDR	R1, [PC, #592]
;__Lib_System_4XX.c, 461 :: 		
0x1624	0x2803    CMP	R0, #3
0x1626	0xF040803C  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC231
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 462 :: 		
0x162A	0x4893    LDR	R0, [PC, #588]
0x162C	0x4281    CMP	R1, R0
0x162E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 463 :: 		
0x1630	0x4892    LDR	R0, [PC, #584]
0x1632	0x6800    LDR	R0, [R0, #0]
0x1634	0xF0400105  ORR	R1, R0, #5
0x1638	0x4890    LDR	R0, [PC, #576]
0x163A	0x6001    STR	R1, [R0, #0]
0x163C	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC233
L___Lib_System_4XX_InitialSetUpRCCRCC232:
;__Lib_System_4XX.c, 464 :: 		
; Fosc_kHz start address is: 4 (R1)
0x163E	0x4890    LDR	R0, [PC, #576]
0x1640	0x4281    CMP	R1, R0
0x1642	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 465 :: 		
0x1644	0x488D    LDR	R0, [PC, #564]
0x1646	0x6800    LDR	R0, [R0, #0]
0x1648	0xF0400104  ORR	R1, R0, #4
0x164C	0x488B    LDR	R0, [PC, #556]
0x164E	0x6001    STR	R1, [R0, #0]
0x1650	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC235
L___Lib_System_4XX_InitialSetUpRCCRCC234:
;__Lib_System_4XX.c, 466 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1652	0x488C    LDR	R0, [PC, #560]
0x1654	0x4281    CMP	R1, R0
0x1656	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC236
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 467 :: 		
0x1658	0x4888    LDR	R0, [PC, #544]
0x165A	0x6800    LDR	R0, [R0, #0]
0x165C	0xF0400103  ORR	R1, R0, #3
0x1660	0x4886    LDR	R0, [PC, #536]
0x1662	0x6001    STR	R1, [R0, #0]
0x1664	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC237
L___Lib_System_4XX_InitialSetUpRCCRCC236:
;__Lib_System_4XX.c, 468 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1666	0xF64E2060  MOVW	R0, #60000
0x166A	0x4281    CMP	R1, R0
0x166C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC238
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 469 :: 		
0x166E	0x4883    LDR	R0, [PC, #524]
0x1670	0x6800    LDR	R0, [R0, #0]
0x1672	0xF0400102  ORR	R1, R0, #2
0x1676	0x4881    LDR	R0, [PC, #516]
0x1678	0x6001    STR	R1, [R0, #0]
0x167A	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC239
L___Lib_System_4XX_InitialSetUpRCCRCC238:
;__Lib_System_4XX.c, 470 :: 		
; Fosc_kHz start address is: 4 (R1)
0x167C	0xF2475030  MOVW	R0, #30000
0x1680	0x4281    CMP	R1, R0
0x1682	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC240
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 471 :: 		
0x1684	0x487D    LDR	R0, [PC, #500]
0x1686	0x6800    LDR	R0, [R0, #0]
0x1688	0xF0400101  ORR	R1, R0, #1
0x168C	0x487B    LDR	R0, [PC, #492]
0x168E	0x6001    STR	R1, [R0, #0]
0x1690	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC241
L___Lib_System_4XX_InitialSetUpRCCRCC240:
;__Lib_System_4XX.c, 473 :: 		
0x1692	0x487A    LDR	R0, [PC, #488]
0x1694	0x6801    LDR	R1, [R0, #0]
0x1696	0xF06F0007  MVN	R0, #7
0x169A	0x4001    ANDS	R1, R0
0x169C	0x4877    LDR	R0, [PC, #476]
0x169E	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC241:
L___Lib_System_4XX_InitialSetUpRCCRCC239:
L___Lib_System_4XX_InitialSetUpRCCRCC237:
L___Lib_System_4XX_InitialSetUpRCCRCC235:
L___Lib_System_4XX_InitialSetUpRCCRCC233:
;__Lib_System_4XX.c, 474 :: 		
0x16A0	0xE10C    B	L___Lib_System_4XX_InitialSetUpRCCRCC242
L___Lib_System_4XX_InitialSetUpRCCRCC231:
;__Lib_System_4XX.c, 475 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x16A2	0x2802    CMP	R0, #2
0x16A4	0xF0408046  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC243
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 476 :: 		
0x16A8	0x4877    LDR	R0, [PC, #476]
0x16AA	0x4281    CMP	R1, R0
0x16AC	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC244
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 477 :: 		
0x16AE	0x4873    LDR	R0, [PC, #460]
0x16B0	0x6800    LDR	R0, [R0, #0]
0x16B2	0xF0400106  ORR	R1, R0, #6
0x16B6	0x4871    LDR	R0, [PC, #452]
0x16B8	0x6001    STR	R1, [R0, #0]
0x16BA	0xE03A    B	L___Lib_System_4XX_InitialSetUpRCCRCC245
L___Lib_System_4XX_InitialSetUpRCCRCC244:
;__Lib_System_4XX.c, 478 :: 		
; Fosc_kHz start address is: 4 (R1)
0x16BC	0x4870    LDR	R0, [PC, #448]
0x16BE	0x4281    CMP	R1, R0
0x16C0	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC246
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 479 :: 		
0x16C2	0x486E    LDR	R0, [PC, #440]
0x16C4	0x6800    LDR	R0, [R0, #0]
0x16C6	0xF0400105  ORR	R1, R0, #5
0x16CA	0x486C    LDR	R0, [PC, #432]
0x16CC	0x6001    STR	R1, [R0, #0]
0x16CE	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC247
L___Lib_System_4XX_InitialSetUpRCCRCC246:
;__Lib_System_4XX.c, 480 :: 		
; Fosc_kHz start address is: 4 (R1)
0x16D0	0x486E    LDR	R0, [PC, #440]
0x16D2	0x4281    CMP	R1, R0
0x16D4	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC248
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 481 :: 		
0x16D6	0x4869    LDR	R0, [PC, #420]
0x16D8	0x6800    LDR	R0, [R0, #0]
0x16DA	0xF0400104  ORR	R1, R0, #4
0x16DE	0x4867    LDR	R0, [PC, #412]
0x16E0	0x6001    STR	R1, [R0, #0]
0x16E2	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC249
L___Lib_System_4XX_InitialSetUpRCCRCC248:
;__Lib_System_4XX.c, 482 :: 		
; Fosc_kHz start address is: 4 (R1)
0x16E4	0x486A    LDR	R0, [PC, #424]
0x16E6	0x4281    CMP	R1, R0
0x16E8	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC250
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 483 :: 		
0x16EA	0x4864    LDR	R0, [PC, #400]
0x16EC	0x6800    LDR	R0, [R0, #0]
0x16EE	0xF0400103  ORR	R1, R0, #3
0x16F2	0x4862    LDR	R0, [PC, #392]
0x16F4	0x6001    STR	R1, [R0, #0]
0x16F6	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC251
L___Lib_System_4XX_InitialSetUpRCCRCC250:
;__Lib_System_4XX.c, 484 :: 		
; Fosc_kHz start address is: 4 (R1)
0x16F8	0xF64B3080  MOVW	R0, #48000
0x16FC	0x4281    CMP	R1, R0
0x16FE	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC252
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 485 :: 		
0x1700	0x485E    LDR	R0, [PC, #376]
0x1702	0x6800    LDR	R0, [R0, #0]
0x1704	0xF0400102  ORR	R1, R0, #2
0x1708	0x485C    LDR	R0, [PC, #368]
0x170A	0x6001    STR	R1, [R0, #0]
0x170C	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC253
L___Lib_System_4XX_InitialSetUpRCCRCC252:
;__Lib_System_4XX.c, 486 :: 		
; Fosc_kHz start address is: 4 (R1)
0x170E	0xF64550C0  MOVW	R0, #24000
0x1712	0x4281    CMP	R1, R0
0x1714	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC254
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 487 :: 		
0x1716	0x4859    LDR	R0, [PC, #356]
0x1718	0x6800    LDR	R0, [R0, #0]
0x171A	0xF0400101  ORR	R1, R0, #1
0x171E	0x4857    LDR	R0, [PC, #348]
0x1720	0x6001    STR	R1, [R0, #0]
0x1722	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC255
L___Lib_System_4XX_InitialSetUpRCCRCC254:
;__Lib_System_4XX.c, 489 :: 		
0x1724	0x4855    LDR	R0, [PC, #340]
0x1726	0x6801    LDR	R1, [R0, #0]
0x1728	0xF06F0007  MVN	R0, #7
0x172C	0x4001    ANDS	R1, R0
0x172E	0x4853    LDR	R0, [PC, #332]
0x1730	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC255:
L___Lib_System_4XX_InitialSetUpRCCRCC253:
L___Lib_System_4XX_InitialSetUpRCCRCC251:
L___Lib_System_4XX_InitialSetUpRCCRCC249:
L___Lib_System_4XX_InitialSetUpRCCRCC247:
L___Lib_System_4XX_InitialSetUpRCCRCC245:
;__Lib_System_4XX.c, 490 :: 		
0x1732	0xE0C3    B	L___Lib_System_4XX_InitialSetUpRCCRCC256
L___Lib_System_4XX_InitialSetUpRCCRCC243:
;__Lib_System_4XX.c, 491 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x1734	0x2801    CMP	R0, #1
0x1736	0xF0408051  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC257
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 492 :: 		
0x173A	0x4851    LDR	R0, [PC, #324]
0x173C	0x4281    CMP	R1, R0
0x173E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC258
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 493 :: 		
0x1740	0x484E    LDR	R0, [PC, #312]
0x1742	0x6800    LDR	R0, [R0, #0]
0x1744	0xF0400107  ORR	R1, R0, #7
0x1748	0x484C    LDR	R0, [PC, #304]
0x174A	0x6001    STR	R1, [R0, #0]
0x174C	0xE045    B	L___Lib_System_4XX_InitialSetUpRCCRCC259
L___Lib_System_4XX_InitialSetUpRCCRCC258:
;__Lib_System_4XX.c, 494 :: 		
; Fosc_kHz start address is: 4 (R1)
0x174E	0x4851    LDR	R0, [PC, #324]
0x1750	0x4281    CMP	R1, R0
0x1752	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC260
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 495 :: 		
0x1754	0x4849    LDR	R0, [PC, #292]
0x1756	0x6800    LDR	R0, [R0, #0]
0x1758	0xF0400106  ORR	R1, R0, #6
0x175C	0x4847    LDR	R0, [PC, #284]
0x175E	0x6001    STR	R1, [R0, #0]
0x1760	0xE03B    B	L___Lib_System_4XX_InitialSetUpRCCRCC261
L___Lib_System_4XX_InitialSetUpRCCRCC260:
;__Lib_System_4XX.c, 496 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1762	0x4848    LDR	R0, [PC, #288]
0x1764	0x4281    CMP	R1, R0
0x1766	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC262
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 497 :: 		
0x1768	0x4844    LDR	R0, [PC, #272]
0x176A	0x6800    LDR	R0, [R0, #0]
0x176C	0xF0400105  ORR	R1, R0, #5
0x1770	0x4842    LDR	R0, [PC, #264]
0x1772	0x6001    STR	R1, [R0, #0]
0x1774	0xE031    B	L___Lib_System_4XX_InitialSetUpRCCRCC263
L___Lib_System_4XX_InitialSetUpRCCRCC262:
;__Lib_System_4XX.c, 498 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1776	0x4846    LDR	R0, [PC, #280]
0x1778	0x4281    CMP	R1, R0
0x177A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC264
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 499 :: 		
0x177C	0x483F    LDR	R0, [PC, #252]
0x177E	0x6800    LDR	R0, [R0, #0]
0x1780	0xF0400104  ORR	R1, R0, #4
0x1784	0x483D    LDR	R0, [PC, #244]
0x1786	0x6001    STR	R1, [R0, #0]
0x1788	0xE027    B	L___Lib_System_4XX_InitialSetUpRCCRCC265
L___Lib_System_4XX_InitialSetUpRCCRCC264:
;__Lib_System_4XX.c, 500 :: 		
; Fosc_kHz start address is: 4 (R1)
0x178A	0xF24D20F0  MOVW	R0, #54000
0x178E	0x4281    CMP	R1, R0
0x1790	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC266
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 501 :: 		
0x1792	0x483A    LDR	R0, [PC, #232]
0x1794	0x6800    LDR	R0, [R0, #0]
0x1796	0xF0400103  ORR	R1, R0, #3
0x179A	0x4838    LDR	R0, [PC, #224]
0x179C	0x6001    STR	R1, [R0, #0]
0x179E	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC267
L___Lib_System_4XX_InitialSetUpRCCRCC266:
;__Lib_System_4XX.c, 502 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17A0	0xF64840A0  MOVW	R0, #36000
0x17A4	0x4281    CMP	R1, R0
0x17A6	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC268
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 503 :: 		
0x17A8	0x4834    LDR	R0, [PC, #208]
0x17AA	0x6800    LDR	R0, [R0, #0]
0x17AC	0xF0400102  ORR	R1, R0, #2
0x17B0	0x4832    LDR	R0, [PC, #200]
0x17B2	0x6001    STR	R1, [R0, #0]
0x17B4	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC269
L___Lib_System_4XX_InitialSetUpRCCRCC268:
;__Lib_System_4XX.c, 504 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17B6	0xF2446050  MOVW	R0, #18000
0x17BA	0x4281    CMP	R1, R0
0x17BC	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC270
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 505 :: 		
0x17BE	0x482F    LDR	R0, [PC, #188]
0x17C0	0x6800    LDR	R0, [R0, #0]
0x17C2	0xF0400101  ORR	R1, R0, #1
0x17C6	0x482D    LDR	R0, [PC, #180]
0x17C8	0x6001    STR	R1, [R0, #0]
0x17CA	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC271
L___Lib_System_4XX_InitialSetUpRCCRCC270:
;__Lib_System_4XX.c, 507 :: 		
0x17CC	0x482B    LDR	R0, [PC, #172]
0x17CE	0x6801    LDR	R1, [R0, #0]
0x17D0	0xF06F0007  MVN	R0, #7
0x17D4	0x4001    ANDS	R1, R0
0x17D6	0x4829    LDR	R0, [PC, #164]
0x17D8	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC271:
L___Lib_System_4XX_InitialSetUpRCCRCC269:
L___Lib_System_4XX_InitialSetUpRCCRCC267:
L___Lib_System_4XX_InitialSetUpRCCRCC265:
L___Lib_System_4XX_InitialSetUpRCCRCC263:
L___Lib_System_4XX_InitialSetUpRCCRCC261:
L___Lib_System_4XX_InitialSetUpRCCRCC259:
;__Lib_System_4XX.c, 508 :: 		
0x17DA	0xE06F    B	L___Lib_System_4XX_InitialSetUpRCCRCC272
L___Lib_System_4XX_InitialSetUpRCCRCC257:
;__Lib_System_4XX.c, 509 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x17DC	0x2800    CMP	R0, #0
0x17DE	0xF040806D  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC273
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 510 :: 		
0x17E2	0x482D    LDR	R0, [PC, #180]
0x17E4	0x4281    CMP	R1, R0
0x17E6	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC274
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 511 :: 		
0x17E8	0x4824    LDR	R0, [PC, #144]
0x17EA	0x6800    LDR	R0, [R0, #0]
0x17EC	0xF0400107  ORR	R1, R0, #7
0x17F0	0x4822    LDR	R0, [PC, #136]
0x17F2	0x6001    STR	R1, [R0, #0]
0x17F4	0xE062    B	L___Lib_System_4XX_InitialSetUpRCCRCC275
L___Lib_System_4XX_InitialSetUpRCCRCC274:
;__Lib_System_4XX.c, 512 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17F6	0x4825    LDR	R0, [PC, #148]
0x17F8	0x4281    CMP	R1, R0
0x17FA	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC276
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 513 :: 		
0x17FC	0x481F    LDR	R0, [PC, #124]
0x17FE	0x6800    LDR	R0, [R0, #0]
0x1800	0xF0400106  ORR	R1, R0, #6
0x1804	0x481D    LDR	R0, [PC, #116]
0x1806	0x6001    STR	R1, [R0, #0]
0x1808	0xE058    B	L___Lib_System_4XX_InitialSetUpRCCRCC277
L___Lib_System_4XX_InitialSetUpRCCRCC276:
;__Lib_System_4XX.c, 514 :: 		
; Fosc_kHz start address is: 4 (R1)
0x180A	0x4824    LDR	R0, [PC, #144]
0x180C	0x4281    CMP	R1, R0
0x180E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC278
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 515 :: 		
0x1810	0x481A    LDR	R0, [PC, #104]
0x1812	0x6800    LDR	R0, [R0, #0]
0x1814	0xF0400105  ORR	R1, R0, #5
0x1818	0x4818    LDR	R0, [PC, #96]
0x181A	0x6001    STR	R1, [R0, #0]
0x181C	0xE04E    B	L___Lib_System_4XX_InitialSetUpRCCRCC279
L___Lib_System_4XX_InitialSetUpRCCRCC278:
;__Lib_System_4XX.c, 516 :: 		
; Fosc_kHz start address is: 4 (R1)
0x181E	0xF5B14F7A  CMP	R1, #64000
0x1822	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC280
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 517 :: 		
0x1824	0x4815    LDR	R0, [PC, #84]
0x1826	0x6800    LDR	R0, [R0, #0]
0x1828	0xF0400104  ORR	R1, R0, #4
0x182C	0x4813    LDR	R0, [PC, #76]
0x182E	0x6001    STR	R1, [R0, #0]
0x1830	0xE044    B	L___Lib_System_4XX_InitialSetUpRCCRCC281
L___Lib_System_4XX_InitialSetUpRCCRCC280:
;__Lib_System_4XX.c, 518 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1832	0xF64B3080  MOVW	R0, #48000
0x1836	0x4281    CMP	R1, R0
0x1838	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC282
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 519 :: 		
0x183A	0x4810    LDR	R0, [PC, #64]
0x183C	0x6800    LDR	R0, [R0, #0]
0x183E	0xF0400103  ORR	R1, R0, #3
0x1842	0x480E    LDR	R0, [PC, #56]
0x1844	0x6001    STR	R1, [R0, #0]
0x1846	0xE039    B	L___Lib_System_4XX_InitialSetUpRCCRCC283
L___Lib_System_4XX_InitialSetUpRCCRCC282:
;__Lib_System_4XX.c, 520 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1848	0xF5B14FFA  CMP	R1, #32000
0x184C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC284
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 521 :: 		
0x184E	0x480B    LDR	R0, [PC, #44]
0x1850	0x6800    LDR	R0, [R0, #0]
0x1852	0xF0400102  ORR	R1, R0, #2
0x1856	0x4809    LDR	R0, [PC, #36]
0x1858	0x6001    STR	R1, [R0, #0]
0x185A	0xE02F    B	L___Lib_System_4XX_InitialSetUpRCCRCC285
L___Lib_System_4XX_InitialSetUpRCCRCC284:
;__Lib_System_4XX.c, 522 :: 		
; Fosc_kHz start address is: 4 (R1)
0x185C	0xF5B15F7A  CMP	R1, #16000
0x1860	0xD925    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC286
0x1862	0xE01D    B	#58
0x1864	0x00810000  	#129
0x1868	0x00100400  	#67108880
0x186C	0x00000000  	#0
0x1870	0x00030000  	#3
0x1874	0x7D000000  	#32000
0x1878	0x49F00002  	#150000
0x187C	0x3C004002  	FLASH_ACR+0
0x1880	0xD4C00001  	#120000
0x1884	0x5F900001  	#90000
0x1888	0x32800002  	#144000
0x188C	0x77000001  	#96000
0x1890	0x19400001  	#72000
0x1894	0xA5E00001  	#108000
0x1898	0xB5800001  	#112000
0x189C	0x38800001  	#80000
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 523 :: 		
0x18A0	0x482D    LDR	R0, [PC, #180]
0x18A2	0x6800    LDR	R0, [R0, #0]
0x18A4	0xF0400101  ORR	R1, R0, #1
0x18A8	0x482B    LDR	R0, [PC, #172]
0x18AA	0x6001    STR	R1, [R0, #0]
0x18AC	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC287
L___Lib_System_4XX_InitialSetUpRCCRCC286:
;__Lib_System_4XX.c, 525 :: 		
0x18AE	0x482A    LDR	R0, [PC, #168]
0x18B0	0x6801    LDR	R1, [R0, #0]
0x18B2	0xF06F0007  MVN	R0, #7
0x18B6	0x4001    ANDS	R1, R0
0x18B8	0x4827    LDR	R0, [PC, #156]
0x18BA	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC287:
L___Lib_System_4XX_InitialSetUpRCCRCC285:
L___Lib_System_4XX_InitialSetUpRCCRCC283:
L___Lib_System_4XX_InitialSetUpRCCRCC281:
L___Lib_System_4XX_InitialSetUpRCCRCC279:
L___Lib_System_4XX_InitialSetUpRCCRCC277:
L___Lib_System_4XX_InitialSetUpRCCRCC275:
;__Lib_System_4XX.c, 526 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC273:
L___Lib_System_4XX_InitialSetUpRCCRCC272:
L___Lib_System_4XX_InitialSetUpRCCRCC256:
L___Lib_System_4XX_InitialSetUpRCCRCC242:
;__Lib_System_4XX.c, 528 :: 		
0x18BC	0x2101    MOVS	R1, #1
0x18BE	0xB249    SXTB	R1, R1
0x18C0	0x4826    LDR	R0, [PC, #152]
0x18C2	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 529 :: 		
0x18C4	0x4826    LDR	R0, [PC, #152]
0x18C6	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 531 :: 		
0x18C8	0xF7FFFC84  BL	__Lib_System_4XX_SystemClockSetDefault+0
;__Lib_System_4XX.c, 533 :: 		
0x18CC	0x4825    LDR	R0, [PC, #148]
0x18CE	0x6003    STR	R3, [R0, #0]
; ulRCC_PLLCFGR end address is: 12 (R3)
;__Lib_System_4XX.c, 534 :: 		
0x18D0	0x4825    LDR	R0, [PC, #148]
0x18D2	0x6004    STR	R4, [R0, #0]
;__Lib_System_4XX.c, 535 :: 		
0x18D4	0x4825    LDR	R0, [PC, #148]
0x18D6	0xEA020100  AND	R1, R2, R0, LSL #0
0x18DA	0x4825    LDR	R0, [PC, #148]
0x18DC	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 537 :: 		
0x18DE	0xF0020001  AND	R0, R2, #1
0x18E2	0xB140    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC299
; ulRCC_CFGR end address is: 16 (R4)
; ulRCC_CR end address is: 8 (R2)
0x18E4	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 538 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC289:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x18E6	0x4822    LDR	R0, [PC, #136]
0x18E8	0x6800    LDR	R0, [R0, #0]
0x18EA	0xF0000002  AND	R0, R0, #2
0x18EE	0x2800    CMP	R0, #0
0x18F0	0xD100    BNE	L___Lib_System_4XX_InitialSetUpRCCRCC290
;__Lib_System_4XX.c, 539 :: 		
0x18F2	0xE7F8    B	L___Lib_System_4XX_InitialSetUpRCCRCC289
L___Lib_System_4XX_InitialSetUpRCCRCC290:
;__Lib_System_4XX.c, 540 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x18F4	0xE000    B	L___Lib_System_4XX_InitialSetUpRCCRCC288
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC299:
;__Lib_System_4XX.c, 537 :: 		
0x18F6	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 540 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC288:
;__Lib_System_4XX.c, 542 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x18F8	0xF4023080  AND	R0, R2, #65536
0x18FC	0xB148    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2100
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
;__Lib_System_4XX.c, 543 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC292:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 4 (R1)
0x18FE	0x481C    LDR	R0, [PC, #112]
0x1900	0x6800    LDR	R0, [R0, #0]
0x1902	0xF4003000  AND	R0, R0, #131072
0x1906	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC293
;__Lib_System_4XX.c, 544 :: 		
0x1908	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC292
L___Lib_System_4XX_InitialSetUpRCCRCC293:
;__Lib_System_4XX.c, 545 :: 		
0x190A	0x9201    STR	R2, [SP, #4]
; ulRCC_CFGR end address is: 4 (R1)
0x190C	0x460A    MOV	R2, R1
0x190E	0x9901    LDR	R1, [SP, #4]
0x1910	0xE002    B	L___Lib_System_4XX_InitialSetUpRCCRCC291
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC2100:
;__Lib_System_4XX.c, 542 :: 		
0x1912	0x9101    STR	R1, [SP, #4]
0x1914	0x4611    MOV	R1, R2
0x1916	0x9A01    LDR	R2, [SP, #4]
;__Lib_System_4XX.c, 545 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC291:
;__Lib_System_4XX.c, 547 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x1918	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x191C	0xB170    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2101
;__Lib_System_4XX.c, 548 :: 		
0x191E	0x4814    LDR	R0, [PC, #80]
0x1920	0x6800    LDR	R0, [R0, #0]
0x1922	0xF0407180  ORR	R1, R0, #16777216
0x1926	0x4812    LDR	R0, [PC, #72]
0x1928	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x192A	0x4611    MOV	R1, R2
;__Lib_System_4XX.c, 549 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC295:
; ulRCC_CFGR start address is: 4 (R1)
0x192C	0x4810    LDR	R0, [PC, #64]
0x192E	0x6800    LDR	R0, [R0, #0]
0x1930	0xF0007000  AND	R0, R0, #33554432
0x1934	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC296
;__Lib_System_4XX.c, 550 :: 		
0x1936	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC295
L___Lib_System_4XX_InitialSetUpRCCRCC296:
;__Lib_System_4XX.c, 551 :: 		
0x1938	0x460A    MOV	R2, R1
0x193A	0xE7FF    B	L___Lib_System_4XX_InitialSetUpRCCRCC294
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_4XX_InitialSetUpRCCRCC2101:
;__Lib_System_4XX.c, 547 :: 		
;__Lib_System_4XX.c, 551 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC294:
;__Lib_System_4XX.c, 554 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC297:
; ulRCC_CFGR start address is: 8 (R2)
0x193C	0x480A    LDR	R0, [PC, #40]
0x193E	0x6800    LDR	R0, [R0, #0]
0x1940	0xF000010C  AND	R1, R0, #12
0x1944	0x0090    LSLS	R0, R2, #2
0x1946	0xF000000C  AND	R0, R0, #12
0x194A	0x4281    CMP	R1, R0
0x194C	0xD000    BEQ	L___Lib_System_4XX_InitialSetUpRCCRCC298
;__Lib_System_4XX.c, 555 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x194E	0xE7F5    B	L___Lib_System_4XX_InitialSetUpRCCRCC297
L___Lib_System_4XX_InitialSetUpRCCRCC298:
;__Lib_System_4XX.c, 557 :: 		
L_end_InitialSetUpRCCRCC2:
0x1950	0xF8DDE000  LDR	LR, [SP, #0]
0x1954	0xB002    ADD	SP, SP, #8
0x1956	0x4770    BX	LR
0x1958	0x3C004002  	FLASH_ACR+0
0x195C	0x80204247  	FLASH_ACR+0
0x1960	0x80244247  	FLASH_ACR+0
0x1964	0x38044002  	RCC_PLLCFGR+0
0x1968	0x38084002  	RCC_CFGR+0
0x196C	0xFFFF000F  	#1048575
0x1970	0x38004002  	RCC_CR+0
; end of __Lib_System_4XX_InitialSetUpRCCRCC2
__Lib_System_4XX_SystemClockSetDefault:
;__Lib_System_4XX.c, 431 :: 		
0x11D4	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 434 :: 		
0x11D6	0x480D    LDR	R0, [PC, #52]
0x11D8	0x6800    LDR	R0, [R0, #0]
0x11DA	0xF0400101  ORR	R1, R0, #1
0x11DE	0x480B    LDR	R0, [PC, #44]
0x11E0	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 437 :: 		
0x11E2	0x2100    MOVS	R1, #0
0x11E4	0x480A    LDR	R0, [PC, #40]
0x11E6	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 440 :: 		
0x11E8	0x4808    LDR	R0, [PC, #32]
0x11EA	0x6801    LDR	R1, [R0, #0]
0x11EC	0x4809    LDR	R0, [PC, #36]
0x11EE	0x4001    ANDS	R1, R0
0x11F0	0x4806    LDR	R0, [PC, #24]
0x11F2	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 443 :: 		
0x11F4	0x4908    LDR	R1, [PC, #32]
0x11F6	0x4809    LDR	R0, [PC, #36]
0x11F8	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 446 :: 		
0x11FA	0x4804    LDR	R0, [PC, #16]
0x11FC	0x6801    LDR	R1, [R0, #0]
0x11FE	0xF46F2080  MVN	R0, #262144
0x1202	0x4001    ANDS	R1, R0
0x1204	0x4801    LDR	R0, [PC, #4]
0x1206	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 450 :: 		
L_end_SystemClockSetDefault:
0x1208	0xB001    ADD	SP, SP, #4
0x120A	0x4770    BX	LR
0x120C	0x38004002  	RCC_CR+0
0x1210	0x38084002  	RCC_CFGR+0
0x1214	0xFFFFFEF6  	#-17367041
0x1218	0x30102400  	#603992080
0x121C	0x38044002  	RCC_PLLCFGR+0
; end of __Lib_System_4XX_SystemClockSetDefault
__Lib_System_4XX_InitialSetUpFosc:
;__Lib_System_4XX.c, 369 :: 		
0x15F0	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 370 :: 		
0x15F2	0x4904    LDR	R1, [PC, #16]
0x15F4	0x4804    LDR	R0, [PC, #16]
0x15F6	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 371 :: 		
0x15F8	0x4904    LDR	R1, [PC, #16]
0x15FA	0x4805    LDR	R0, [PC, #20]
0x15FC	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 372 :: 		
L_end_InitialSetUpFosc:
0x15FE	0xB001    ADD	SP, SP, #4
0x1600	0x4770    BX	LR
0x1602	0xBF00    NOP
0x1604	0x7D000000  	#32000
0x1608	0x00482000  	___System_CLOCK_IN_KHZ+0
0x160C	0x00030000  	#3
0x1610	0x004C2000  	__VOLTAGE_RANGE+0
; end of __Lib_System_4XX_InitialSetUpFosc
___GenExcept:
;__Lib_System_4XX.c, 314 :: 		
0x19A0	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 315 :: 		
L___GenExcept27:
0x19A2	0xE7FE    B	L___GenExcept27
;__Lib_System_4XX.c, 316 :: 		
L_end___GenExcept:
0x19A4	0xB001    ADD	SP, SP, #4
0x19A6	0x4770    BX	LR
; end of ___GenExcept
___EnableFPU:
;__Lib_System_4XX.c, 347 :: 		
0x1BFC	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 350 :: 		
0x1BFE	0xF64E5088  MOVW	R0, #60808
;__Lib_System_4XX.c, 351 :: 		
0x1C02	0xF2CE0000  MOVT	R0, #57344
;__Lib_System_4XX.c, 353 :: 		
0x1C06	0x6801    LDR	R1, [R0, #0]
;__Lib_System_4XX.c, 355 :: 		
0x1C08	0xF4410170  ORR	R1, R1, #15728640
;__Lib_System_4XX.c, 357 :: 		
0x1C0C	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 359 :: 		
0x1C0E	0xBF00    NOP
;__Lib_System_4XX.c, 360 :: 		
0x1C10	0xBF00    NOP
;__Lib_System_4XX.c, 361 :: 		
0x1C12	0xBF00    NOP
;__Lib_System_4XX.c, 362 :: 		
0x1C14	0xBF00    NOP
;__Lib_System_4XX.c, 364 :: 		
0x1C16	0xEEF10A10  VMRS	R0, FPSCR
;__Lib_System_4XX.c, 365 :: 		
0x1C1A	0xF4400040  ORR	R0, R0, #12582912
;__Lib_System_4XX.c, 366 :: 		
0x1C1E	0xEEE10A10  VMSR	FPSCR, R0
;__Lib_System_4XX.c, 367 :: 		
L_end___EnableFPU:
0x1C22	0xB001    ADD	SP, SP, #4
0x1C24	0x4770    BX	LR
; end of ___EnableFPU
0x1C8C	0xB500    PUSH	(R14)
0x1C8E	0xF8DFB014  LDR	R11, [PC, #20]
0x1C92	0xF8DFA014  LDR	R10, [PC, #20]
0x1C96	0xF8DFC014  LDR	R12, [PC, #20]
0x1C9A	0xF7FEFE9F  BL	2524
0x1C9E	0xBD00    POP	(R15)
0x1CA0	0x4770    BX	LR
0x1CA2	0xBF00    NOP
0x1CA4	0x00002000  	#536870912
0x1CA8	0x00392000  	#536870969
0x1CAC	0x1C260000  	#7206
0x1D0C	0xB500    PUSH	(R14)
0x1D0E	0xF8DFB010  LDR	R11, [PC, #16]
0x1D12	0xF8DFA010  LDR	R10, [PC, #16]
0x1D16	0xF7FEFE43  BL	2464
0x1D1A	0xBD00    POP	(R15)
0x1D1C	0x4770    BX	LR
0x1D1E	0xBF00    NOP
0x1D20	0x00002000  	#536870912
0x1D24	0x00602000  	#536871008
_interrupt_handle:
;magnetometer.c, 242 :: 		void interrupt_handle() iv IVT_INT_EXTI15_10 ics ICS_AUTO {
0x1BB0	0xF84D4D04  PUSH	(R4)
0x1BB4	0xB081    SUB	SP, SP, #4
0x1BB6	0xF8CDE000  STR	LR, [SP, #0]
;magnetometer.c, 243 :: 		if(is_configured == 0) {
0x1BBA	0x480C    LDR	R0, [PC, #48]
0x1BBC	0xF9B00000  LDRSH	R0, [R0, #0]
0x1BC0	0xB900    CBNZ	R0, L_interrupt_handle39
;magnetometer.c, 244 :: 		return;
0x1BC2	0xE00D    B	L_end_interrupt_handle
;magnetometer.c, 245 :: 		}
L_interrupt_handle39:
;magnetometer.c, 247 :: 		EXTI_PR.B10 = 1; //clear interrupt flag
0x1BC4	0x2101    MOVS	R1, #1
0x1BC6	0xB249    SXTB	R1, R1
0x1BC8	0x4809    LDR	R0, [PC, #36]
0x1BCA	0x6001    STR	R1, [R0, #0]
;magnetometer.c, 248 :: 		reading_xyz = 1; //enter magnet data reading state
0x1BCC	0x2101    MOVS	R1, #1
0x1BCE	0xB209    SXTH	R1, R1
0x1BD0	0x4808    LDR	R0, [PC, #32]
0x1BD2	0x8001    STRH	R1, [R0, #0]
;magnetometer.c, 249 :: 		read_reg(OUT_X_MSB_ADDR, xyz, 6); //read magnet data
0x1BD4	0x2206    MOVS	R2, #6
0x1BD6	0xB212    SXTH	R2, R2
0x1BD8	0x4907    LDR	R1, [PC, #28]
0x1BDA	0x2001    MOVS	R0, #1
0x1BDC	0xF7FFFB42  BL	_read_reg+0
;magnetometer.c, 250 :: 		}
L_end_interrupt_handle:
0x1BE0	0xF8DDE000  LDR	LR, [SP, #0]
0x1BE4	0xB001    ADD	SP, SP, #4
0x1BE6	0xF85D4B04  POP	(R4)
0x1BEA	0x4770    BX	LR
0x1BEC	0x00022000  	_is_configured+0
0x1BF0	0x82A84227  	EXTI_PR+0
0x1BF4	0x00042000  	_reading_xyz+0
0x1BF8	0x00502000  	_xyz+0
; end of _interrupt_handle
_event_handler:
;magnetometer.c, 74 :: 		void event_handler() iv  IVT_INT_I2C2_EV ics ICS_AUTO {
0x19A8	0xB490    PUSH	(R4, R7)
0x19AA	0xB084    SUB	SP, SP, #16
0x19AC	0xF8CDE000  STR	LR, [SP, #0]
;magnetometer.c, 75 :: 		DisableInterrupts();
0x19B0	0xF7FFFCB2  BL	_DisableInterrupts+0
;magnetometer.c, 76 :: 		switch(i2c_get_event()) {
0x19B4	0xF7FFFCB8  BL	_i2c_get_event+0
0x19B8	0xF8AD000C  STRH	R0, [SP, #12]
0x19BC	0xE0BF    B	L_event_handler3
;magnetometer.c, 77 :: 		case STARTING:
L_event_handler5:
;magnetometer.c, 78 :: 		state_ = 1;
0x19BE	0x2101    MOVS	R1, #1
0x19C0	0xB209    SXTH	R1, R1
0x19C2	0x486A    LDR	R0, [PC, #424]
0x19C4	0x8001    STRH	R1, [R0, #0]
;magnetometer.c, 80 :: 		ACKN = 1;
0x19C6	0x2101    MOVS	R1, #1
0x19C8	0xB249    SXTB	R1, R1
0x19CA	0x4869    LDR	R0, [PC, #420]
0x19CC	0x6001    STR	R1, [R0, #0]
;magnetometer.c, 82 :: 		if(reg_send == 0) { //if we are in register address sending state
0x19CE	0x4869    LDR	R0, [PC, #420]
0x19D0	0xF9B00000  LDRSH	R0, [R0, #0]
0x19D4	0xB930    CBNZ	R0, L_event_handler6
;magnetometer.c, 83 :: 		I2C2_DR = address << 1 | 0;
0x19D6	0x4868    LDR	R0, [PC, #416]
0x19D8	0x7800    LDRB	R0, [R0, #0]
0x19DA	0x0041    LSLS	R1, R0, #1
0x19DC	0xB289    UXTH	R1, R1
0x19DE	0x4867    LDR	R0, [PC, #412]
0x19E0	0x6001    STR	R1, [R0, #0]
;magnetometer.c, 84 :: 		}
0x19E2	0xE006    B	L_event_handler7
L_event_handler6:
;magnetometer.c, 86 :: 		i2c_send_addr(address, r_notw); //if we already sent register address we now do read or right
0x19E4	0x4866    LDR	R0, [PC, #408]
0x19E6	0xF9B01000  LDRSH	R1, [R0, #0]
0x19EA	0x4863    LDR	R0, [PC, #396]
0x19EC	0x7800    LDRB	R0, [R0, #0]
0x19EE	0xF7FEFF47  BL	_i2c_send_addr+0
;magnetometer.c, 87 :: 		}
L_event_handler7:
;magnetometer.c, 90 :: 		START_TR = 0;
0x19F2	0x2100    MOVS	R1, #0
0x19F4	0xB249    SXTB	R1, R1
0x19F6	0x4863    LDR	R0, [PC, #396]
0x19F8	0x6001    STR	R1, [R0, #0]
;magnetometer.c, 92 :: 		break;
0x19FA	0xE0AF    B	L_event_handler4
;magnetometer.c, 93 :: 		case ADDRESS_SENT:
L_event_handler8:
;magnetometer.c, 94 :: 		state_ = 2;
0x19FC	0x2102    MOVS	R1, #2
0x19FE	0xB209    SXTH	R1, R1
0x1A00	0x485A    LDR	R0, [PC, #360]
0x1A02	0x8001    STRH	R1, [R0, #0]
;magnetometer.c, 96 :: 		dummy1 = I2C2_SR1; //need to read sr1 followed by read sr2 so we clean flags
0x1A04	0x4860    LDR	R0, [PC, #384]
0x1A06	0x6801    LDR	R1, [R0, #0]
0x1A08	0x4860    LDR	R0, [PC, #384]
0x1A0A	0x8001    STRH	R1, [R0, #0]
;magnetometer.c, 97 :: 		dummy2 = I2C2_SR2;
0x1A0C	0x4860    LDR	R0, [PC, #384]
0x1A0E	0x6801    LDR	R1, [R0, #0]
0x1A10	0x4860    LDR	R0, [PC, #384]
0x1A12	0x8001    STRH	R1, [R0, #0]
;magnetometer.c, 99 :: 		curr_transfer = 0;
0x1A14	0x2100    MOVS	R1, #0
0x1A16	0xB209    SXTH	R1, R1
0x1A18	0x485F    LDR	R0, [PC, #380]
0x1A1A	0x8001    STRH	R1, [R0, #0]
;magnetometer.c, 100 :: 		break;
0x1A1C	0xE09E    B	L_event_handler4
;magnetometer.c, 101 :: 		case TRANSMITTED:
L_event_handler9:
;magnetometer.c, 102 :: 		state_ = 3;
0x1A1E	0x2103    MOVS	R1, #3
0x1A20	0xB209    SXTH	R1, R1
0x1A22	0x4852    LDR	R0, [PC, #328]
0x1A24	0x8001    STRH	R1, [R0, #0]
;magnetometer.c, 104 :: 		if(reg_send == 1) {
0x1A26	0x4853    LDR	R0, [PC, #332]
0x1A28	0xF9B00000  LDRSH	R0, [R0, #0]
0x1A2C	0x2801    CMP	R0, #1
0x1A2E	0xD11D    BNE	L_event_handler10
;magnetometer.c, 105 :: 		if(curr_transfer != transfer_count) { //transmiter
0x1A30	0x485A    LDR	R0, [PC, #360]
0x1A32	0xF9B01000  LDRSH	R1, [R0, #0]
0x1A36	0x4858    LDR	R0, [PC, #352]
0x1A38	0xF9B00000  LDRSH	R0, [R0, #0]
0x1A3C	0x4288    CMP	R0, R1
0x1A3E	0xD00E    BEQ	L_event_handler11
;magnetometer.c, 106 :: 		i2c_send(transfer[curr_transfer]);
0x1A40	0x4855    LDR	R0, [PC, #340]
0x1A42	0xF9B01000  LDRSH	R1, [R0, #0]
0x1A46	0x4856    LDR	R0, [PC, #344]
0x1A48	0x6800    LDR	R0, [R0, #0]
0x1A4A	0x1840    ADDS	R0, R0, R1
0x1A4C	0x7800    LDRB	R0, [R0, #0]
0x1A4E	0xF7FEFF27  BL	_i2c_send+0
;magnetometer.c, 107 :: 		curr_transfer = curr_transfer +  1;
0x1A52	0x4951    LDR	R1, [PC, #324]
0x1A54	0xF9B10000  LDRSH	R0, [R1, #0]
0x1A58	0x1C40    ADDS	R0, R0, #1
0x1A5A	0x8008    STRH	R0, [R1, #0]
;magnetometer.c, 108 :: 		} else if(BTF_I2C == 1) {
0x1A5C	0xE005    B	L_event_handler12
L_event_handler11:
0x1A5E	0x4951    LDR	R1, [PC, #324]
0x1A60	0x6808    LDR	R0, [R1, #0]
0x1A62	0x2800    CMP	R0, #0
0x1A64	0xD001    BEQ	L_event_handler13
;magnetometer.c, 109 :: 		i2c_stop_(); //if BTF flag gets activated during sending phase, we stop
0x1A66	0xF7FEFEFD  BL	_i2c_stop_+0
;magnetometer.c, 110 :: 		}
L_event_handler13:
L_event_handler12:
;magnetometer.c, 111 :: 		} else {
0x1A6A	0xE01F    B	L_event_handler14
L_event_handler10:
;magnetometer.c, 112 :: 		if(curr_transfer == 0) { //we send regAddr if we haven't yet
0x1A6C	0x484A    LDR	R0, [PC, #296]
0x1A6E	0xF9B00000  LDRSH	R0, [R0, #0]
0x1A72	0xB948    CBNZ	R0, L_event_handler15
;magnetometer.c, 113 :: 		i2c_send(reg_addr);
0x1A74	0x484C    LDR	R0, [PC, #304]
0x1A76	0x7800    LDRB	R0, [R0, #0]
0x1A78	0xF7FEFF12  BL	_i2c_send+0
;magnetometer.c, 114 :: 		curr_transfer = curr_transfer + 1;
0x1A7C	0x4946    LDR	R1, [PC, #280]
0x1A7E	0xF9B10000  LDRSH	R0, [R1, #0]
0x1A82	0x1C40    ADDS	R0, R0, #1
0x1A84	0x8008    STRH	R0, [R1, #0]
;magnetometer.c, 115 :: 		} else if(BTF_I2C == 1) { //we wait for BTF flag to either do repetead start or to continue on next phase
0x1A86	0xE011    B	L_event_handler16
L_event_handler15:
0x1A88	0x4946    LDR	R1, [PC, #280]
0x1A8A	0x6808    LDR	R0, [R1, #0]
0x1A8C	0xB170    CBZ	R0, L_event_handler17
;magnetometer.c, 116 :: 		reg_send = 1;
0x1A8E	0x2101    MOVS	R1, #1
0x1A90	0xB209    SXTH	R1, R1
0x1A92	0x4838    LDR	R0, [PC, #224]
0x1A94	0x8001    STRH	R1, [R0, #0]
;magnetometer.c, 117 :: 		curr_transfer = 0;
0x1A96	0x2100    MOVS	R1, #0
0x1A98	0xB209    SXTH	R1, R1
0x1A9A	0x483F    LDR	R0, [PC, #252]
0x1A9C	0x8001    STRH	R1, [R0, #0]
;magnetometer.c, 118 :: 		if(r_notw == 1)
0x1A9E	0x4838    LDR	R0, [PC, #224]
0x1AA0	0xF9B00000  LDRSH	R0, [R0, #0]
0x1AA4	0x2801    CMP	R0, #1
0x1AA6	0xD101    BNE	L_event_handler18
;magnetometer.c, 119 :: 		i2c_start_();
0x1AA8	0xF7FFFBCA  BL	_i2c_start_+0
L_event_handler18:
;magnetometer.c, 120 :: 		}
L_event_handler17:
L_event_handler16:
;magnetometer.c, 121 :: 		}
L_event_handler14:
;magnetometer.c, 122 :: 		break;
0x1AAC	0xE056    B	L_event_handler4
;magnetometer.c, 123 :: 		case RECEIVED:
L_event_handler19:
;magnetometer.c, 124 :: 		state_ = 4;
0x1AAE	0x2104    MOVS	R1, #4
0x1AB0	0xB209    SXTH	R1, R1
0x1AB2	0x482E    LDR	R0, [PC, #184]
0x1AB4	0x8001    STRH	R1, [R0, #0]
;magnetometer.c, 126 :: 		if(curr_transfer != transfer_count) {
0x1AB6	0x4839    LDR	R0, [PC, #228]
0x1AB8	0xF9B01000  LDRSH	R1, [R0, #0]
0x1ABC	0x4836    LDR	R0, [PC, #216]
0x1ABE	0xF9B00000  LDRSH	R0, [R0, #0]
0x1AC2	0x4288    CMP	R0, R1
0x1AC4	0xD037    BEQ	L_event_handler20
;magnetometer.c, 127 :: 		transfer[curr_transfer] = i2c_recv();
0x1AC6	0x4834    LDR	R0, [PC, #208]
0x1AC8	0x9002    STR	R0, [SP, #8]
0x1ACA	0xF9B01000  LDRSH	R1, [R0, #0]
0x1ACE	0x4834    LDR	R0, [PC, #208]
0x1AD0	0x6800    LDR	R0, [R0, #0]
0x1AD2	0x1840    ADDS	R0, R0, R1
0x1AD4	0x9001    STR	R0, [SP, #4]
0x1AD6	0xF7FEFECD  BL	_i2c_recv+0
0x1ADA	0x9901    LDR	R1, [SP, #4]
0x1ADC	0x7008    STRB	R0, [R1, #0]
;magnetometer.c, 128 :: 		curr_transfer = curr_transfer + 1;
0x1ADE	0x9A02    LDR	R2, [SP, #8]
0x1AE0	0x4610    MOV	R0, R2
0x1AE2	0xF9B00000  LDRSH	R0, [R0, #0]
0x1AE6	0x1C41    ADDS	R1, R0, #1
0x1AE8	0xB209    SXTH	R1, R1
0x1AEA	0x8011    STRH	R1, [R2, #0]
;magnetometer.c, 130 :: 		if(curr_transfer == transfer_count) {// || transfer_count == curr_transfer) && transfer_count != 1) {
0x1AEC	0x482B    LDR	R0, [PC, #172]
0x1AEE	0xF9B00000  LDRSH	R0, [R0, #0]
0x1AF2	0x4281    CMP	R1, R0
0x1AF4	0xD109    BNE	L_event_handler21
;magnetometer.c, 131 :: 		state_ = 5;
0x1AF6	0x2105    MOVS	R1, #5
0x1AF8	0xB209    SXTH	R1, R1
0x1AFA	0x481C    LDR	R0, [PC, #112]
0x1AFC	0x8001    STRH	R1, [R0, #0]
;magnetometer.c, 132 :: 		ACKN = 0; //prepare NACK
0x1AFE	0x2100    MOVS	R1, #0
0x1B00	0xB249    SXTB	R1, R1
0x1B02	0x481B    LDR	R0, [PC, #108]
0x1B04	0x6001    STR	R1, [R0, #0]
;magnetometer.c, 133 :: 		i2c_stop_(); //prepare STOPPING
0x1B06	0xF7FEFEAD  BL	_i2c_stop_+0
;magnetometer.c, 134 :: 		}
L_event_handler21:
;magnetometer.c, 136 :: 		if(curr_transfer == transfer_count) {
0x1B0A	0x4824    LDR	R0, [PC, #144]
0x1B0C	0xF9B01000  LDRSH	R1, [R0, #0]
0x1B10	0x4821    LDR	R0, [PC, #132]
0x1B12	0xF9B00000  LDRSH	R0, [R0, #0]
0x1B16	0x4288    CMP	R0, R1
0x1B18	0xD10C    BNE	L_event_handler22
;magnetometer.c, 137 :: 		if(reading_xyz == 1) { //if magnet data reading state
0x1B1A	0x4824    LDR	R0, [PC, #144]
0x1B1C	0xF9B00000  LDRSH	R0, [R0, #0]
0x1B20	0x2801    CMP	R0, #1
0x1B22	0xD107    BNE	L_event_handler23
;magnetometer.c, 138 :: 		reading_xyz = 0;
0x1B24	0x2100    MOVS	R1, #0
0x1B26	0xB209    SXTH	R1, R1
0x1B28	0x4820    LDR	R0, [PC, #128]
0x1B2A	0x8001    STRH	R1, [R0, #0]
;magnetometer.c, 139 :: 		calcAngle(transfer); //calculate and display output
0x1B2C	0x481C    LDR	R0, [PC, #112]
0x1B2E	0x6800    LDR	R0, [R0, #0]
0x1B30	0xF7FEFEC0  BL	_calcAngle+0
;magnetometer.c, 140 :: 		}
L_event_handler23:
;magnetometer.c, 141 :: 		}
L_event_handler22:
;magnetometer.c, 142 :: 		} else  {
0x1B34	0xE001    B	L_event_handler24
L_event_handler20:
;magnetometer.c, 143 :: 		i2c_recv(); //if we don't expect anything just dummy recv
0x1B36	0xF7FEFE9D  BL	_i2c_recv+0
;magnetometer.c, 144 :: 		}
L_event_handler24:
;magnetometer.c, 146 :: 		break;
0x1B3A	0xE00F    B	L_event_handler4
;magnetometer.c, 147 :: 		case DEFAULT:
L_event_handler25:
;magnetometer.c, 148 :: 		break;
0x1B3C	0xE00E    B	L_event_handler4
;magnetometer.c, 149 :: 		}
L_event_handler3:
0x1B3E	0xF9BD000C  LDRSH	R0, [SP, #12]
0x1B42	0x2800    CMP	R0, #0
0x1B44	0xF43FAF3B  BEQ	L_event_handler5
0x1B48	0x2801    CMP	R0, #1
0x1B4A	0xF43FAF57  BEQ	L_event_handler8
0x1B4E	0x2803    CMP	R0, #3
0x1B50	0xF43FAF65  BEQ	L_event_handler9
0x1B54	0x2802    CMP	R0, #2
0x1B56	0xD0AA    BEQ	L_event_handler19
0x1B58	0x2805    CMP	R0, #5
0x1B5A	0xD0EF    BEQ	L_event_handler25
L_event_handler4:
;magnetometer.c, 151 :: 		EnableInterrupts();
0x1B5C	0xF7FFFC20  BL	_EnableInterrupts+0
;magnetometer.c, 152 :: 		}
L_end_event_handler:
0x1B60	0xF8DDE000  LDR	LR, [SP, #0]
0x1B64	0xB004    ADD	SP, SP, #16
0x1B66	0xBC90    POP	(R4, R7)
0x1B68	0x4770    BX	LR
0x1B6A	0xBF00    NOP
0x1B6C	0x00062000  	_state_+0
0x1B70	0x0028420B  	I2C2_CR1bits+0
0x1B74	0x00002000  	_reg_send+0
0x1B78	0x00392000  	_address+0
0x1B7C	0x58104000  	I2C2_DR+0
0x1B80	0x00422000  	_r_notw+0
0x1B84	0x0020420B  	I2C2_CR1bits+0
0x1B88	0x58144000  	I2C2_SR1+0
0x1B8C	0x00562000  	_dummy1+0
0x1B90	0x58184000  	I2C2_SR2+0
0x1B94	0x005C2000  	_dummy2+0
0x1B98	0x005E2000  	_curr_transfer+0
0x1B9C	0x003A2000  	_transfer_count+0
0x1BA0	0x003C2000  	_transfer+0
0x1BA4	0x0288420B  	I2C2_SR1bits+0
0x1BA8	0x00462000  	_reg_addr+0
0x1BAC	0x00042000  	_reading_xyz+0
; end of _event_handler
_DisableInterrupts:
;__Lib_System_4XX.c, 142 :: 		
0x1318	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 145 :: 		
0x131A	0xF3EF8C10  MRS	R12, #16
0x131E	0x4660    MOV	R0, R12
; result start address is: 0 (R0)
;__Lib_System_4XX.c, 146 :: 		
0x1320	0xB672    CPSID	i
;__Lib_System_4XX.c, 148 :: 		
; result end address is: 0 (R0)
;__Lib_System_4XX.c, 149 :: 		
L_end_DisableInterrupts:
0x1322	0xB001    ADD	SP, SP, #4
0x1324	0x4770    BX	LR
; end of _DisableInterrupts
_i2c_get_event:
;i2c.c, 24 :: 		int i2c_get_event() {
;i2c.c, 25 :: 		long int sreg1 = I2C2_SR1;
0x1328	0x4819    LDR	R0, [PC, #100]
; sreg1 start address is: 8 (R2)
0x132A	0x6802    LDR	R2, [R0, #0]
;i2c.c, 26 :: 		long int sreg2 = I2C2_SR2;
0x132C	0x4819    LDR	R0, [PC, #100]
; sreg2 start address is: 4 (R1)
0x132E	0x6801    LDR	R1, [R0, #0]
;i2c.c, 27 :: 		sreg = (sreg2 << 16) | sreg1;
0x1330	0x0408    LSLS	R0, R1, #16
; sreg2 end address is: 4 (R1)
0x1332	0xEA400102  ORR	R1, R0, R2, LSL #0
; sreg1 end address is: 8 (R2)
0x1336	0x4818    LDR	R0, [PC, #96]
0x1338	0x6001    STR	R1, [R0, #0]
;i2c.c, 28 :: 		if((sreg & STARTING_EV5) == STARTING_EV5) { //EV5
0x133A	0xF0010001  AND	R0, R1, #1
0x133E	0x2801    CMP	R0, #1
0x1340	0xD102    BNE	L_i2c_get_event0
;i2c.c, 29 :: 		return STARTING;
0x1342	0x2000    MOVS	R0, #0
0x1344	0xB200    SXTH	R0, R0
0x1346	0xE022    B	L_end_i2c_get_event
;i2c.c, 30 :: 		} else if(I2C2_SR1bits.STOPF == 1) {
L_i2c_get_event0:
0x1348	0x4914    LDR	R1, [PC, #80]
0x134A	0x6808    LDR	R0, [R1, #0]
0x134C	0xB110    CBZ	R0, L_i2c_get_event2
;i2c.c, 31 :: 		return STOPING;
0x134E	0x2004    MOVS	R0, #4
0x1350	0xB200    SXTH	R0, R0
0x1352	0xE01C    B	L_end_i2c_get_event
;i2c.c, 32 :: 		} else if((sreg & ADDR_SENT_EV6) == ADDR_SENT_EV6) { //EV6
L_i2c_get_event2:
0x1354	0x4810    LDR	R0, [PC, #64]
0x1356	0x6800    LDR	R0, [R0, #0]
0x1358	0xF0000002  AND	R0, R0, #2
0x135C	0x2802    CMP	R0, #2
0x135E	0xD102    BNE	L_i2c_get_event4
;i2c.c, 33 :: 		return ADDRESS_SENT;
0x1360	0x2001    MOVS	R0, #1
0x1362	0xB200    SXTH	R0, R0
0x1364	0xE013    B	L_end_i2c_get_event
;i2c.c, 34 :: 		} else if((sreg & TRANSMITTED_EV8) == TRANSMITTED_EV8) { //EV8
L_i2c_get_event4:
0x1366	0x480C    LDR	R0, [PC, #48]
0x1368	0x6800    LDR	R0, [R0, #0]
0x136A	0xF0000080  AND	R0, R0, #128
0x136E	0x2880    CMP	R0, #128
0x1370	0xD102    BNE	L_i2c_get_event6
;i2c.c, 35 :: 		return TRANSMITTED;
0x1372	0x2003    MOVS	R0, #3
0x1374	0xB200    SXTH	R0, R0
0x1376	0xE00A    B	L_end_i2c_get_event
;i2c.c, 36 :: 		} else if((sreg & RECEIVED_EV7) == RECEIVED_EV7) { //EV8
L_i2c_get_event6:
0x1378	0x4807    LDR	R0, [PC, #28]
0x137A	0x6800    LDR	R0, [R0, #0]
0x137C	0xF0000040  AND	R0, R0, #64
0x1380	0x2840    CMP	R0, #64
0x1382	0xD102    BNE	L_i2c_get_event8
;i2c.c, 37 :: 		return RECEIVED;
0x1384	0x2002    MOVS	R0, #2
0x1386	0xB200    SXTH	R0, R0
0x1388	0xE001    B	L_end_i2c_get_event
;i2c.c, 38 :: 		} else {
L_i2c_get_event8:
;i2c.c, 39 :: 		return DEFAULT;
0x138A	0x2005    MOVS	R0, #5
0x138C	0xB200    SXTH	R0, R0
;i2c.c, 41 :: 		}
L_end_i2c_get_event:
0x138E	0x4770    BX	LR
0x1390	0x58144000  	I2C2_SR1+0
0x1394	0x58184000  	I2C2_SR2+0
0x1398	0x00582000  	_sreg+0
0x139C	0x0290420B  	I2C2_SR1bits+0
; end of _i2c_get_event
_i2c_send_addr:
;i2c.c, 103 :: 		void i2c_send_addr(char addr, int r_w) {
; r_w start address is: 4 (R1)
; addr start address is: 0 (R0)
; r_w end address is: 4 (R1)
; addr end address is: 0 (R0)
; addr start address is: 0 (R0)
; r_w start address is: 4 (R1)
;i2c.c, 104 :: 		I2C2_DR = addr << 1 | r_w;
0x0880	0x0042    LSLS	R2, R0, #1
0x0882	0xB292    UXTH	R2, R2
; addr end address is: 0 (R0)
0x0884	0xEA420301  ORR	R3, R2, R1, LSL #0
0x0888	0xB29B    UXTH	R3, R3
; r_w end address is: 4 (R1)
0x088A	0x4A03    LDR	R2, [PC, #12]
0x088C	0x6013    STR	R3, [R2, #0]
;i2c.c, 105 :: 		address = 0;
0x088E	0x2300    MOVS	R3, #0
0x0890	0x4A02    LDR	R2, [PC, #8]
0x0892	0x7013    STRB	R3, [R2, #0]
;i2c.c, 106 :: 		}
L_end_i2c_send_addr:
0x0894	0x4770    BX	LR
0x0896	0xBF00    NOP
0x0898	0x58104000  	I2C2_DR+0
0x089C	0x00392000  	_address+0
; end of _i2c_send_addr
_i2c_send:
;i2c.c, 108 :: 		void i2c_send(char d) {
; d start address is: 0 (R0)
; d end address is: 0 (R0)
; d start address is: 0 (R0)
;i2c.c, 109 :: 		I2C2_DRbits.DR = d;
0x08A0	0xB2C3    UXTB	R3, R0
; d end address is: 0 (R0)
0x08A2	0x4A03    LDR	R2, [PC, #12]
0x08A4	0x7811    LDRB	R1, [R2, #0]
0x08A6	0xF3630107  BFI	R1, R3, #0, #8
0x08AA	0x7011    STRB	R1, [R2, #0]
;i2c.c, 110 :: 		}
L_end_i2c_send:
0x08AC	0x4770    BX	LR
0x08AE	0xBF00    NOP
0x08B0	0x58104000  	I2C2_DRbits+0
; end of _i2c_send
_i2c_stop_:
;i2c.c, 98 :: 		void i2c_stop_() {
;i2c.c, 99 :: 		I2C2_CR1bits.STOP_ = 1;
0x0864	0x2101    MOVS	R1, #1
0x0866	0xB249    SXTB	R1, R1
0x0868	0x4801    LDR	R0, [PC, #4]
0x086A	0x6001    STR	R1, [R0, #0]
;i2c.c, 100 :: 		}
L_end_i2c_stop_:
0x086C	0x4770    BX	LR
0x086E	0xBF00    NOP
0x0870	0x0024420B  	I2C2_CR1bits+0
; end of _i2c_stop_
_i2c_recv:
;i2c.c, 112 :: 		char i2c_recv() {
;i2c.c, 113 :: 		char result = (char)I2C2_DR;
0x0874	0x4801    LDR	R0, [PC, #4]
0x0876	0x6800    LDR	R0, [R0, #0]
;i2c.c, 115 :: 		return result;
;i2c.c, 116 :: 		}
L_end_i2c_recv:
0x0878	0x4770    BX	LR
0x087A	0xBF00    NOP
0x087C	0x58104000  	I2C2_DR+0
; end of _i2c_recv
_calcAngle:
;magnetometer.c, 40 :: 		void calcAngle(char *xyz) {
; xyz start address is: 0 (R0)
0x08B4	0xB083    SUB	SP, SP, #12
0x08B6	0xF8CDE000  STR	LR, [SP, #0]
; xyz end address is: 0 (R0)
; xyz start address is: 0 (R0)
;magnetometer.c, 43 :: 		float declAngle = 0.069;
; declAngle start address is: 32 (S8)
0x08BA	0x4935    LDR	R1, [PC, #212]
0x08BC	0xEE041A10  VMOV	S8, R1
;magnetometer.c, 49 :: 		x = (((int)xyz[0]) << 8) | xyz[1];
0x08C0	0x7801    LDRB	R1, [R0, #0]
0x08C2	0x020A    LSLS	R2, R1, #8
0x08C4	0xB212    SXTH	R2, R2
0x08C6	0x1C41    ADDS	R1, R0, #1
0x08C8	0x7809    LDRB	R1, [R1, #0]
0x08CA	0xEA420301  ORR	R3, R2, R1, LSL #0
0x08CE	0xB21B    SXTH	R3, R3
;magnetometer.c, 50 :: 		y = (((int)xyz[2]) << 8) | xyz[3];
0x08D0	0x1C81    ADDS	R1, R0, #2
0x08D2	0x7809    LDRB	R1, [R1, #0]
0x08D4	0x020A    LSLS	R2, R1, #8
0x08D6	0xB212    SXTH	R2, R2
0x08D8	0x1CC1    ADDS	R1, R0, #3
; xyz end address is: 0 (R0)
0x08DA	0x7809    LDRB	R1, [R1, #0]
0x08DC	0xEA420101  ORR	R1, R2, R1, LSL #0
0x08E0	0xB209    SXTH	R1, R1
;magnetometer.c, 53 :: 		y -= (int)((0x0000029A + 0x00000438) >> 1);
0x08E2	0xF2A13269  SUBW	R2, R1, #873
0x08E6	0xB212    SXTH	R2, R2
;magnetometer.c, 54 :: 		x -= (int)((0x0000FD00 + 0x0000FB4F) >> 1);
0x08E8	0xF20331D9  ADDW	R1, R3, #985
0x08EC	0xB209    SXTH	R1, R1
;magnetometer.c, 55 :: 		heading = atan2(y, x);
0x08EE	0xEE001A90  VMOV	S1, R1
0x08F2	0xEEF80AE0  VCVT.F32.S32	S1, S1
0x08F6	0xEE002A10  VMOV	S0, R2
0x08FA	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x08FE	0xF7FFFE29  BL	_atan2+0
;magnetometer.c, 56 :: 		heading = heading - declAngle;
0x0902	0xEE300A44  VSUB.F32	S0, S0, S8
; declAngle end address is: 32 (S8)
; heading start address is: 4 (S1)
0x0906	0xEEF00A40  VMOV.F32	S1, S0
;magnetometer.c, 58 :: 		if(heading < 0)   heading += 2*3.14;
0x090A	0xEEB50AC0  VCMPE.F32	S0, #0.0
0x090E	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0912	0xDA09    BGE	L__calcAngle51
0x0914	0x491F    LDR	R1, [PC, #124]
0x0916	0xEE001A10  VMOV	S0, R1
0x091A	0xEE300A80  VADD.F32	S0, S1, S0
0x091E	0xEEF00A40  VMOV.F32	S1, S0
; heading end address is: 4 (S1)
0x0922	0xEEB01A60  VMOV.F32	S2, S1
0x0926	0xE001    B	L_calcAngle0
L__calcAngle51:
0x0928	0xEEB01A60  VMOV.F32	S2, S1
L_calcAngle0:
;magnetometer.c, 61 :: 		if(heading > 2*3.14)heading -= 2*3.14;
; heading start address is: 8 (S2)
0x092C	0x4919    LDR	R1, [PC, #100]
0x092E	0xEE001A10  VMOV	S0, R1
0x0932	0xEEB41AC0  VCMPE.F32	S2, S0
0x0936	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x093A	0xDD05    BLE	L__calcAngle52
0x093C	0x4915    LDR	R1, [PC, #84]
0x093E	0xEE001A10  VMOV	S0, R1
0x0942	0xEE311A40  VSUB.F32	S2, S2, S0
; heading end address is: 8 (S2)
0x0946	0xE7FF    B	L_calcAngle1
L__calcAngle52:
L_calcAngle1:
;magnetometer.c, 63 :: 		headingD = heading * 180 / 3.14;
; heading start address is: 8 (S2)
0x0948	0x4913    LDR	R1, [PC, #76]
0x094A	0xEE001A10  VMOV	S0, R1
0x094E	0xEE610A00  VMUL.F32	S1, S2, S0
; heading end address is: 8 (S2)
0x0952	0x4912    LDR	R1, [PC, #72]
0x0954	0xEE001A10  VMOV	S0, R1
0x0958	0xEE800A80  VDIV.F32	S0, S1, S0
;magnetometer.c, 64 :: 		angle = (int)headingD;
0x095C	0xEEBD0A40  VCVT.S32.F32	S0, S0
0x0960	0xEE101A10  VMOV	R1, S0
0x0964	0xB209    SXTH	R1, R1
; angle start address is: 0 (R0)
0x0966	0xB208    SXTH	R0, R1
;magnetometer.c, 65 :: 		if(angle > 180) {
0x0968	0x29B4    CMP	R1, #180
0x096A	0xDD03    BLE	L__calcAngle53
;magnetometer.c, 66 :: 		angle = angle - 360;
0x096C	0xF5A070B4  SUB	R0, R0, #360
0x0970	0xB200    SXTH	R0, R0
; angle end address is: 0 (R0)
;magnetometer.c, 67 :: 		}
0x0972	0xE7FF    B	L_calcAngle2
L__calcAngle53:
;magnetometer.c, 65 :: 		if(angle > 180) {
;magnetometer.c, 67 :: 		}
L_calcAngle2:
;magnetometer.c, 70 :: 		IntToStr(angle, output);
; angle start address is: 0 (R0)
0x0974	0xA901    ADD	R1, SP, #4
; angle end address is: 0 (R0)
0x0976	0xF7FFFE49  BL	_IntToStr+0
;magnetometer.c, 71 :: 		debug(Ltrim(output));
0x097A	0xA901    ADD	R1, SP, #4
0x097C	0x4608    MOV	R0, R1
0x097E	0xF7FFFE8F  BL	_Ltrim+0
0x0982	0xF7FFFE7B  BL	_debug+0
;magnetometer.c, 72 :: 		}
L_end_calcAngle:
0x0986	0xF8DDE000  LDR	LR, [SP, #0]
0x098A	0xB003    ADD	SP, SP, #12
0x098C	0x4770    BX	LR
0x098E	0xBF00    NOP
0x0990	0x4FDF3D8D  	#1032671199
0x0994	0xF5C340C8  	#1086911939
0x0998	0x00004334  	#1127481344
0x099C	0xF5C34048  	#1078523331
; end of _calcAngle
_atan2:
;__Lib_CMath.c, 240 :: 		
0x0554	0xB082    SUB	SP, SP, #8
0x0556	0xF8CDE000  STR	LR, [SP, #0]
; x start address is: 4 (S1)
; y start address is: 0 (S0)
0x055A	0xEEF03A40  VMOV.F32	S7, S0
0x055E	0xEEB03A60  VMOV.F32	S6, S1
; x end address is: 4 (S1)
; y end address is: 0 (S0)
; y start address is: 28 (S7)
; x start address is: 24 (S6)
;__Lib_CMath.c, 243 :: 		
0x0562	0xEEB00A63  VMOV.F32	S0, S7
0x0566	0xF7FFFE2F  BL	_fabs+0
0x056A	0xED8D0A01  VSTR.32	S0, [SP, #4]
0x056E	0xEEB00A43  VMOV.F32	S0, S6
0x0572	0xF7FFFE29  BL	_fabs+0
0x0576	0xEDDD0A01  VLDR.32	S1, [SP, #4]
0x057A	0xEEF40AC0  VCMPE.F32	S1, S0
0x057E	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0582	0xDB20    BLT	L_atan242
;__Lib_CMath.c, 244 :: 		
0x0584	0xEE830A23  VDIV.F32	S0, S6, S7
0x0588	0xF7FFFE6E  BL	_atan+0
; v start address is: 4 (S1)
0x058C	0xEEF00A40  VMOV.F32	S1, S0
;__Lib_CMath.c, 245 :: 		
0x0590	0xEEF53AC0  VCMPE.F32	S7, #0.0
0x0594	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0598	0xDA12    BGE	L__atan275
; y end address is: 28 (S7)
;__Lib_CMath.c, 246 :: 		
0x059A	0xEEB53AC0  VCMPE.F32	S6, #0.0
0x059E	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x05A2	0xDB05    BLT	L_atan244
; x end address is: 24 (S6)
;__Lib_CMath.c, 247 :: 		
0x05A4	0x4A17    LDR	R2, [PC, #92]
0x05A6	0xEE002A10  VMOV	S0, R2
0x05AA	0xEE300A80  VADD.F32	S0, S1, S0
; v end address is: 4 (S1)
; v start address is: 0 (S0)
; v end address is: 0 (S0)
0x05AE	0xE006    B	L_atan245
L_atan244:
;__Lib_CMath.c, 249 :: 		
; v start address is: 4 (S1)
0x05B0	0x4A14    LDR	R2, [PC, #80]
0x05B2	0xEE002A10  VMOV	S0, R2
0x05B6	0xEE700AC0  VSUB.F32	S1, S1, S0
; v end address is: 4 (S1)
0x05BA	0xEEB00A60  VMOV.F32	S0, S1
L_atan245:
; v start address is: 0 (S0)
; v end address is: 0 (S0)
0x05BE	0xE001    B	L_atan243
L__atan275:
;__Lib_CMath.c, 245 :: 		
0x05C0	0xEEB00A60  VMOV.F32	S0, S1
;__Lib_CMath.c, 249 :: 		
L_atan243:
;__Lib_CMath.c, 250 :: 		
; v start address is: 0 (S0)
; v end address is: 0 (S0)
0x05C4	0xE019    B	L_end_atan2
;__Lib_CMath.c, 251 :: 		
L_atan242:
;__Lib_CMath.c, 252 :: 		
; x start address is: 24 (S6)
; y start address is: 28 (S7)
0x05C6	0xEE830A83  VDIV.F32	S0, S7, S6
; y end address is: 28 (S7)
0x05CA	0xF7FFFE4D  BL	_atan+0
0x05CE	0xEEF10A40  VNEG.F32	S1, S0
; v start address is: 4 (S1)
;__Lib_CMath.c, 253 :: 		
0x05D2	0xEEB53AC0  VCMPE.F32	S6, #0.0
0x05D6	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x05DA	0xDA05    BGE	L_atan246
; x end address is: 24 (S6)
;__Lib_CMath.c, 254 :: 		
0x05DC	0x4A0A    LDR	R2, [PC, #40]
0x05DE	0xEE002A10  VMOV	S0, R2
0x05E2	0xEE300AC0  VSUB.F32	S0, S1, S0
; v end address is: 4 (S1)
; v start address is: 0 (S0)
; v end address is: 0 (S0)
0x05E6	0xE008    B	L_atan247
L_atan246:
;__Lib_CMath.c, 256 :: 		
; v start address is: 4 (S1)
0x05E8	0x4A07    LDR	R2, [PC, #28]
0x05EA	0xEE002A10  VMOV	S0, R2
0x05EE	0xEE300A80  VADD.F32	S0, S1, S0
0x05F2	0xEEF00A40  VMOV.F32	S1, S0
; v end address is: 4 (S1)
0x05F6	0xEEB00A60  VMOV.F32	S0, S1
L_atan247:
;__Lib_CMath.c, 258 :: 		
; v start address is: 0 (S0)
; v end address is: 0 (S0)
;__Lib_CMath.c, 259 :: 		
L_end_atan2:
0x05FA	0xF8DDE000  LDR	LR, [SP, #0]
0x05FE	0xB002    ADD	SP, SP, #8
0x0600	0x4770    BX	LR
0x0602	0xBF00    NOP
0x0604	0x0FDB4049  	#1078530011
0x0608	0x0FDB3FC9  	#1070141403
; end of _atan2
_fabs:
;__Lib_CMath.c, 31 :: 		
0x01C8	0xB081    SUB	SP, SP, #4
; d start address is: 0 (S0)
0x01CA	0xEEF00A40  VMOV.F32	S1, S0
; d end address is: 0 (S0)
; d start address is: 4 (S1)
;__Lib_CMath.c, 32 :: 		
0x01CE	0xEEF50AC0  VCMPE.F32	S1, #0.0
0x01D2	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x01D6	0xDA02    BGE	L_fabs0
;__Lib_CMath.c, 33 :: 		
0x01D8	0xEEB10A60  VNEG.F32	S0, S1
; d end address is: 4 (S1)
0x01DC	0xE001    B	L_end_fabs
L_fabs0:
;__Lib_CMath.c, 34 :: 		
; d start address is: 4 (S1)
0x01DE	0xEEB00A60  VMOV.F32	S0, S1
; d end address is: 4 (S1)
;__Lib_CMath.c, 35 :: 		
L_end_fabs:
0x01E2	0xB001    ADD	SP, SP, #4
0x01E4	0x4770    BX	LR
; end of _fabs
_atan:
;__Lib_CMath.c, 179 :: 		
0x0268	0xB081    SUB	SP, SP, #4
0x026A	0xF8CDE000  STR	LR, [SP, #0]
; f start address is: 0 (S0)
0x026E	0xEEF01A40  VMOV.F32	S3, S0
; f end address is: 0 (S0)
; f start address is: 12 (S3)
;__Lib_CMath.c, 199 :: 		
0x0272	0xEEB00A61  VMOV.F32	S0, S3
0x0276	0xF7FFFFA7  BL	_fabs+0
; val start address is: 20 (S5)
0x027A	0xEEF02A40  VMOV.F32	S5, S0
0x027E	0xEEB50AC0  VCMPE.F32	S0, #0.0
0x0282	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0286	0xD104    BNE	L_atan34
; f end address is: 12 (S3)
; val end address is: 20 (S5)
;__Lib_CMath.c, 200 :: 		
0x0288	0xF04F0100  MOV	R1, #0
0x028C	0xEE001A10  VMOV	S0, R1
0x0290	0xE036    B	L_end_atan
L_atan34:
;__Lib_CMath.c, 201 :: 		
; val start address is: 20 (S5)
; f start address is: 12 (S3)
0x0292	0xEEB70A00  VMOV.F32	S0, #1
0x0296	0xEEF42AC0  VCMPE.F32	S5, S0
0x029A	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x029E	0xF2400100  MOVW	R1, #0
0x02A2	0xDD00    BLE	L__atan90
0x02A4	0x2101    MOVS	R1, #1
L__atan90:
; recip start address is: 12 (R3)
0x02A6	0xB2CB    UXTB	R3, R1
0x02A8	0xB2C9    UXTB	R1, R1
0x02AA	0xB121    CBZ	R1, L__atan73
;__Lib_CMath.c, 202 :: 		
0x02AC	0xEEB70A00  VMOV.F32	S0, #1
0x02B0	0xEEC02A22  VDIV.F32	S5, S0, S5
; val end address is: 20 (S5)
0x02B4	0xE7FF    B	L_atan35
L__atan73:
;__Lib_CMath.c, 201 :: 		
;__Lib_CMath.c, 202 :: 		
L_atan35:
;__Lib_CMath.c, 203 :: 		
; val start address is: 20 (S5)
0x02B6	0xEE220AA2  VMUL.F32	S0, S5, S5
; val_squared start address is: 16 (S4)
0x02BA	0xEEB02A40  VMOV.F32	S4, S0
;__Lib_CMath.c, 204 :: 		
0x02BE	0x2105    MOVS	R1, #5
0x02C0	0xB209    SXTH	R1, R1
0x02C2	0x4811    LDR	R0, [PC, #68]
0x02C4	0xF7FFFF60  BL	__Lib_CMath_eval_poly+0
0x02C8	0xEE622A80  VMUL.F32	S5, S5, S0
;__Lib_CMath.c, 205 :: 		
0x02CC	0x2104    MOVS	R1, #4
0x02CE	0xB209    SXTH	R1, R1
0x02D0	0x480E    LDR	R0, [PC, #56]
0x02D2	0xEEB00A42  VMOV.F32	S0, S4
; val_squared end address is: 16 (S4)
0x02D6	0xF7FFFF57  BL	__Lib_CMath_eval_poly+0
0x02DA	0xEEC20A80  VDIV.F32	S1, S5, S0
; val end address is: 20 (S5)
; val start address is: 4 (S1)
;__Lib_CMath.c, 206 :: 		
0x02DE	0xB12B    CBZ	R3, L__atan74
; recip end address is: 12 (R3)
;__Lib_CMath.c, 207 :: 		
0x02E0	0x490B    LDR	R1, [PC, #44]
0x02E2	0xEE001A10  VMOV	S0, R1
0x02E6	0xEE700A60  VSUB.F32	S1, S0, S1
; val end address is: 4 (S1)
0x02EA	0xE7FF    B	L_atan36
L__atan74:
;__Lib_CMath.c, 206 :: 		
;__Lib_CMath.c, 207 :: 		
L_atan36:
;__Lib_CMath.c, 208 :: 		
; val start address is: 4 (S1)
0x02EC	0xEEF51AC0  VCMPE.F32	S3, #0.0
0x02F0	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x02F4	0xDA02    BGE	L_atan37
; f end address is: 12 (S3)
0x02F6	0xEEB10A60  VNEG.F32	S0, S1
; val end address is: 4 (S1)
; ?FLOC___atan?T93 start address is: 0 (S0)
; ?FLOC___atan?T93 end address is: 0 (S0)
0x02FA	0xE001    B	L_atan38
L_atan37:
; ?FLOC___atan?T93 start address is: 0 (S0)
; val start address is: 4 (S1)
0x02FC	0xEEB00A60  VMOV.F32	S0, S1
; val end address is: 4 (S1)
; ?FLOC___atan?T93 end address is: 0 (S0)
L_atan38:
; ?FLOC___atan?T93 start address is: 0 (S0)
;__Lib_CMath.c, 210 :: 		
; ?FLOC___atan?T93 end address is: 0 (S0)
;__Lib_CMath.c, 211 :: 		
L_end_atan:
0x0300	0xF8DDE000  LDR	LR, [SP, #0]
0x0304	0xB001    ADD	SP, SP, #4
0x0306	0x4770    BX	LR
0x0308	0x1C600000  	atan_coeff_a_L0+0
0x030C	0x1C780000  	atan_coeff_b_L0+0
0x0310	0x0FDB3FC9  	#1070141403
; end of _atan
__Lib_CMath_eval_poly:
;__Lib_CMath.c, 117 :: 		
; n start address is: 4 (R1)
; d start address is: 0 (R0)
0x0188	0xB081    SUB	SP, SP, #4
; x start address is: 0 (S0)
0x018A	0xEEF00A40  VMOV.F32	S1, S0
; n end address is: 4 (R1)
; d end address is: 0 (R0)
; x end address is: 0 (S0)
; x start address is: 4 (S1)
; d start address is: 0 (R0)
; n start address is: 4 (R1)
;__Lib_CMath.c, 120 :: 		
0x018E	0x008A    LSLS	R2, R1, #2
0x0190	0x1882    ADDS	R2, R0, R2
0x0192	0xED120A00  VLDR.32	S0, [R2, #0]
; res start address is: 8 (S2)
0x0196	0xEEB01A40  VMOV.F32	S2, S0
; x end address is: 4 (S1)
; res end address is: 8 (S2)
; n end address is: 4 (R1)
0x019A	0xEEB00A41  VMOV.F32	S0, S2
0x019E	0xEEB01A60  VMOV.F32	S2, S1
;__Lib_CMath.c, 121 :: 		
L___Lib_CMath_eval_poly17:
; res start address is: 0 (S0)
; x start address is: 8 (S2)
; n start address is: 4 (R1)
; d start address is: 0 (R0)
; d end address is: 0 (R0)
; x start address is: 8 (S2)
; x end address is: 8 (S2)
0x01A2	0xB179    CBZ	R1, L___Lib_CMath_eval_poly18
; d end address is: 0 (R0)
; x end address is: 8 (S2)
;__Lib_CMath.c, 122 :: 		
; x start address is: 8 (S2)
; d start address is: 0 (R0)
0x01A4	0xEE610A00  VMUL.F32	S1, S2, S0
; res end address is: 0 (S0)
0x01A8	0x1E4A    SUBS	R2, R1, #1
0x01AA	0xB212    SXTH	R2, R2
0x01AC	0xB211    SXTH	R1, R2
0x01AE	0x0092    LSLS	R2, R2, #2
0x01B0	0x1882    ADDS	R2, R0, R2
0x01B2	0xED120A00  VLDR.32	S0, [R2, #0]
0x01B6	0xEE300A80  VADD.F32	S0, S1, S0
; res start address is: 0 (S0)
0x01BA	0xED0D0A00  VSTR.32	S0, [SP, #0]
; d end address is: 0 (R0)
; x end address is: 8 (S2)
; n end address is: 4 (R1)
0x01BE	0xED1D0A00  VLDR.32	S0, [SP, #0]
0x01C2	0xE7EE    B	L___Lib_CMath_eval_poly17
L___Lib_CMath_eval_poly18:
;__Lib_CMath.c, 124 :: 		
; res end address is: 0 (S0)
;__Lib_CMath.c, 125 :: 		
L_end_eval_poly:
0x01C4	0xB001    ADD	SP, SP, #4
0x01C6	0x4770    BX	LR
; end of __Lib_CMath_eval_poly
_IntToStr:
;__Lib_Conversions.c, 211 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x060C	0xB081    SUB	SP, SP, #4
0x060E	0xF8CDE000  STR	LR, [SP, #0]
0x0612	0x460E    MOV	R6, R1
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 0 (R0)
; output start address is: 24 (R6)
;__Lib_Conversions.c, 217 :: 		
; negative start address is: 4 (R1)
0x0614	0x2100    MOVS	R1, #0
;__Lib_Conversions.c, 218 :: 		
; inword start address is: 12 (R3)
0x0616	0xB283    UXTH	R3, R0
;__Lib_Conversions.c, 219 :: 		
0x0618	0x2800    CMP	R0, #0
0x061A	0xDA05    BGE	L__IntToStr165
; inword end address is: 12 (R3)
;__Lib_Conversions.c, 220 :: 		
0x061C	0x2101    MOVS	R1, #1
;__Lib_Conversions.c, 221 :: 		
0x061E	0x4240    RSBS	R0, R0, #0
0x0620	0xB280    UXTH	R0, R0
; input end address is: 0 (R0)
; inword start address is: 0 (R0)
0x0622	0xB280    UXTH	R0, R0
; negative end address is: 4 (R1)
; inword end address is: 0 (R0)
0x0624	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 222 :: 		
0x0626	0xE001    B	L_IntToStr37
L__IntToStr165:
;__Lib_Conversions.c, 219 :: 		
0x0628	0xB298    UXTH	R0, R3
0x062A	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 222 :: 		
L_IntToStr37:
;__Lib_Conversions.c, 223 :: 		
; inword start address is: 0 (R0)
; negative start address is: 28 (R7)
0x062C	0x4631    MOV	R1, R6
; inword end address is: 0 (R0)
0x062E	0xF7FFFE71  BL	_WordToStr+0
;__Lib_Conversions.c, 225 :: 		
; i start address is: 4 (R1)
0x0632	0x2106    MOVS	R1, #6
; output end address is: 24 (R6)
; negative end address is: 28 (R7)
; i end address is: 4 (R1)
0x0634	0x4634    MOV	R4, R6
0x0636	0xB2B8    UXTH	R0, R7
;__Lib_Conversions.c, 226 :: 		
L_IntToStr38:
; i start address is: 4 (R1)
; negative start address is: 0 (R0)
; output start address is: 16 (R4)
0x0638	0x2900    CMP	R1, #0
0x063A	0xD908    BLS	L_IntToStr39
;__Lib_Conversions.c, 227 :: 		
0x063C	0x1863    ADDS	R3, R4, R1
0x063E	0x1E4A    SUBS	R2, R1, #1
0x0640	0xB292    UXTH	R2, R2
0x0642	0x18A2    ADDS	R2, R4, R2
0x0644	0x7812    LDRB	R2, [R2, #0]
0x0646	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 228 :: 		
0x0648	0x1E49    SUBS	R1, R1, #1
0x064A	0xB289    UXTH	R1, R1
;__Lib_Conversions.c, 229 :: 		
; i end address is: 4 (R1)
0x064C	0xE7F4    B	L_IntToStr38
L_IntToStr39:
;__Lib_Conversions.c, 230 :: 		
0x064E	0x2220    MOVS	R2, #32
0x0650	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 231 :: 		
0x0652	0xB170    CBZ	R0, L_IntToStr40
; negative end address is: 0 (R0)
;__Lib_Conversions.c, 232 :: 		
; i start address is: 0 (R0)
0x0654	0x2000    MOVS	R0, #0
; output end address is: 16 (R4)
; i end address is: 0 (R0)
0x0656	0xB281    UXTH	R1, R0
0x0658	0x4620    MOV	R0, R4
;__Lib_Conversions.c, 233 :: 		
L_IntToStr41:
; i start address is: 4 (R1)
; output start address is: 0 (R0)
0x065A	0x1842    ADDS	R2, R0, R1
0x065C	0x7812    LDRB	R2, [R2, #0]
0x065E	0x2A20    CMP	R2, #32
0x0660	0xD102    BNE	L_IntToStr42
0x0662	0x1C49    ADDS	R1, R1, #1
0x0664	0xB289    UXTH	R1, R1
0x0666	0xE7F8    B	L_IntToStr41
L_IntToStr42:
;__Lib_Conversions.c, 234 :: 		
0x0668	0x1E4A    SUBS	R2, R1, #1
0x066A	0xB292    UXTH	R2, R2
; i end address is: 4 (R1)
;__Lib_Conversions.c, 235 :: 		
0x066C	0x1883    ADDS	R3, R0, R2
; output end address is: 0 (R0)
0x066E	0x222D    MOVS	R2, #45
0x0670	0x701A    STRB	R2, [R3, #0]
L_IntToStr40:
;__Lib_Conversions.c, 236 :: 		
L_end_IntToStr:
0x0672	0xF8DDE000  LDR	LR, [SP, #0]
0x0676	0xB001    ADD	SP, SP, #4
0x0678	0x4770    BX	LR
; end of _IntToStr
_WordToStr:
;__Lib_Conversions.c, 114 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x0314	0xB081    SUB	SP, SP, #4
0x0316	0x460A    MOV	R2, R1
0x0318	0xB281    UXTH	R1, R0
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 4 (R1)
; output start address is: 8 (R2)
;__Lib_Conversions.c, 119 :: 		
; len start address is: 0 (R0)
0x031A	0x2000    MOVS	R0, #0
; input end address is: 4 (R1)
; output end address is: 8 (R2)
; len end address is: 0 (R0)
0x031C	0xB28D    UXTH	R5, R1
0x031E	0x4611    MOV	R1, R2
L_WordToStr11:
; len start address is: 0 (R0)
; output start address is: 4 (R1)
; input start address is: 20 (R5)
0x0320	0x2805    CMP	R0, #5
0x0322	0xD205    BCS	L_WordToStr12
;__Lib_Conversions.c, 120 :: 		
0x0324	0x180B    ADDS	R3, R1, R0
0x0326	0x2220    MOVS	R2, #32
0x0328	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 119 :: 		
0x032A	0x1C40    ADDS	R0, R0, #1
0x032C	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 120 :: 		
0x032E	0xE7F7    B	L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c, 121 :: 		
0x0330	0x180B    ADDS	R3, R1, R0
0x0332	0x2200    MOVS	R2, #0
0x0334	0x701A    STRB	R2, [R3, #0]
0x0336	0x1E40    SUBS	R0, R0, #1
0x0338	0xB2C0    UXTB	R0, R0
; output end address is: 4 (R1)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 123 :: 		
L_WordToStr14:
;__Lib_Conversions.c, 124 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x033A	0x180C    ADDS	R4, R1, R0
0x033C	0x230A    MOVS	R3, #10
0x033E	0xFBB5F2F3  UDIV	R2, R5, R3
0x0342	0xFB035212  MLS	R2, R3, R2, R5
0x0346	0xB292    UXTH	R2, R2
0x0348	0x3230    ADDS	R2, #48
0x034A	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 125 :: 		
0x034C	0x220A    MOVS	R2, #10
0x034E	0xFBB5F2F2  UDIV	R2, R5, R2
0x0352	0xB292    UXTH	R2, R2
0x0354	0xB295    UXTH	R5, R2
; input end address is: 20 (R5)
;__Lib_Conversions.c, 126 :: 		
0x0356	0xB902    CBNZ	R2, L_WordToStr16
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 127 :: 		
0x0358	0xE002    B	L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c, 128 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x035A	0x1E40    SUBS	R0, R0, #1
0x035C	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 129 :: 		
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
0x035E	0xE7EC    B	L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c, 130 :: 		
L_end_WordToStr:
0x0360	0xB001    ADD	SP, SP, #4
0x0362	0x4770    BX	LR
; end of _WordToStr
_Ltrim:
;__Lib_Conversions.c, 531 :: 		
; string start address is: 0 (R0)
0x06A0	0xB081    SUB	SP, SP, #4
0x06A2	0x4601    MOV	R1, R0
; string end address is: 0 (R0)
; string start address is: 4 (R1)
;__Lib_Conversions.c, 535 :: 		
; trimmed start address is: 20 (R5)
0x06A4	0xF2400500  MOVW	R5, #0
0x06A8	0xB22D    SXTH	R5, R5
;__Lib_Conversions.c, 536 :: 		
; original start address is: 0 (R0)
0x06AA	0x4608    MOV	R0, R1
;__Lib_Conversions.c, 537 :: 		
; p start address is: 16 (R4)
0x06AC	0x460C    MOV	R4, R1
; string end address is: 4 (R1)
; p end address is: 16 (R4)
; trimmed end address is: 20 (R5)
; original end address is: 0 (R0)
0x06AE	0x460B    MOV	R3, R1
;__Lib_Conversions.c, 538 :: 		
0x06B0	0xE7FF    B	L_Ltrim111
L__Ltrim175:
;__Lib_Conversions.c, 544 :: 		
;__Lib_Conversions.c, 538 :: 		
L_Ltrim111:
;__Lib_Conversions.c, 539 :: 		
; p start address is: 16 (R4)
; string start address is: 12 (R3)
; original start address is: 0 (R0)
; trimmed start address is: 20 (R5)
; string start address is: 12 (R3)
; string end address is: 12 (R3)
0x06B2	0x7801    LDRB	R1, [R0, #0]
0x06B4	0x2920    CMP	R1, #32
0x06B6	0xD101    BNE	L__Ltrim174
; string end address is: 12 (R3)
; string start address is: 12 (R3)
0x06B8	0xB905    CBNZ	R5, L__Ltrim173
; trimmed end address is: 20 (R5)
0x06BA	0xE004    B	L_Ltrim116
L__Ltrim174:
L__Ltrim173:
;__Lib_Conversions.c, 540 :: 		
; trimmed start address is: 20 (R5)
0x06BC	0x2501    MOVS	R5, #1
0x06BE	0xB22D    SXTH	R5, R5
;__Lib_Conversions.c, 541 :: 		
0x06C0	0x7801    LDRB	R1, [R0, #0]
0x06C2	0x7021    STRB	R1, [R4, #0]
0x06C4	0x1C64    ADDS	R4, R4, #1
; p end address is: 16 (R4)
; trimmed end address is: 20 (R5)
;__Lib_Conversions.c, 542 :: 		
L_Ltrim116:
;__Lib_Conversions.c, 544 :: 		
; p start address is: 16 (R4)
; trimmed start address is: 20 (R5)
0x06C6	0x4602    MOV	R2, R0
0x06C8	0x1C40    ADDS	R0, R0, #1
0x06CA	0x7811    LDRB	R1, [R2, #0]
0x06CC	0x2900    CMP	R1, #0
0x06CE	0xD1F0    BNE	L__Ltrim175
; p end address is: 16 (R4)
; trimmed end address is: 20 (R5)
; original end address is: 0 (R0)
;__Lib_Conversions.c, 545 :: 		
0x06D0	0x4618    MOV	R0, R3
; string end address is: 12 (R3)
;__Lib_Conversions.c, 546 :: 		
L_end_Ltrim:
0x06D2	0xB001    ADD	SP, SP, #4
0x06D4	0x4770    BX	LR
; end of _Ltrim
_debug:
;magnetometer.c, 34 :: 		void debug(char* d) {
0x067C	0xB082    SUB	SP, SP, #8
0x067E	0xF8CDE000  STR	LR, [SP, #0]
0x0682	0x9001    STR	R0, [SP, #4]
;magnetometer.c, 35 :: 		clear_lcd();
0x0684	0xF000FF00  BL	_clear_lcd+0
;magnetometer.c, 36 :: 		set_position(0,0);
0x0688	0x2100    MOVS	R1, #0
0x068A	0x2000    MOVS	R0, #0
0x068C	0xF000FE90  BL	_set_position+0
;magnetometer.c, 37 :: 		write_string(d);
0x0690	0x9801    LDR	R0, [SP, #4]
0x0692	0xF000FDC5  BL	_write_string+0
;magnetometer.c, 38 :: 		}
L_end_debug:
0x0696	0xF8DDE000  LDR	LR, [SP, #0]
0x069A	0xB002    ADD	SP, SP, #8
0x069C	0x4770    BX	LR
; end of _debug
_clear_lcd:
;lcd.c, 82 :: 		void clear_lcd() {
;lcd.c, 83 :: 		START_COMMAND;
0x1488	0x2100    MOVS	R1, #0
0x148A	0x4821    LDR	R0, [PC, #132]
0x148C	0x6001    STR	R1, [R0, #0]
;lcd.c, 84 :: 		send_word(LCD_CLEAR_DISPLAY);
0x148E	0x4820    LDR	R0, [PC, #128]
0x1490	0x6800    LDR	R0, [R0, #0]
0x1492	0xF4405100  ORR	R1, R0, #8192
0x1496	0x481E    LDR	R0, [PC, #120]
0x1498	0x6001    STR	R1, [R0, #0]
0x149A	0x481D    LDR	R0, [PC, #116]
0x149C	0x6801    LDR	R1, [R0, #0]
0x149E	0xF06F000F  MVN	R0, #15
0x14A2	0x4001    ANDS	R1, R0
0x14A4	0x481A    LDR	R0, [PC, #104]
0x14A6	0x6001    STR	R1, [R0, #0]
0x14A8	0x4819    LDR	R0, [PC, #100]
0x14AA	0x6801    LDR	R1, [R0, #0]
0x14AC	0xF46F5000  MVN	R0, #8192
0x14B0	0x4001    ANDS	R1, R0
0x14B2	0x4817    LDR	R0, [PC, #92]
0x14B4	0x6001    STR	R1, [R0, #0]
0x14B6	0xF2400709  MOVW	R7, #9
0x14BA	0xF2C00700  MOVT	R7, #0
0x14BE	0xBF00    NOP
0x14C0	0xBF00    NOP
L_clear_lcd69:
0x14C2	0x1E7F    SUBS	R7, R7, #1
0x14C4	0xD1FD    BNE	L_clear_lcd69
0x14C6	0xBF00    NOP
0x14C8	0xBF00    NOP
0x14CA	0x4811    LDR	R0, [PC, #68]
0x14CC	0x6800    LDR	R0, [R0, #0]
0x14CE	0xF4405100  ORR	R1, R0, #8192
0x14D2	0x480F    LDR	R0, [PC, #60]
0x14D4	0x6001    STR	R1, [R0, #0]
0x14D6	0x480E    LDR	R0, [PC, #56]
0x14D8	0x6801    LDR	R1, [R0, #0]
0x14DA	0xF06F000F  MVN	R0, #15
0x14DE	0xEA010000  AND	R0, R1, R0, LSL #0
0x14E2	0xF0400101  ORR	R1, R0, #1
0x14E6	0x480A    LDR	R0, [PC, #40]
0x14E8	0x6001    STR	R1, [R0, #0]
0x14EA	0x4809    LDR	R0, [PC, #36]
0x14EC	0x6801    LDR	R1, [R0, #0]
0x14EE	0xF46F5000  MVN	R0, #8192
0x14F2	0x4001    ANDS	R1, R0
0x14F4	0x4806    LDR	R0, [PC, #24]
0x14F6	0x6001    STR	R1, [R0, #0]
0x14F8	0xF2400709  MOVW	R7, #9
0x14FC	0xF2C00700  MOVT	R7, #0
L_clear_lcd71:
0x1500	0x1E7F    SUBS	R7, R7, #1
0x1502	0xD1FD    BNE	L_clear_lcd71
0x1504	0xBF00    NOP
0x1506	0xBF00    NOP
0x1508	0xBF00    NOP
0x150A	0xBF00    NOP
;lcd.c, 86 :: 		}
L_end_clear_lcd:
0x150C	0x4770    BX	LR
0x150E	0xBF00    NOP
0x1510	0x08144002  	GPIOC_ODR+0
; end of _clear_lcd
_set_position:
;lcd.c, 56 :: 		void set_position(char x, char y){
; y start address is: 4 (R1)
; x start address is: 0 (R0)
; y end address is: 4 (R1)
; x end address is: 0 (R0)
; x start address is: 0 (R0)
; y start address is: 4 (R1)
;lcd.c, 58 :: 		switch(x){
0x13B0	0xE007    B	L_set_position50
; x end address is: 0 (R0)
;lcd.c, 59 :: 		case 0: pos = y; break;
L_set_position52:
; pos start address is: 0 (R0)
0x13B2	0xB2C8    UXTB	R0, R1
; y end address is: 4 (R1)
; pos end address is: 0 (R0)
0x13B4	0xE00A    B	L_set_position51
;lcd.c, 60 :: 		case 1: pos = 0x40+y; break;
L_set_position53:
; y start address is: 4 (R1)
0x13B6	0xF2010240  ADDW	R2, R1, #64
; y end address is: 4 (R1)
; pos start address is: 0 (R0)
0x13BA	0xB2D0    UXTB	R0, R2
; pos end address is: 0 (R0)
0x13BC	0xE006    B	L_set_position51
;lcd.c, 61 :: 		default: pos = y;
L_set_position54:
; pos start address is: 0 (R0)
; y start address is: 4 (R1)
0x13BE	0xB2C8    UXTB	R0, R1
; y end address is: 4 (R1)
;lcd.c, 62 :: 		}
; pos end address is: 0 (R0)
0x13C0	0xE004    B	L_set_position51
L_set_position50:
; y start address is: 4 (R1)
; x start address is: 0 (R0)
0x13C2	0x2800    CMP	R0, #0
0x13C4	0xD0F5    BEQ	L_set_position52
0x13C6	0x2801    CMP	R0, #1
0x13C8	0xD0F5    BEQ	L_set_position53
; x end address is: 0 (R0)
0x13CA	0xE7F8    B	L_set_position54
; y end address is: 4 (R1)
L_set_position51:
;lcd.c, 64 :: 		GPIOC_ODR = 0;
; pos start address is: 0 (R0)
0x13CC	0x2300    MOVS	R3, #0
0x13CE	0x4A2C    LDR	R2, [PC, #176]
0x13D0	0x6013    STR	R3, [R2, #0]
;lcd.c, 65 :: 		send_word(0x80 | pos);
0x13D2	0x4A2B    LDR	R2, [PC, #172]
0x13D4	0x6812    LDR	R2, [R2, #0]
0x13D6	0xF4425300  ORR	R3, R2, #8192
0x13DA	0x4A29    LDR	R2, [PC, #164]
0x13DC	0x6013    STR	R3, [R2, #0]
0x13DE	0x4A28    LDR	R2, [PC, #160]
0x13E0	0x6813    LDR	R3, [R2, #0]
0x13E2	0xF06F020F  MVN	R2, #15
0x13E6	0xEA030202  AND	R2, R3, R2, LSL #0
0x13EA	0xF0420380  ORR	R3, R2, #128
0x13EE	0x0902    LSRS	R2, R0, #4
0x13F0	0xB2D2    UXTB	R2, R2
0x13F2	0x4313    ORRS	R3, R2
0x13F4	0x4A22    LDR	R2, [PC, #136]
0x13F6	0x6013    STR	R3, [R2, #0]
0x13F8	0x4A21    LDR	R2, [PC, #132]
0x13FA	0x6813    LDR	R3, [R2, #0]
0x13FC	0xF46F5200  MVN	R2, #8192
0x1400	0x4013    ANDS	R3, R2
0x1402	0x4A1F    LDR	R2, [PC, #124]
0x1404	0x6013    STR	R3, [R2, #0]
0x1406	0xF2400709  MOVW	R7, #9
0x140A	0xF2C00700  MOVT	R7, #0
0x140E	0xBF00    NOP
0x1410	0xBF00    NOP
L_set_position55:
0x1412	0x1E7F    SUBS	R7, R7, #1
0x1414	0xD1FD    BNE	L_set_position55
0x1416	0xBF00    NOP
0x1418	0xBF00    NOP
0x141A	0x4A19    LDR	R2, [PC, #100]
0x141C	0x6812    LDR	R2, [R2, #0]
0x141E	0xF4425300  ORR	R3, R2, #8192
0x1422	0x4A17    LDR	R2, [PC, #92]
0x1424	0x6013    STR	R3, [R2, #0]
0x1426	0x4A16    LDR	R2, [PC, #88]
0x1428	0x6813    LDR	R3, [R2, #0]
0x142A	0xF06F020F  MVN	R2, #15
0x142E	0xEA030202  AND	R2, R3, R2, LSL #0
0x1432	0xF0420380  ORR	R3, R2, #128
0x1436	0xF000020F  AND	R2, R0, #15
0x143A	0xB2D2    UXTB	R2, R2
; pos end address is: 0 (R0)
0x143C	0x4313    ORRS	R3, R2
0x143E	0x4A10    LDR	R2, [PC, #64]
0x1440	0x6013    STR	R3, [R2, #0]
0x1442	0x4A0F    LDR	R2, [PC, #60]
0x1444	0x6813    LDR	R3, [R2, #0]
0x1446	0xF46F5200  MVN	R2, #8192
0x144A	0x4013    ANDS	R3, R2
0x144C	0x4A0C    LDR	R2, [PC, #48]
0x144E	0x6013    STR	R3, [R2, #0]
0x1450	0xF2400709  MOVW	R7, #9
0x1454	0xF2C00700  MOVT	R7, #0
L_set_position57:
0x1458	0x1E7F    SUBS	R7, R7, #1
0x145A	0xD1FD    BNE	L_set_position57
0x145C	0xBF00    NOP
0x145E	0xBF00    NOP
0x1460	0xBF00    NOP
0x1462	0xBF00    NOP
;lcd.c, 66 :: 		Delay_ms(20);
0x1464	0xF2441753  MOVW	R7, #16723
0x1468	0xF2C00703  MOVT	R7, #3
0x146C	0xBF00    NOP
0x146E	0xBF00    NOP
L_set_position59:
0x1470	0x1E7F    SUBS	R7, R7, #1
0x1472	0xD1FD    BNE	L_set_position59
0x1474	0xBF00    NOP
0x1476	0xBF00    NOP
0x1478	0xBF00    NOP
0x147A	0xBF00    NOP
;lcd.c, 67 :: 		}
L_end_set_position:
0x147C	0x4770    BX	LR
0x147E	0xBF00    NOP
0x1480	0x08144002  	GPIOC_ODR+0
; end of _set_position
_write_string:
;lcd.c, 75 :: 		void write_string(char* c) {
; c start address is: 0 (R0)
0x1220	0xB081    SUB	SP, SP, #4
0x1222	0xF8CDE000  STR	LR, [SP, #0]
; c end address is: 0 (R0)
; c start address is: 0 (R0)
0x1226	0x4603    MOV	R3, R0
; c end address is: 0 (R0)
;lcd.c, 76 :: 		while(*c != '\0') {
L_write_string67:
; c start address is: 12 (R3)
0x1228	0x7819    LDRB	R1, [R3, #0]
0x122A	0xB129    CBZ	R1, L_write_string68
;lcd.c, 77 :: 		write_lcd(*c);
0x122C	0x7819    LDRB	R1, [R3, #0]
0x122E	0xB2C8    UXTB	R0, R1
0x1230	0xF7FFF93A  BL	_write_lcd+0
;lcd.c, 78 :: 		c++;
0x1234	0x1C5B    ADDS	R3, R3, #1
;lcd.c, 79 :: 		}
; c end address is: 12 (R3)
0x1236	0xE7F7    B	L_write_string67
L_write_string68:
;lcd.c, 80 :: 		}
L_end_write_string:
0x1238	0xF8DDE000  LDR	LR, [SP, #0]
0x123C	0xB001    ADD	SP, SP, #4
0x123E	0x4770    BX	LR
; end of _write_string
_write_lcd:
;lcd.c, 69 :: 		void write_lcd(char c) {
; c start address is: 0 (R0)
; c end address is: 0 (R0)
; c start address is: 0 (R0)
;lcd.c, 70 :: 		GPIOC_ODR = W_RAM;
0x04A8	0x2210    MOVS	R2, #16
0x04AA	0x4929    LDR	R1, [PC, #164]
0x04AC	0x600A    STR	R2, [R1, #0]
;lcd.c, 71 :: 		send_word(c);
0x04AE	0x4928    LDR	R1, [PC, #160]
0x04B0	0x6809    LDR	R1, [R1, #0]
0x04B2	0xF4415200  ORR	R2, R1, #8192
0x04B6	0x4926    LDR	R1, [PC, #152]
0x04B8	0x600A    STR	R2, [R1, #0]
0x04BA	0x4925    LDR	R1, [PC, #148]
0x04BC	0x680A    LDR	R2, [R1, #0]
0x04BE	0xF06F010F  MVN	R1, #15
0x04C2	0x400A    ANDS	R2, R1
0x04C4	0x0901    LSRS	R1, R0, #4
0x04C6	0xB2C9    UXTB	R1, R1
0x04C8	0x430A    ORRS	R2, R1
0x04CA	0x4921    LDR	R1, [PC, #132]
0x04CC	0x600A    STR	R2, [R1, #0]
0x04CE	0x4920    LDR	R1, [PC, #128]
0x04D0	0x680A    LDR	R2, [R1, #0]
0x04D2	0xF46F5100  MVN	R1, #8192
0x04D6	0x400A    ANDS	R2, R1
0x04D8	0x491D    LDR	R1, [PC, #116]
0x04DA	0x600A    STR	R2, [R1, #0]
0x04DC	0xF2400709  MOVW	R7, #9
0x04E0	0xF2C00700  MOVT	R7, #0
0x04E4	0xBF00    NOP
0x04E6	0xBF00    NOP
L_write_lcd61:
0x04E8	0x1E7F    SUBS	R7, R7, #1
0x04EA	0xD1FD    BNE	L_write_lcd61
0x04EC	0xBF00    NOP
0x04EE	0xBF00    NOP
0x04F0	0x4917    LDR	R1, [PC, #92]
0x04F2	0x6809    LDR	R1, [R1, #0]
0x04F4	0xF4415200  ORR	R2, R1, #8192
0x04F8	0x4915    LDR	R1, [PC, #84]
0x04FA	0x600A    STR	R2, [R1, #0]
0x04FC	0x4914    LDR	R1, [PC, #80]
0x04FE	0x680A    LDR	R2, [R1, #0]
0x0500	0xF06F010F  MVN	R1, #15
0x0504	0x400A    ANDS	R2, R1
0x0506	0xF000010F  AND	R1, R0, #15
0x050A	0xB2C9    UXTB	R1, R1
; c end address is: 0 (R0)
0x050C	0x430A    ORRS	R2, R1
0x050E	0x4910    LDR	R1, [PC, #64]
0x0510	0x600A    STR	R2, [R1, #0]
0x0512	0x490F    LDR	R1, [PC, #60]
0x0514	0x680A    LDR	R2, [R1, #0]
0x0516	0xF46F5100  MVN	R1, #8192
0x051A	0x400A    ANDS	R2, R1
0x051C	0x490C    LDR	R1, [PC, #48]
0x051E	0x600A    STR	R2, [R1, #0]
0x0520	0xF2400709  MOVW	R7, #9
0x0524	0xF2C00700  MOVT	R7, #0
L_write_lcd63:
0x0528	0x1E7F    SUBS	R7, R7, #1
0x052A	0xD1FD    BNE	L_write_lcd63
0x052C	0xBF00    NOP
0x052E	0xBF00    NOP
0x0530	0xBF00    NOP
0x0532	0xBF00    NOP
;lcd.c, 72 :: 		Delay_ms(2);
0x0534	0xF2453753  MOVW	R7, #21331
0x0538	0xF2C00700  MOVT	R7, #0
0x053C	0xBF00    NOP
0x053E	0xBF00    NOP
L_write_lcd65:
0x0540	0x1E7F    SUBS	R7, R7, #1
0x0542	0xD1FD    BNE	L_write_lcd65
0x0544	0xBF00    NOP
0x0546	0xBF00    NOP
0x0548	0xBF00    NOP
0x054A	0xBF00    NOP
;lcd.c, 73 :: 		}
L_end_write_lcd:
0x054C	0x4770    BX	LR
0x054E	0xBF00    NOP
0x0550	0x08144002  	GPIOC_ODR+0
; end of _write_lcd
_error_interrupt:
;i2c.c, 55 :: 		void error_interrupt() iv  IVT_INT_I2C2_ER ics ICS_AUTO {
0x1518	0xF84D7D04  PUSH	(R7)
0x151C	0xB081    SUB	SP, SP, #4
0x151E	0xF8CDE000  STR	LR, [SP, #0]
;i2c.c, 56 :: 		DisableInterrupts();
0x1522	0xF7FFFEF9  BL	_DisableInterrupts+0
;i2c.c, 57 :: 		clear_lcd();
0x1526	0xF7FFFFAF  BL	_clear_lcd+0
;i2c.c, 58 :: 		set_position(0, 0);
0x152A	0x2100    MOVS	R1, #0
0x152C	0x2000    MOVS	R0, #0
0x152E	0xF7FFFF3F  BL	_set_position+0
;i2c.c, 59 :: 		write_string("ERROR: ");
0x1532	0x4820    LDR	R0, [PC, #128]
0x1534	0xF7FFFE74  BL	_write_string+0
;i2c.c, 60 :: 		if(I2C2_SR1bits.BERR == 1){
0x1538	0x491F    LDR	R1, [PC, #124]
0x153A	0x6808    LDR	R0, [R1, #0]
0x153C	0xB120    CBZ	R0, L_error_interrupt10
;i2c.c, 61 :: 		write_string("BERR");
0x153E	0x481F    LDR	R0, [PC, #124]
0x1540	0xF7FFFE6E  BL	_write_string+0
;i2c.c, 62 :: 		EnableInterrupts();
0x1544	0xF7FFFF2C  BL	_EnableInterrupts+0
;i2c.c, 63 :: 		}
L_error_interrupt10:
;i2c.c, 65 :: 		if(I2C2_SR1bits.AF == 1){
0x1548	0x491D    LDR	R1, [PC, #116]
0x154A	0x6808    LDR	R0, [R1, #0]
0x154C	0xB110    CBZ	R0, L_error_interrupt11
;i2c.c, 66 :: 		write_string("AF");
0x154E	0x481D    LDR	R0, [PC, #116]
0x1550	0xF7FFFE66  BL	_write_string+0
;i2c.c, 67 :: 		}
L_error_interrupt11:
;i2c.c, 69 :: 		if(I2C2_SR1bits.ARLO == 1){
0x1554	0x491C    LDR	R1, [PC, #112]
0x1556	0x6808    LDR	R0, [R1, #0]
0x1558	0xB110    CBZ	R0, L_error_interrupt12
;i2c.c, 70 :: 		write_string("ARLO");
0x155A	0x481C    LDR	R0, [PC, #112]
0x155C	0xF7FFFE60  BL	_write_string+0
;i2c.c, 71 :: 		}
L_error_interrupt12:
;i2c.c, 73 :: 		if(I2C2_SR1bits.OVR == 1){
0x1560	0x491B    LDR	R1, [PC, #108]
0x1562	0x6808    LDR	R0, [R1, #0]
0x1564	0xB110    CBZ	R0, L_error_interrupt13
;i2c.c, 74 :: 		write_string("OVR");
0x1566	0x481B    LDR	R0, [PC, #108]
0x1568	0xF7FFFE5A  BL	_write_string+0
;i2c.c, 75 :: 		}
L_error_interrupt13:
;i2c.c, 77 :: 		if(I2C2_SR1bits.PECERR == 1){
0x156C	0x491A    LDR	R1, [PC, #104]
0x156E	0x6808    LDR	R0, [R1, #0]
0x1570	0xB110    CBZ	R0, L_error_interrupt14
;i2c.c, 78 :: 		write_string("PECERR");
0x1572	0x481A    LDR	R0, [PC, #104]
0x1574	0xF7FFFE54  BL	_write_string+0
;i2c.c, 79 :: 		}
L_error_interrupt14:
;i2c.c, 81 :: 		if(I2C2_SR1bits.TIMEOUT == 1){
0x1578	0x4919    LDR	R1, [PC, #100]
0x157A	0x6808    LDR	R0, [R1, #0]
0x157C	0xB110    CBZ	R0, L_error_interrupt15
;i2c.c, 82 :: 		write_string("TIMEOUT");
0x157E	0x4819    LDR	R0, [PC, #100]
0x1580	0xF7FFFE4E  BL	_write_string+0
;i2c.c, 83 :: 		}
L_error_interrupt15:
;i2c.c, 85 :: 		if(I2C2_SR1bits.SMBALERT == 1){
0x1584	0x4918    LDR	R1, [PC, #96]
0x1586	0x6808    LDR	R0, [R1, #0]
0x1588	0xB110    CBZ	R0, L_error_interrupt16
;i2c.c, 86 :: 		write_string("SMBALERT");
0x158A	0x4818    LDR	R0, [PC, #96]
0x158C	0xF7FFFE48  BL	_write_string+0
;i2c.c, 87 :: 		}
L_error_interrupt16:
;i2c.c, 89 :: 		Delay_ms(1000);
0x1590	0xF24C27A9  MOVW	R7, #49833
0x1594	0xF2C007A2  MOVT	R7, #162
L_error_interrupt17:
0x1598	0x1E7F    SUBS	R7, R7, #1
0x159A	0xD1FD    BNE	L_error_interrupt17
0x159C	0xBF00    NOP
0x159E	0xBF00    NOP
0x15A0	0xBF00    NOP
0x15A2	0xBF00    NOP
;i2c.c, 90 :: 		EnableInterrupts();
0x15A4	0xF7FFFEFC  BL	_EnableInterrupts+0
;i2c.c, 91 :: 		}
L_end_error_interrupt:
0x15A8	0xF8DDE000  LDR	LR, [SP, #0]
0x15AC	0xB001    ADD	SP, SP, #4
0x15AE	0xF85D7B04  POP	(R7)
0x15B2	0x4770    BX	LR
0x15B4	0x00082000  	?lstr1_i2c+0
0x15B8	0x02A0420B  	I2C2_SR1bits+0
0x15BC	0x00102000  	?lstr2_i2c+0
0x15C0	0x02A8420B  	I2C2_SR1bits+0
0x15C4	0x00152000  	?lstr3_i2c+0
0x15C8	0x02A4420B  	I2C2_SR1bits+0
0x15CC	0x00182000  	?lstr4_i2c+0
0x15D0	0x02AC420B  	I2C2_SR1bits+0
0x15D4	0x001D2000  	?lstr5_i2c+0
0x15D8	0x02B0420B  	I2C2_SR1bits+0
0x15DC	0x00212000  	?lstr6_i2c+0
0x15E0	0x02B8420B  	I2C2_SR1bits+0
0x15E4	0x00282000  	?lstr7_i2c+0
0x15E8	0x02BC420B  	I2C2_SR1bits+0
0x15EC	0x00302000  	?lstr8_i2c+0
; end of _error_interrupt
;magnetometer.c,0 :: ?ICS_reg_send [2]
0x1C26	0x0000 ;?ICS_reg_send+0
; end of ?ICS_reg_send
;magnetometer.c,0 :: ?ICS_is_configured [2]
0x1C28	0x0000 ;?ICS_is_configured+0
; end of ?ICS_is_configured
;magnetometer.c,0 :: ?ICS_reading_xyz [2]
0x1C2A	0x0000 ;?ICS_reading_xyz+0
; end of ?ICS_reading_xyz
;i2c.c,0 :: ?ICS_state_ [2]
0x1C2C	0x0000 ;?ICS_state_+0
; end of ?ICS_state_
;i2c.c,0 :: ?ICS?lstr1_i2c [8]
0x1C2E	0x4F525245 ;?ICS?lstr1_i2c+0
0x1C32	0x00203A52 ;?ICS?lstr1_i2c+4
; end of ?ICS?lstr1_i2c
;,0 :: _initBlock_5 [8]
; Containing: ?ICS?lstr2_i2c [5]
;             ?ICS?lstr3_i2c [3]
0x1C36	0x52524542 ;_initBlock_5+0 : ?ICS?lstr2_i2c at 0x1C36
0x1C3A	0x00464100 ;_initBlock_5+4 : ?ICS?lstr3_i2c at 0x1C3B
; end of _initBlock_5
;,0 :: _initBlock_6 [16]
; Containing: ?ICS?lstr4_i2c [5]
;             ?ICS?lstr5_i2c [4]
;             ?ICS?lstr6_i2c [7]
0x1C3E	0x4F4C5241 ;_initBlock_6+0 : ?ICS?lstr4_i2c at 0x1C3E
0x1C42	0x52564F00 ;_initBlock_6+4 : ?ICS?lstr5_i2c at 0x1C43
0x1C46	0x43455000 ;_initBlock_6+8 : ?ICS?lstr6_i2c at 0x1C47
0x1C4A	0x00525245 ;_initBlock_6+12
; end of _initBlock_6
;i2c.c,0 :: ?ICS?lstr7_i2c [8]
0x1C4E	0x454D4954 ;?ICS?lstr7_i2c+0
0x1C52	0x0054554F ;?ICS?lstr7_i2c+4
; end of ?ICS?lstr7_i2c
;i2c.c,0 :: ?ICS?lstr8_i2c [9]
0x1C56	0x41424D53 ;?ICS?lstr8_i2c+0
0x1C5A	0x5452454C ;?ICS?lstr8_i2c+4
0x1C5E	0x00 ;?ICS?lstr8_i2c+8
; end of ?ICS?lstr8_i2c
;__Lib_CMath.c,180 :: atan_coeff_a_L0 [24]
0x1C60	0x42043C06 ;atan_coeff_a_L0+0
0x1C64	0x426A9F7D ;atan_coeff_a_L0+4
0x1C68	0x4201905C ;atan_coeff_a_L0+8
0x1C6C	0x40BB4D60 ;atan_coeff_a_L0+12
0x1C70	0x3E47EC51 ;atan_coeff_a_L0+16
0x1C74	0xBB1F8DDE ;atan_coeff_a_L0+20
; end of atan_coeff_a_L0
;__Lib_CMath.c,188 :: atan_coeff_b_L0 [20]
0x1C78	0x42043C06 ;atan_coeff_b_L0+0
0x1C7C	0x428B59C0 ;atan_coeff_b_L0+4
0x1C80	0x42440474 ;atan_coeff_b_L0+8
0x1C84	0x414F9BF9 ;atan_coeff_b_L0+12
0x1C88	0x3F800000 ;atan_coeff_b_L0+16
; end of atan_coeff_b_L0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0188      [64]    __Lib_CMath_eval_poly
0x01C8      [30]    _fabs
0x01E8     [126]    _read_xyz
0x0268     [172]    _atan
0x0314      [80]    _WordToStr
0x0364      [76]    _i2c_send_async
0x03B0      [76]    _i2c_recv_async
0x03FC     [168]    _configure_exti
0x04A8     [172]    _write_lcd
0x0554     [184]    _atan2
0x060C     [110]    _IntToStr
0x067C      [34]    _debug
0x06A0      [54]    _Ltrim
0x06D8      [20]    _i2c_send_addr_async
0x06EC      [56]    _write_reg
0x0724     [160]    _i2c_config
0x07C4     [120]    _NVIC_IntEnable
0x083C      [24]    _send_reg_addr_async
0x0854      [16]    _i2c_start_async
0x0864      [16]    _i2c_stop_
0x0874      [12]    _i2c_recv
0x0880      [32]    _i2c_send_addr
0x08A0      [20]    _i2c_send
0x08B4     [236]    _calcAngle
0x09A0      [58]    ___FillZeros
0x09DC      [20]    ___CC2DW
0x09F0     [512]    _init_io
0x0BF0     [244]    _i2c_init
0x0CE8    [1260]    _init_lcd
0x11D4      [76]    __Lib_System_4XX_SystemClockSetDefault
0x1220      [32]    _write_string
0x1240      [36]    _i2c_start_
0x1264      [56]    _read_reg
0x12A0     [120]    _init_magnetometer
0x1318      [14]    _DisableInterrupts
0x1328     [120]    _i2c_get_event
0x13A0      [14]    _EnableInterrupts
0x13B0     [212]    _set_position
0x1488     [140]    _clear_lcd
0x1518     [216]    _error_interrupt
0x15F0      [36]    __Lib_System_4XX_InitialSetUpFosc
0x1614     [864]    __Lib_System_4XX_InitialSetUpRCCRCC2
0x1974      [42]    _main
0x19A0       [8]    ___GenExcept
0x19A8     [520]    _event_handler
0x1BB0      [76]    _interrupt_handle
0x1BFC      [42]    ___EnableFPU
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [4]    FARG_floor_x
0x0000       [4]    FARG_ceil_x
0x0000       [4]    FARG_frexp_value
0x0000       [4]    FARG_sqrt_x
0x0000       [4]    FARG_atan_f
0x0000       [4]    FARG_acos_x
0x0000       [4]    FARG_asin_x
0x0000       [4]    FARG_ldexp_value
0x0000       [4]    FARG___Lib_CMath_eval_poly_x
0x0000       [4]    FARG_modf_val
0x0000       [4]    FARG_fabs_d
0x0000       [4]    FARG_atan2_y
0x0000       [4]    FARG_tanh_x
0x0000       [4]    FARG_sinh_x
0x0000       [4]    FARG_pow_x
0x0000       [4]    FARG_cosh_x
0x0000       [4]    FARG_log_x
0x0000       [4]    FARG_log10_x
0x0000       [4]    FARG_exp_x
0x0000       [4]    FARG_sin_f
0x0000       [4]    FARG_cos_f
0x0000       [4]    FARG_tan_x
0x0000       [8]    FARG_LongDoubleToStr_dnum
0x0000       [4]    FARG_FloatToStr_fnum
0x0004       [4]    FARG_atan2_x
0x0004       [4]    FARG_pow_y
0x20000000       [2]    _reg_send
0x20000002       [2]    _is_configured
0x20000004       [2]    _reading_xyz
0x20000006       [2]    _state_
0x20000008       [8]    ?lstr1_i2c
0x20000010       [5]    ?lstr2_i2c
0x20000015       [3]    ?lstr3_i2c
0x20000018       [5]    ?lstr4_i2c
0x2000001D       [4]    ?lstr5_i2c
0x20000021       [7]    ?lstr6_i2c
0x20000028       [8]    ?lstr7_i2c
0x20000030       [9]    ?lstr8_i2c
0x20000039       [1]    _address
0x2000003A       [2]    _transfer_count
0x2000003C       [4]    _transfer
0x20000040       [2]    _should_start
0x20000042       [2]    _r_notw
0x20000044       [2]    _enabl
0x20000046       [1]    _reg_addr
0x20000048       [4]    ___System_CLOCK_IN_KHZ
0x2000004C       [4]    __VOLTAGE_RANGE
0x20000050       [6]    _xyz
0x20000056       [2]    _dummy1
0x20000058       [4]    _sreg
0x2000005C       [2]    _dummy2
0x2000005E       [2]    _curr_transfer
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x1C26       [2]    ?ICS_reg_send
0x1C28       [2]    ?ICS_is_configured
0x1C2A       [2]    ?ICS_reading_xyz
0x1C2C       [2]    ?ICS_state_
0x1C2E       [8]    ?ICS?lstr1_i2c
0x1C36       [5]    ?ICS?lstr2_i2c
0x1C3B       [3]    ?ICS?lstr3_i2c
0x1C3E       [5]    ?ICS?lstr4_i2c
0x1C43       [4]    ?ICS?lstr5_i2c
0x1C47       [7]    ?ICS?lstr6_i2c
0x1C4E       [8]    ?ICS?lstr7_i2c
0x1C56       [9]    ?ICS?lstr8_i2c
0x1C60      [24]    atan_coeff_a_L0
0x1C78      [20]    atan_coeff_b_L0
